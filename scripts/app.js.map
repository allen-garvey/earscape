{"version":3,"sources":["band.min.js","vextab-div.js","init.js","array.js","models.js","controllers.js","app.js"],"names":[],"mappingslz3BA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvnfile":"app.js","sourcesContent":["/*! BandJS - v1.1.1 - 2014-07-22 */\n!function(a){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=a();else if(\"function\"==typeof define&&define.amd)define([],a);else{var b;\"undefined\"!=typeof window?b=window:\"undefined\"!=typeof global?b=global:\"undefined\"!=typeof self&&(b=self),b.BandJS=a()}}(function(){return function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i=\"function\"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);throw new Error(\"Cannot find module '\"+g+\"'\")}var j=c[g]={exports:{}};b[g][0].call(j.exports,function(a){var c=b[g][1][a];return e(c?c:a)},j,j.exports,a,b,c,d)}return c[g].exports}for(var f=\"function\"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){!function(a){\"object\"==typeof c&&(b.exports=a())}(function(){return window.AudioContext||window.webkitAudioContext})},{}],2:[function(a,b){function c(b,c){if(b||(b=\"equalTemperament\"),c||(c=\"northAmerican\"),\"undefined\"==typeof d.tuning[b])throw new Error(b+\" is not a valid tuning pack.\");if(\"undefined\"==typeof d.rhythm[c])throw new Error(c+\" is not a valid rhythm pack.\");var e,f=this,g=function(){},h=a(\"audiocontext\"),i={2:6,4:3,8:4.5};f.packs=d,f.pitches=d.tuning[b],f.notes=d.rhythm[c],f.audioContext=new h,f.masterVolumeLevel=null,f.masterVolume=f.audioContext.createGain(),f.masterVolume.connect(f.audioContext.destination),f.beatsPerBar=null,f.noteGetsBeat=null,f.tempo=null,f.instruments=[],f.totalDuration=0,f.currentSeconds=0,f.percentageComplete=0,f.noteBufferLength=20,f.onTickerCallback=g,f.onFinishedCallback=g,f.onDurationChangeCallback=g,f.load=function(a){if(f.instruments.length>0&&f.destroy(),!a)throw new Error(\"JSON is required for this method to work.\");if(\"undefined\"==typeof a.instruments)throw new Error(\"You must define at least one instrument\");if(\"undefined\"==typeof a.notes)throw new Error(\"You must define notes for each instrument\");\"undefined\"!=typeof a.timeSignature&&f.setTimeSignature(a.timeSignature[0],a.timeSignature[1]),\"undefined\"!=typeof a.tempo&&f.setTempo(a.tempo);var b={};for(var c in a.instruments)a.instruments.hasOwnProperty(c)&&(b[c]=f.createInstrument(a.instruments[c].name,a.instruments[c].pack));for(var d in a.notes)if(a.notes.hasOwnProperty(d))for(var e=-1;++e<a.notes[d].length;){var g=a.notes[d][e];if(\"string\"==typeof g){var h=g.split(\"|\");\"rest\"===h[1]?b[d].rest(h[0]):b[d].note(h[0],h[1],h[2])}else\"rest\"===g.type?b[d].rest(g.rhythm):\"note\"===g.type&&b[d].note(g.rhythm,g.pitch,g.tie)}return f.finish()},f.createInstrument=function(b,c){var d=a(\"./instrument.js\"),e=new d(b,c,f);return f.instruments.push(e),e},f.finish=function(){var b=a(\"./player.js\");return e=new b(f)},f.destroy=function(){f.audioContext=new h,f.instruments.length=0,f.masterVolume=f.audioContext.createGain(),f.masterVolume.connect(f.audioContext.destination)},f.setMasterVolume=function(a){a>1&&(a/=100),f.masterVolumeLevel=a,f.masterVolume.gain.setValueAtTime(a,f.audioContext.currentTime)},f.getTotalSeconds=function(){return Math.round(f.totalDuration)},f.setTickerCallback=function(a){if(\"function\"!=typeof a)throw new Error(\"Ticker must be a function.\");f.onTickerCallback=a},f.setTimeSignature=function(a,b){if(\"undefined\"==typeof i[b])throw new Error(\"The bottom time signature is not supported.\");f.beatsPerBar=a,f.noteGetsBeat=i[b]},f.setTempo=function(a){f.tempo=60/a,e&&(e.resetTempo(),f.onDurationChangeCallback())},f.setOnFinishedCallback=function(a){if(\"function\"!=typeof a)throw new Error(\"onFinished callback must be a function.\");f.onFinishedCallback=a},f.setOnDurationChangeCallback=function(a){if(\"function\"!=typeof a)throw new Error(\"onDurationChanged callback must be a function.\");f.onDurationChangeCallback=a},f.setNoteBufferLength=function(a){f.noteBufferLength=a},f.setMasterVolume(100),f.setTempo(120),f.setTimeSignature(4,4)}b.exports=c;var d={instrument:{},rhythm:{},tuning:{}};c.loadPack=function(a,b,c){if(-1===[\"tuning\",\"rhythm\",\"instrument\"].indexOf(a))throw new Error(a+\" is not a valid Pack Type.\");if(\"undefined\"!=typeof d[a][b])throw new Error(\"A(n) \"+a+' pack with the name \"'+b+'\" has already been loaded.');d[a][b]=c}},{\"./instrument.js\":5,\"./player.js\":7,audiocontext:1}],3:[function(a,b){function c(a,b){function c(a){for(var c=2*b.sampleRate,d=b.createBuffer(1,c,b.sampleRate),e=d.getChannelData(0),f=0;c>f;f++)e[f]=2*Math.random()-1;var g=b.createBufferSource();return g.buffer=d,g.loop=!0,g.connect(a),g}function d(a){var c,d,e,f,g,h,i,j=2*b.sampleRate,k=b.createBuffer(1,j,b.sampleRate),l=k.getChannelData(0);c=d=e=f=g=h=i=0;for(var m=0;j>m;m++){var n=2*Math.random()-1;c=.99886*c+.0555179*n,d=.99332*d+.0750759*n,e=.969*e+.153852*n,f=.8665*f+.3104856*n,g=.55*g+.5329522*n,h=-.7616*h-.016898*n,l[m]=c+d+e+f+g+h+i+.5362*n,l[m]*=.11,i=.115926*n}var o=b.createBufferSource();return o.buffer=k,o.loop=!0,o.connect(a),o}function e(a){for(var c=2*b.sampleRate,d=b.createBuffer(1,c,b.sampleRate),e=d.getChannelData(0),f=0,g=0;c>g;g++){var h=2*Math.random()-1;e[g]=(f+.02*h)/1.02,f=e[g],e[g]*=3.5}var i=b.createBufferSource();return i.buffer=d,i.loop=!0,i.connect(a),i}var f=[\"white\",\"pink\",\"brown\",\"brownian\",\"red\"];if(-1===f.indexOf(a))throw new Error(a+\" is not a valid noise sound\");return{createNote:function(b){switch(a){case\"white\":return c(b);case\"pink\":return d(b);case\"brown\":case\"brownian\":case\"red\":return e(b)}}}}b.exports=c},{}],4:[function(a,b){function c(a,b){var c=[\"sine\",\"square\",\"sawtooth\",\"triangle\"];if(-1===c.indexOf(a))throw new Error(a+\" is not a valid Oscillator type\");return{createNote:function(c,d){var e=b.createOscillator();return e.connect(c),e.type=a,e.frequency.value=d,e}}}b.exports=c},{}],5:[function(a,b){function c(a,b,c){function d(a){if(\"undefined\"==typeof c.notes[a])throw new Error(a+\" is not a correct rhythm.\");return 10*(c.notes[a]*c.tempo/c.noteGetsBeat)}function e(a){if(null===a||\"object\"!=typeof a)return a;var b=a.constructor();for(var c in a)a.hasOwnProperty(c)&&(b[c]=a[c]);return b}if(a||(a=\"sine\"),b||(b=\"oscillators\"),\"undefined\"==typeof c.packs.instrument[b])throw new Error(b+\" is not a currently loaded Instrument Pack.\");var f=this,g=0,h=1,i=.05;f.totalDuration=0,f.bufferPosition=0,f.instrument=c.packs.instrument[b](a,c.audioContext),f.notes=[],f.setVolume=function(a){return a>1&&(a/=100),h=a,f},f.note=function(a,b,e){var g=d(a),j=e?0:g*i;if(b){b=b.split(\",\");for(var k=-1;++k<b.length;){var l=b[k];if(l=l.trim(),\"undefined\"==typeof c.pitches[l]&&(l=parseFloat(l),isNaN(l)||0>l))throw new Error(l+\" is not a valid pitch.\")}}return f.notes.push({rhythm:a,pitch:b,duration:g,articulationGap:j,tie:e,startTime:f.totalDuration,stopTime:f.totalDuration+g-j,volumeLevel:h/4}),f.totalDuration+=g,f},f.rest=function(a){var b=d(a);return f.notes.push({rhythm:a,pitch:!1,duration:b,articulationGap:0,startTime:f.totalDuration,stopTime:f.totalDuration+b}),f.totalDuration+=b,f},f.repeatStart=function(){return g=f.notes.length,f},f.repeatFromBeginning=function(a){return g=0,f.repeat(a),f},f.repeat=function(a){a=\"undefined\"==typeof a?1:a;for(var b=f.notes.slice(g),c=0;a>c;c++)for(var d=-1;++d<b.length;){var h=e(b[d]);h.startTime=f.totalDuration,h.stopTime=f.totalDuration+h.duration-h.articulationGap,f.notes.push(h),f.totalDuration+=h.duration}return f},f.resetDuration=function(){var a=-1,b=f.notes.length;for(f.totalDuration=0;++a<b;){var c=f.notes[a],e=d(c.rhythm),g=c.tie?0:e*i;c.duration=d(c.rhythm),c.startTime=f.totalDuration,c.stopTime=f.totalDuration+e-g,c.pitch!==!1&&(c.articulationGap=g),f.totalDuration+=e}}}b.exports=c},{}],6:[function(a,b){b.exports=a(\"./conductor.js\"),b.exports.loadPack(\"instrument\",\"noises\",a(\"./instrument-packs/noises.js\")),b.exports.loadPack(\"instrument\",\"oscillators\",a(\"./instrument-packs/oscillators.js\")),b.exports.loadPack(\"rhythm\",\"northAmerican\",a(\"./rhythm-packs/north-american.js\")),b.exports.loadPack(\"rhythm\",\"european\",a(\"./rhythm-packs/european.js\")),b.exports.loadPack(\"tuning\",\"equalTemperament\",a(\"./tuning-packs/equal-temperament.js\"))},{\"./conductor.js\":2,\"./instrument-packs/noises.js\":3,\"./instrument-packs/oscillators.js\":4,\"./rhythm-packs/european.js\":8,\"./rhythm-packs/north-american.js\":9,\"./tuning-packs/equal-temperament.js\":10}],7:[function(a,b){function c(a){function b(b){for(var c=-1,f=a.instruments.length;++c<f;){var g=a.instruments[c];b&&g.resetDuration(),g.bufferPosition=0}for(b&&(d(),l=a.percentageComplete*a.totalDuration),c=-1;++c<k.length;)k[c].gain.disconnect();clearTimeout(h),k=e()}function c(b,c,d){if(\"undefined\"==typeof d&&(d=!1),\"up\"!==b&&\"down\"!==b)throw new Error(\"Direction must be either up or down.\");var e=.2;m=\"down\"===b,\"up\"===b?(a.masterVolume.gain.linearRampToValueAtTime(0,a.audioContext.currentTime),a.masterVolume.gain.linearRampToValueAtTime(a.masterVolumeLevel,a.audioContext.currentTime+e)):(a.masterVolume.gain.linearRampToValueAtTime(a.masterVolumeLevel,a.audioContext.currentTime),a.masterVolume.gain.linearRampToValueAtTime(0,a.audioContext.currentTime+e)),setTimeout(function(){\"function\"==typeof c&&c.call(j),d&&(m=!m,a.masterVolume.gain.linearRampToValueAtTime(a.masterVolumeLevel,a.audioContext.currentTime))},1e3*e)}function d(){for(var b=-1,c=0;++b<a.instruments.length;){var d=a.instruments[b];d.totalDuration>c&&(c=d.totalDuration)}a.totalDuration=c}function e(){for(var b=[],c=-1,d=a.noteBufferLength;++c<a.instruments.length;){for(var e=a.instruments[c],f=d,g=-1;++g<f;){var h=e.notes[e.bufferPosition+g];if(\"undefined\"==typeof h)break;var i=h.pitch,j=h.startTime,k=h.stopTime,m=h.volumeLevel;if(l>k)f++;else if(!1!==i){var n=a.audioContext.createGain();if(n.connect(a.masterVolume),n.gain.value=m,l>j&&(j=k-l),\"undefined\"==typeof i)b.push({startTime:l>j?k-l:j,stopTime:k,node:e.instrument.createNote(n),gain:n,volumeLevel:m});else for(var o=-1;++o<i.length;){var p=i[o];b.push({startTime:j,stopTime:k,node:e.instrument.createNote(n,a.pitches[p.trim()]||parseFloat(p)),gain:n,volumeLevel:m})}}}e.bufferPosition+=f}return b}function f(){!j.paused&&j.playing&&(a.totalDuration<l?(j.stop(!1),j.looping?j.play():a.onFinishedCallback()):(g(),setTimeout(f,1e3/60)))}function g(){l+=a.audioContext.currentTime-i;var b=Math.round(l);b!=a.currentSeconds&&(setTimeout(function(){a.onTickerCallback(b)},1),a.currentSeconds=b),a.percentageComplete=l/a.totalDuration,i=a.audioContext.currentTime}var h,i,j=this,k=e(),l=0,m=!1;d(),j.paused=!1,j.playing=!1,j.looping=!1,j.muted=!1,j.play=function(){j.playing=!0,j.paused=!1,i=a.audioContext.currentTime,f();var b=a.audioContext.currentTime-l,d=function(a){for(var c=-1;++c<a.length;){var d=a[c],e=d.startTime+b,f=d.stopTime+b;d.tie||(e>0&&(e-=.001),f+=.001,d.gain.gain.setValueAtTime(0,e),d.gain.gain.linearRampToValueAtTime(d.volumeLevel,e+.001),d.gain.gain.setValueAtTime(d.volumeLevel,f-.001),d.gain.gain.linearRampToValueAtTime(0,f)),d.node.start(e),d.node.stop(f)}},g=function(){h=setTimeout(function(){if(j.playing&&!j.paused){var a=e();a.length>0&&(d(a),k=k.concat(a),g())}},5e3*a.tempo)};d(k),g(),m&&!j.muted&&c(\"up\")},j.stop=function(d){j.playing=!1,a.currentSeconds=0,a.percentageComplete=0,\"undefined\"==typeof d&&(d=!0),d&&!j.muted?c(\"down\",function(){l=0,b(),setTimeout(function(){a.onTickerCallback(a.currentSeconds)},1)},!0):(l=0,b(),setTimeout(function(){a.onTickerCallback(a.currentSeconds)},1))},j.pause=function(){j.paused=!0,g(),j.muted?b():c(\"down\",function(){b()})},j.loop=function(a){j.looping=!!a},j.setTime=function(a){l=parseInt(a),b(),j.playing&&!j.paused&&j.play()},j.resetTempo=function(){b(!0),j.playing&&!j.paused&&j.play()},j.mute=function(a){j.muted=!0,c(\"down\",a)},j.unmute=function(a){j.muted=!1,c(\"up\",a)}}b.exports=c},{}],8:[function(a,b){b.exports={semibreve:1,dottedMinim:.75,minim:.5,dottedCrotchet:.375,tripletMinim:.33333334,crotchet:.25,dottedQuaver:.1875,tripletCrotchet:.166666667,quaver:.125,dottedSemiquaver:.09375,tripletQuaver:.083333333,semiquaver:.0625,tripletSemiquaver:.041666667,demisemiquaver:.03125}},{}],9:[function(a,b){b.exports={whole:1,dottedHalf:.75,half:.5,dottedQuarter:.375,tripletHalf:.33333334,quarter:.25,dottedEighth:.1875,tripletQuarter:.166666667,eighth:.125,dottedSixteenth:.09375,tripletEighth:.083333333,sixteenth:.0625,tripletSixteenth:.041666667,thirtySecond:.03125}},{}],10:[function(a,b){b.exports={C0:16.35,\"C#0\":17.32,Db0:17.32,D0:18.35,\"D#0\":19.45,Eb0:19.45,E0:20.6,F0:21.83,\"F#0\":23.12,Gb0:23.12,G0:24.5,\"G#0\":25.96,Ab0:25.96,A0:27.5,\"A#0\":29.14,Bb0:29.14,B0:30.87,C1:32.7,\"C#1\":34.65,Db1:34.65,D1:36.71,\"D#1\":38.89,Eb1:38.89,E1:41.2,F1:43.65,\"F#1\":46.25,Gb1:46.25,G1:49,\"G#1\":51.91,Ab1:51.91,A1:55,\"A#1\":58.27,Bb1:58.27,B1:61.74,C2:65.41,\"C#2\":69.3,Db2:69.3,D2:73.42,\"D#2\":77.78,Eb2:77.78,E2:82.41,F2:87.31,\"F#2\":92.5,Gb2:92.5,G2:98,\"G#2\":103.83,Ab2:103.83,A2:110,\"A#2\":116.54,Bb2:116.54,B2:123.47,C3:130.81,\"C#3\":138.59,Db3:138.59,D3:146.83,\"D#3\":155.56,Eb3:155.56,E3:164.81,F3:174.61,\"F#3\":185,Gb3:185,G3:196,\"G#3\":207.65,Ab3:207.65,A3:220,\"A#3\":233.08,Bb3:233.08,B3:246.94,C4:261.63,\"C#4\":277.18,Db4:277.18,D4:293.66,\"D#4\":311.13,Eb4:311.13,E4:329.63,F4:349.23,\"F#4\":369.99,Gb4:369.99,G4:392,\"G#4\":415.3,Ab4:415.3,A4:440,\"A#4\":466.16,Bb4:466.16,B4:493.88,C5:523.25,\"C#5\":554.37,Db5:554.37,D5:587.33,\"D#5\":622.25,Eb5:622.25,E5:659.26,F5:698.46,\"F#5\":739.99,Gb5:739.99,G5:783.99,\"G#5\":830.61,Ab5:830.61,A5:880,\"A#5\":932.33,Bb5:932.33,B5:987.77,C6:1046.5,\"C#6\":1108.73,Db6:1108.73,D6:1174.66,\"D#6\":1244.51,Eb6:1244.51,E6:1318.51,F6:1396.91,\"F#6\":1479.98,Gb6:1479.98,G6:1567.98,\"G#6\":1661.22,Ab6:1661.22,A6:1760,\"A#6\":1864.66,Bb6:1864.66,B6:1975.53,C7:2093,\"C#7\":2217.46,Db7:2217.46,D7:2349.32,\"D#7\":2489.02,Eb7:2489.02,E7:2637.02,F7:2793.83,\"F#7\":2959.96,Gb7:2959.96,G7:3135.96,\"G#7\":3322.44,Ab7:3322.44,A7:3520,\"A#7\":3729.31,Bb7:3729.31,B7:3951.07,C8:4186.01}},{}]},{},[6])(6)});","/**\n * VexTab 2.0.10 built on 2014-11-28.\n * Copyright (c) 2010 Mohit Muthanna Cheppudira <mohit@muthanna.com>\n *\n * http://www.vexflow.com  http://github.com/0xfe/vextab\n */\n\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.VexTabDiv=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n(function (process){\n/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,6],$V1=[1,7],$V2=[1,8],$V3=[1,9],$V4=[5,11,13,14,15],$V5=[5,11,13,14,15,17,19,21],$V6=[2,17],$V7=[1,14],$V8=[5,11,13,14,15,17,19,21,22],$V9=[1,18],$Va=[1,19],$Vb=[1,20],$Vc=[1,21],$Vd=[1,43],$Ve=[1,32],$Vf=[1,33],$Vg=[1,42],$Vh=[1,41],$Vi=[1,39],$Vj=[1,48],$Vk=[1,55],$Vl=[1,50],$Vm=[1,51],$Vn=[1,52],$Vo=[1,53],$Vp=[1,54],$Vq=[1,56],$Vr=[1,44],$Vs=[1,45],$Vt=[1,46],$Vu=[1,47],$Vv=[1,57],$Vw=[5,11,13,14,15,17,19,21,25],$Vx=[5,11,13,14,15,17,19,21,23,31,32,37,38,45,48,57,61,62,63,64,65,66,70,71,73,75,76],$Vy=[2,79],$Vz=[1,67],$VA=[1,64],$VB=[1,65],$VC=[1,66],$VD=[1,73],$VE=[1,74],$VF=[1,78],$VG=[1,79],$VH=[1,80],$VI=[1,81],$VJ=[41,57,59,61,62,63,64,65,66,67,68,69],$VK=[38,45,48,76],$VL=[41,48,57,59,61,62,63,64,65,66,67,68,69,81],$VM=[5,11,13,14,15,17,19,21,23,31,32,37,38,41,45,48,57,61,62,63,64,65,66,70,71,73,75,76],$VN=[1,101],$VO=[44,46],$VP=[2,63],$VQ=[1,106],$VR=[5,11,13,14,15,17,19,21,23,31,32,37,38,45,48,57,59,61,62,63,64,65,66,70,71,73,75,76],$VS=[5,11,13,14,15,17,19,21,23,31,32,37,38,45,48,57,59,60,61,62,63,64,65,66,70,71,73,75,76],$VT=[25,71],$VU=[41,48,57,59,61,62,63,64,65,66,67,68,69],$VV=[5,11,13,14,15,17,19,21,23,31,32,37,38,44,45,46,48,57,61,62,63,64,65,66,70,71,73,75,76];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"e\":3,\"maybe_vextab\":4,\"EOF\":5,\"vextab\":6,\"stave\":7,\"voice\":8,\"maybe_options\":9,\"stave_data\":10,\"OPTIONS\":11,\"options\":12,\"TABSTAVE\":13,\"STAVE\":14,\"VOICE\":15,\"stave_additions\":16,\"TEXT\":17,\"text\":18,\"NOTES\":19,\"notes\":20,\"SLUR\":21,\"WORD\":22,\"=\":23,\"STR\":24,\",\":25,\"lingo\":26,\"line\":27,\"chord\":28,\"time\":29,\"bar\":30,\"[\":31,\"]\":32,\"tuplets\":33,\"annotations\":34,\"command\":35,\"rest\":36,\"|\":37,\":\":38,\"frets\":39,\"maybe_decorator\":40,\"/\":41,\"string\":42,\"chord_line\":43,\".\":44,\"(\":45,\")\":46,\"articulation\":47,\"NUMBER\":48,\"abc\":49,\"_\":50,\"timed_fret\":51,\"time_values\":52,\"maybe_dot\":53,\"time_unit\":54,\"maybe_slash\":55,\"w\":56,\"h\":57,\"q\":58,\"d\":59,\"S\":60,\"-\":61,\"s\":62,\"t\":63,\"T\":64,\"b\":65,\"p\":66,\"v\":67,\"V\":68,\"u\":69,\"^\":70,\"$\":71,\"annotation_words\":72,\"!\":73,\"COMMAND\":74,\"#\":75,\"ABC\":76,\"abc_accidental\":77,\"accidental_type\":78,\"@\":79,\"n\":80,\"~\":81,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"EOF\",11:\"OPTIONS\",13:\"TABSTAVE\",14:\"STAVE\",15:\"VOICE\",17:\"TEXT\",19:\"NOTES\",21:\"SLUR\",22:\"WORD\",23:\"=\",24:\"STR\",25:\",\",31:\"[\",32:\"]\",37:\"|\",38:\":\",41:\"/\",44:\".\",45:\"(\",46:\")\",48:\"NUMBER\",50:\"_\",56:\"w\",57:\"h\",58:\"q\",59:\"d\",60:\"S\",61:\"-\",62:\"s\",63:\"t\",64:\"T\",65:\"b\",66:\"p\",67:\"v\",68:\"V\",69:\"u\",70:\"^\",71:\"$\",73:\"!\",74:\"COMMAND\",75:\"#\",76:\"ABC\",79:\"@\",80:\"n\",81:\"~\"},\nproductions_: [0,[3,2],[4,0],[4,1],[6,1],[6,2],[7,3],[7,2],[7,2],[8,1],[8,1],[8,1],[10,1],[10,2],[16,2],[16,2],[16,2],[9,0],[9,1],[12,3],[12,4],[18,1],[18,3],[20,1],[20,2],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[26,1],[30,1],[30,3],[30,3],[30,3],[30,3],[30,3],[27,4],[43,1],[43,3],[28,4],[28,5],[39,1],[39,1],[39,4],[39,2],[39,4],[51,5],[51,1],[51,5],[51,8],[51,1],[51,4],[29,3],[52,2],[54,1],[54,1],[54,1],[54,1],[53,0],[53,1],[55,0],[55,1],[42,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[47,1],[40,1],[40,1],[40,1],[40,1],[40,0],[33,3],[33,5],[34,3],[72,1],[72,3],[35,3],[36,2],[36,3],[36,4],[49,3],[77,1],[77,2],[77,1],[77,2],[77,1],[77,0],[78,0],[78,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n      return $$[$0-1];\n    \nbreak;\ncase 2: case 17: case 79:\n this.$ = null \nbreak;\ncase 3: case 12: case 18: case 23: case 25: case 26: case 27: case 42: case 59: case 60: case 61: case 62: case 67:\n this.$ = $$[$0] \nbreak;\ncase 4: case 83:\n this.$ = [$$[$0]] \nbreak;\ncase 5:\n this.$ = [].concat($$[$0-1], $$[$0]) \nbreak;\ncase 6:\n this.$ = {\n        element: $$[$0-2],\n        options: $$[$0-1],\n        notes: $$[$0].notes,\n        text: $$[$0].text,\n        _l: _$[$0-2].first_line,\n        _c: _$[$0-2].first_column\n      }\n    \nbreak;\ncase 7:\n this.$ = {\n        element: $$[$0-1],\n        options: $$[$0],\n        _l: _$[$0-1].first_line,\n        _c: _$[$0-1].first_column\n      }\n    \nbreak;\ncase 8:\n\n      this.$ = {\n        element: \"options\",\n        params: $$[$0],\n        _l: _$[$0-1].first_line,\n        _c: _$[$0-1].first_column\n      }\n    \nbreak;\ncase 13:\n\n      var text = [].concat($$[$0-1].text, $$[$0].text);\n      var notes = [].concat($$[$0-1].notes, $$[$0].notes);\n      var slurs = [].concat($$[$0-1].slurs, $$[$0].slurs)\n      this.$ = {text: text, notes: notes, slurs: slurs};\n    \nbreak;\ncase 14:\nthis.$ = {text: $$[$0], notes: [], slurs: []}\nbreak;\ncase 15:\nthis.$ = {notes: $$[$0], text: [], slurs: []}\nbreak;\ncase 16:\nthis.$ = {slurs: $$[$0], notes: [], text: []}\nbreak;\ncase 19:\n this.$ = [{\n        key: $$[$0-2],\n        value: $$[$0],\n        _l: _$[$0-2].first_line,\n        _c: _$[$0-2].first_column\n      }]\n    \nbreak;\ncase 20:\n this.$ = [].concat($$[$0-3], [{\n        key: $$[$0-2],\n        value: $$[$0],\n        _l: _$[$0-2].first_line,\n        _c: _$[$0-2].first_column\n        }])\n    \nbreak;\ncase 21:\n this.$ = [{text: $$[$0], _l: _$[$0].first_line, _c: _$[$0].first_column}] \nbreak;\ncase 22:\n this.$ = [].concat($$[$0-2], {text: $$[$0], _l: _$[$0].first_line, _c: _$[$0].first_column}) \nbreak;\ncase 24:\n this.$ = [].concat($$[$0-1], $$[$0])  \nbreak;\ncase 28:\n this.$ = [{\n        command: \"bar\",\n        type: $$[$0],\n        _l: _$[$0].first_line,\n        _c: _$[$0].first_column\n        }]\n    \nbreak;\ncase 29:\n this.$ = [{\n        command: \"open_beam\",\n        _l: _$[$0].first_line,\n        _c: _$[$0].first_column\n      }]\n    \nbreak;\ncase 30:\n this.$ = [{\n        command: \"close_beam\",\n        _l: _$[$0].first_line,\n        _c: _$[$0].first_column\n      }]\n    \nbreak;\ncase 31:\n this.$ = [{\n        command: \"tuplet\",\n        params: $$[$0],\n        _l: _$[$0].first_line,\n        _c: _$[$0].first_column\n      }]\n    \nbreak;\ncase 32:\n this.$ = [{\n        command: \"annotations\",\n        params: $$[$0],\n        _l: _$[$0].first_line,\n        _c: _$[$0].first_column\n      }]\n    \nbreak;\ncase 33:\n this.$ = [{\n        command: \"command\",\n        params: $$[$0],\n        _l: _$[$0].first_line,\n        _c: _$[$0].first_column\n      }]\n    \nbreak;\ncase 34:\n\n    this.$ = [{\n        command: \"rest\",\n        params: $$[$0]\n      }]\n    \nbreak;\ncase 35:\n this.$ = 'single' \nbreak;\ncase 36:\n this.$ = 'double' \nbreak;\ncase 37:\n this.$ = 'end' \nbreak;\ncase 38:\n this.$ = 'repeat-end' \nbreak;\ncase 39:\n this.$ = 'repeat-begin' \nbreak;\ncase 40:\n this.$ = 'repeat-both' \nbreak;\ncase 41:\n\n      _.extend(_.last($$[$0-3]), {decorator: $$[$0-2]})\n      _.each($$[$0-3], function(fret) { fret['string'] = $$[$0] })\n      this.$ = $$[$0-3]\n    \nbreak;\ncase 43: case 84:\n this.$ = [].concat($$[$0-2], $$[$0]) \nbreak;\ncase 44:\n this.$ = [{chord: $$[$0-2], decorator: $$[$0]}] \nbreak;\ncase 45:\n this.$ = [{chord: $$[$0-2], articulation: $$[$0-4], decorator: $$[$0]}] \nbreak;\ncase 46:\n this.$ = [{\n        fret: $$[$0],\n        _l: _$[$0].first_line,\n        _c: _$[$0].first_column}]\n    \nbreak;\ncase 47:\n this.$ = [{abc: $$[$0], _l: _$[$0].first_line, _c: _$[$0].first_column}]\nbreak;\ncase 48:\n this.$ = [{abc: $$[$0-3], octave: $$[$0-2],\n             fret: $$[$0], _l: _$[$0-3].first_line, _c: _$[$0-3].first_column}]\nbreak;\ncase 49:\n this.$ = [_.extend($$[$0], {articulation: $$[$0-1]})] \nbreak;\ncase 50:\n\n      _.extend(_.last($$[$0-3]), {decorator: $$[$0-2]})\n      _.extend($$[$0], {articulation: $$[$0-1]})\n      $$[$0-3].push($$[$0])\n      this.$ = $$[$0-3]\n    \nbreak;\ncase 51:\n this.$ = {\n      time: $$[$0-3], dot: $$[$0-2], fret: $$[$0],\n      _l: _$[$0-4].first_line, _c: _$[$0-4].first_column}\nbreak;\ncase 52:\n this.$ = {fret: $$[$0], _l: _$[$0].first_line, _c: _$[$0].first_column} \nbreak;\ncase 53:\n this.$ = {time: $$[$0-3], dot: $$[$0-2], abc: $$[$0]}\nbreak;\ncase 54:\n this.$ = {time: $$[$0-6], dot: $$[$0-5], abc: $$[$0-3], octave: $$[$0-2], fret: $$[$0]}\nbreak;\ncase 55:\n this.$ = {abc: $$[$0], _l: _$[$0].first_line, _c: _$[$0].first_column} \nbreak;\ncase 56:\n this.$ = {abc: $$[$0-3], octave: $$[$0-2],\n            fret: $$[$0], _l: _$[$0-3].first_line, _c: _$[$0-3].first_column} \nbreak;\ncase 57:\n this.$ = {time: $$[$0-1], dot: $$[$0]} \nbreak;\ncase 58:\n this.$ = $$[$0-1] + $$[$0] \nbreak;\ncase 63:\n this.$ = false \nbreak;\ncase 64:\n this.$ = true \nbreak;\ncase 65:\n this.$ = '' \nbreak;\ncase 66: case 69:\n this.$ = 's' \nbreak;\ncase 68:\n this.$ = '-' \nbreak;\ncase 70:\n this.$ = 't' \nbreak;\ncase 71:\n this.$ = 'T' \nbreak;\ncase 72:\n this.$ = 'b' \nbreak;\ncase 73:\n this.$ = 'h' \nbreak;\ncase 74:\n this.$ = 'p' \nbreak;\ncase 75:\n this.$ = 'v' \nbreak;\ncase 76:\n this.$ = 'V' \nbreak;\ncase 77:\n this.$ = 'u' \nbreak;\ncase 78:\n this.$ = 'd' \nbreak;\ncase 80:\n this.$ = {tuplet: $$[$0-1]} \nbreak;\ncase 81:\n this.$ = {tuplet: $$[$0-3], notes: $$[$0-1]} \nbreak;\ncase 82: case 85:\n this.$ = $$[$0-1] \nbreak;\ncase 86:\n this.$ = {position: 0} \nbreak;\ncase 87:\n this.$ = {position: $$[$0-1]} \nbreak;\ncase 88:\n this.$ = {position: $$[$0-1] * -1} \nbreak;\ncase 89:\n this.$ = {key: $$[$0-2], accidental: $$[$0-1], accidental_type: $$[$0]} \nbreak;\ncase 90:\n this.$ = \"#\" \nbreak;\ncase 91:\n this.$ = \"##\" \nbreak;\ncase 92:\n this.$ = \"b\" \nbreak;\ncase 93:\n this.$ = \"bb\" \nbreak;\ncase 94:\n this.$ = \"n\" \nbreak;\ncase 96:\n this.$ = null; \nbreak;\ncase 97:\n this.$ = \"c\" \nbreak;\n}\n},\ntable: [{3:1,4:2,5:[2,2],6:3,7:4,8:5,11:$V0,13:$V1,14:$V2,15:$V3},{1:[3]},{5:[1,10]},{5:[2,3],7:11,8:5,11:$V0,13:$V1,14:$V2,15:$V3},o($V4,[2,4]),o($V5,$V6,{9:12,12:13,22:$V7}),{12:15,22:$V7},o($V8,[2,9]),o($V8,[2,10]),o($V8,[2,11]),{1:[2,1]},o($V4,[2,5]),o($V4,[2,7],{10:16,16:17,17:$V9,19:$Va,21:$Vb}),o($V5,[2,18],{22:$Vc}),{23:[1,22]},o($V4,[2,8],{22:$Vc}),o($V4,[2,6],{16:23,17:$V9,19:$Va,21:$Vb}),o($V5,[2,12]),{18:24,24:[1,25]},{20:26,23:$Vd,26:27,27:28,28:29,29:30,30:31,31:$Ve,32:$Vf,33:34,34:35,35:36,36:37,37:$Vg,38:$Vh,39:38,45:$Vi,47:40,48:$Vj,49:49,57:$Vk,61:$Vl,62:$Vm,63:$Vn,64:$Vo,65:$Vp,66:$Vq,70:$Vr,71:$Vs,73:$Vt,75:$Vu,76:$Vv},o($V5,$V6,{12:13,9:58,22:$V7}),{23:[1,59]},{22:[1,60]},o($V5,[2,13]),o($V5,[2,14],{25:[1,61]}),o($Vw,[2,21]),o($V5,[2,15],{27:28,28:29,29:30,30:31,33:34,34:35,35:36,36:37,39:38,47:40,49:49,26:62,23:$Vd,31:$Ve,32:$Vf,37:$Vg,38:$Vh,45:$Vi,48:$Vj,57:$Vk,61:$Vl,62:$Vm,63:$Vn,64:$Vo,65:$Vp,66:$Vq,70:$Vr,71:$Vs,73:$Vt,75:$Vu,76:$Vv}),o($Vx,[2,23]),o($Vx,[2,25]),o($Vx,[2,26]),o($Vx,[2,27]),o($Vx,[2,28]),o($Vx,[2,29]),o($Vx,[2,30]),o($Vx,[2,31]),o($Vx,[2,32]),o($Vx,[2,33]),o($Vx,[2,34]),o([41,57,61,62,63,64,65,66],$Vy,{40:63,59:$Vz,67:$VA,68:$VB,69:$VC}),{27:69,39:38,43:68,47:70,48:$Vj,49:49,57:$Vk,61:$Vl,62:$Vm,63:$Vn,64:$Vo,65:$Vp,66:$Vq,76:$Vv},{38:$VD,45:[1,71],48:$VE,49:75,51:72,76:$Vv},{48:$VF,52:76,54:77,56:$VG,57:$VH,58:$VI},o($Vx,[2,35]),{37:[1,82],38:[1,83]},{48:[1,84]},{22:[1,86],72:85},{74:[1,87]},{48:[1,89],61:[1,90],75:[1,88]},o($VJ,[2,46]),o($VJ,[2,47],{48:[1,91]}),o($VK,[2,68]),o($VK,[2,69]),o($VK,[2,70]),o($VK,[2,71]),o($VK,[2,72]),o($VK,[2,73]),o($VK,[2,74]),o($VL,[2,95],{77:92,75:[1,93],79:[1,94],80:[1,95]}),o($V5,[2,16]),{22:[1,96]},o($V8,[2,19]),{24:[1,97]},o($Vx,[2,24]),{41:[1,98],47:99,57:$Vk,61:$Vl,62:$Vm,63:$Vn,64:$Vo,65:$Vp,66:$Vq},o($VM,[2,75]),o($VM,[2,76]),o($VM,[2,77]),o($VM,[2,78]),{44:$VN,46:[1,100]},o($VO,[2,42]),{38:$VD,48:$VE,49:75,51:72,76:$Vv},{27:69,39:38,43:102,47:70,48:$Vj,49:49,57:$Vk,61:$Vl,62:$Vm,63:$Vn,64:$Vo,65:$Vp,66:$Vq,76:$Vv},o($VJ,[2,49]),{48:$VF,52:103,54:77,56:$VG,57:$VH,58:$VI},o($VJ,[2,52]),o($VJ,[2,55],{48:[1,104]}),o($Vx,$VP,{53:105,59:$VQ}),o($VR,[2,65],{55:107,60:[1,108]}),o($VS,[2,59]),o($VS,[2,60]),o($VS,[2,61]),o($VS,[2,62]),{23:[1,110],37:[1,109],38:[1,111]},{37:[1,112],38:[1,113]},{25:[1,115],70:[1,114]},{25:[1,117],71:[1,116]},o($VT,[2,83]),{73:[1,118]},o($Vx,[2,86]),{75:[1,119]},{48:[1,120]},{50:[1,121]},o($VU,[2,96],{78:122,81:[1,123]}),o($VL,[2,90],{75:[1,124]}),o($VL,[2,92],{79:[1,125]}),o($VL,[2,94]),o($V8,[2,20]),o($Vw,[2,22]),{42:126,48:[1,127]},{38:$VD,48:$VE,49:75,51:128,76:$Vv},o($Vx,$Vy,{40:129,59:$Vz,67:$VA,68:$VB,69:$VC}),{27:130,39:38,47:70,48:$Vj,49:49,57:$Vk,61:$Vl,62:$Vm,63:$Vn,64:$Vo,65:$Vp,66:$Vq,76:$Vv},{44:$VN,46:[1,131]},{38:$VP,53:132,59:$VQ},{50:[1,133]},o($Vx,[2,57]),o($Vx,[2,64]),o($VR,[2,58]),o($VR,[2,66]),o($Vx,[2,36]),o($Vx,[2,37]),o($Vx,[2,39]),o($Vx,[2,38]),o($Vx,[2,40]),o($Vx,[2,80]),{48:[1,134]},o($Vx,[2,82]),{22:[1,135]},o($Vx,[2,85]),o($Vx,[2,87]),{75:[1,136]},{48:[1,137]},o($VU,[2,89]),o($VU,[2,97]),o($VL,[2,91]),o($VL,[2,93]),o($VV,[2,41]),o($VV,[2,67]),o($VJ,[2,50]),o($Vx,[2,44]),o($VO,[2,43]),o($Vx,$Vy,{40:138,59:$Vz,67:$VA,68:$VB,69:$VC}),{38:[1,139]},{48:[1,140]},{70:[1,141]},o($VT,[2,84]),o($Vx,[2,88]),o($VJ,[2,48]),o($Vx,[2,45]),{48:[1,142],49:143,76:$Vv},o($VJ,[2,56]),o($Vx,[2,81]),o($VJ,[2,51]),o($VJ,[2,53],{48:[1,144]}),{50:[1,145]},{48:[1,146]},o($VJ,[2,54])],\ndefaultActions: {10:[2,1]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n\n  var _ = require(\"underscore\");\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0: this.begin('notes'); return 19; \nbreak;\ncase 1: this.begin('options'); return 13; \nbreak;\ncase 2: this.begin('options'); return 14; \nbreak;\ncase 3: this.begin('options'); return 15; \nbreak;\ncase 4: this.begin('options'); return 11; \nbreak;\ncase 5: this.begin('text'); return 17; \nbreak;\ncase 6: this.begin('options'); return 21; \nbreak;\ncase 7:return 22\nbreak;\ncase 8: this.begin('annotations'); return \"$\" \nbreak;\ncase 9: this.begin('notes'); return \"$\" \nbreak;\ncase 10:return 22\nbreak;\ncase 11: this.begin('command'); return \"!\" \nbreak;\ncase 12: this.begin('notes'); return \"!\" \nbreak;\ncase 13:return 74\nbreak;\ncase 14:return 24\nbreak;\ncase 15:return 41\nbreak;\ncase 16:return '+'\nbreak;\ncase 17:return 38\nbreak;\ncase 18:return 23\nbreak;\ncase 19:return 45\nbreak;\ncase 20:return 46\nbreak;\ncase 21:return 31\nbreak;\ncase 22:return 32\nbreak;\ncase 23:return 70\nbreak;\ncase 24:return 25\nbreak;\ncase 25:return 37\nbreak;\ncase 26:return 44\nbreak;\ncase 27:return 75\nbreak;\ncase 28:return 79\nbreak;\ncase 29:return 65\nbreak;\ncase 30:return 62\nbreak;\ncase 31:return 57\nbreak;\ncase 32:return 66\nbreak;\ncase 33:return 63\nbreak;\ncase 34:return 64\nbreak;\ncase 35:return 61\nbreak;\ncase 36:return 50\nbreak;\ncase 37:return 67\nbreak;\ncase 38:return 68\nbreak;\ncase 39:return 69\nbreak;\ncase 40:return 59\nbreak;\ncase 41:return 48\nbreak;\ncase 42:return 58\nbreak;\ncase 43:return 56\nbreak;\ncase 44:return 57\nbreak;\ncase 45:return 59\nbreak;\ncase 46:return 60\nbreak;\ncase 47:return 76\nbreak;\ncase 48:return 80\nbreak;\ncase 49:return 81\nbreak;\ncase 50: this.begin('INITIAL'); \nbreak;\ncase 51:/* skip whitespace */\nbreak;\ncase 52:return 5\nbreak;\ncase 53:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:notes\\b)/,/^(?:tabstave\\b)/,/^(?:stave\\b)/,/^(?:voice\\b)/,/^(?:options\\b)/,/^(?:text\\b)/,/^(?:slur\\b)/,/^(?:[^\\s=]+)/,/^(?:[$])/,/^(?:[$])/,/^(?:[^,$]+)/,/^(?:[!])/,/^(?:[!])/,/^(?:[^!]+)/,/^(?:[^,\\r\\n]+)/,/^(?:\\/)/,/^(?:\\+)/,/^(?::)/,/^(?:=)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\^)/,/^(?:,)/,/^(?:\\|)/,/^(?:\\.)/,/^(?:#)/,/^(?:@)/,/^(?:[b])/,/^(?:[s])/,/^(?:[h])/,/^(?:[p])/,/^(?:[t])/,/^(?:[T])/,/^(?:[-])/,/^(?:[_])/,/^(?:[v])/,/^(?:[V])/,/^(?:[u])/,/^(?:[d])/,/^(?:[0-9]+)/,/^(?:[q])/,/^(?:[w])/,/^(?:[h])/,/^(?:[d])/,/^(?:[S])/,/^(?:[A-GXLR])/,/^(?:[n])/,/^(?:[~])/,/^(?:[\\r\\n]+)/,/^(?:\\s+)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"notes\":{\"rules\":[8,11,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53],\"inclusive\":true},\"text\":{\"rules\":[14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,41,42,43,44,45,50,51,52,53],\"inclusive\":true},\"slur\":{\"rules\":[15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,52,53],\"inclusive\":true},\"annotations\":{\"rules\":[9,10,15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,52,53],\"inclusive\":true},\"options\":{\"rules\":[7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,52,53],\"inclusive\":true},\"command\":{\"rules\":[12,13,15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,52,53],\"inclusive\":true},\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,52,53],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}\n}).call(this,require('_process'))\n},{\"_process\":4,\"fs\":2,\"path\":3,\"underscore\":6}],2:[function(require,module,exports){\n\n},{}],3:[function(require,module,exports){\n(function (process){\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n}).call(this,require('_process'))\n},{\"_process\":4}],4:[function(require,module,exports){\n// shim for using process in browser\n\nvar process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var canSetImmediate = typeof window !== 'undefined'\n    && window.setImmediate;\n    var canMutationObserver = typeof window !== 'undefined'\n    && window.MutationObserver;\n    var canPost = typeof window !== 'undefined'\n    && window.postMessage && window.addEventListener\n    ;\n\n    if (canSetImmediate) {\n        return function (f) { return window.setImmediate(f) };\n    }\n\n    var queue = [];\n\n    if (canMutationObserver) {\n        var hiddenDiv = document.createElement(\"div\");\n        var observer = new MutationObserver(function () {\n            var queueList = queue.slice();\n            queue.length = 0;\n            queueList.forEach(function (fn) {\n                fn();\n            });\n        });\n\n        observer.observe(hiddenDiv, { attributes: true });\n\n        return function nextTick(fn) {\n            if (!queue.length) {\n                hiddenDiv.setAttribute('yes', 'no');\n            }\n            queue.push(fn);\n        };\n    }\n\n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            var source = ev.source;\n            if ((source === window || source === null) && ev.data === 'process-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n\n        return function nextTick(fn) {\n            queue.push(fn);\n            window.postMessage('process-tick', '*');\n        };\n    }\n\n    return function nextTick(fn) {\n        setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\n// TODO(shtylman)\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\n\n},{}],5:[function(require,module,exports){\n/*!\n * jQuery JavaScript Library v2.1.1\n * http://jquery.com/\n *\n * Includes Sizzle.js\n * http://sizzlejs.com/\n *\n * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-05-01T17:11Z\n */\n\n(function( global, factory ) {\n\n\tif ( typeof module === \"object\" && typeof module.exports === \"object\" ) {\n\t\t// For CommonJS and CommonJS-like environments where a proper window is present,\n\t\t// execute the factory and get jQuery\n\t\t// For environments that do not inherently posses a window with a document\n\t\t// (such as Node.js), expose a jQuery-making factory as module.exports\n\t\t// This accentuates the need for the creation of a real window\n\t\t// e.g. var jQuery = require(\"jquery\")(window);\n\t\t// See ticket #14549 for more info\n\t\tmodule.exports = global.document ?\n\t\t\tfactory( global, true ) :\n\t\t\tfunction( w ) {\n\t\t\t\tif ( !w.document ) {\n\t\t\t\t\tthrow new Error( \"jQuery requires a window with a document\" );\n\t\t\t\t}\n\t\t\t\treturn factory( w );\n\t\t\t};\n\t} else {\n\t\tfactory( global );\n\t}\n\n// Pass this if window is not defined yet\n}(typeof window !== \"undefined\" ? window : this, function( window, noGlobal ) {\n\n// Can't do this because several apps including ASP.NET trace\n// the stack via arguments.caller.callee and Firefox dies if\n// you try to trace through \"use strict\" call chains. (#13335)\n// Support: Firefox 18+\n//\n\nvar arr = [];\n\nvar slice = arr.slice;\n\nvar concat = arr.concat;\n\nvar push = arr.push;\n\nvar indexOf = arr.indexOf;\n\nvar class2type = {};\n\nvar toString = class2type.toString;\n\nvar hasOwn = class2type.hasOwnProperty;\n\nvar support = {};\n\n\n\nvar\n\t// Use the correct document accordingly with window argument (sandbox)\n\tdocument = window.document,\n\n\tversion = \"2.1.1\",\n\n\t// Define a local copy of jQuery\n\tjQuery = function( selector, context ) {\n\t\t// The jQuery object is actually just the init constructor 'enhanced'\n\t\t// Need init if jQuery is called (just allow error to be thrown if not included)\n\t\treturn new jQuery.fn.init( selector, context );\n\t},\n\n\t// Support: Android<4.1\n\t// Make sure we trim BOM and NBSP\n\trtrim = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g,\n\n\t// Matches dashed string for camelizing\n\trmsPrefix = /^-ms-/,\n\trdashAlpha = /-([\\da-z])/gi,\n\n\t// Used by jQuery.camelCase as callback to replace()\n\tfcamelCase = function( all, letter ) {\n\t\treturn letter.toUpperCase();\n\t};\n\njQuery.fn = jQuery.prototype = {\n\t// The current version of jQuery being used\n\tjquery: version,\n\n\tconstructor: jQuery,\n\n\t// Start with an empty selector\n\tselector: \"\",\n\n\t// The default length of a jQuery object is 0\n\tlength: 0,\n\n\ttoArray: function() {\n\t\treturn slice.call( this );\n\t},\n\n\t// Get the Nth element in the matched element set OR\n\t// Get the whole matched element set as a clean array\n\tget: function( num ) {\n\t\treturn num != null ?\n\n\t\t\t// Return just the one element from the set\n\t\t\t( num < 0 ? this[ num + this.length ] : this[ num ] ) :\n\n\t\t\t// Return all the elements in a clean array\n\t\t\tslice.call( this );\n\t},\n\n\t// Take an array of elements and push it onto the stack\n\t// (returning the new matched element set)\n\tpushStack: function( elems ) {\n\n\t\t// Build a new jQuery matched element set\n\t\tvar ret = jQuery.merge( this.constructor(), elems );\n\n\t\t// Add the old object onto the stack (as a reference)\n\t\tret.prevObject = this;\n\t\tret.context = this.context;\n\n\t\t// Return the newly-formed element set\n\t\treturn ret;\n\t},\n\n\t// Execute a callback for every element in the matched set.\n\t// (You can seed the arguments with an array of args, but this is\n\t// only used internally.)\n\teach: function( callback, args ) {\n\t\treturn jQuery.each( this, callback, args );\n\t},\n\n\tmap: function( callback ) {\n\t\treturn this.pushStack( jQuery.map(this, function( elem, i ) {\n\t\t\treturn callback.call( elem, i, elem );\n\t\t}));\n\t},\n\n\tslice: function() {\n\t\treturn this.pushStack( slice.apply( this, arguments ) );\n\t},\n\n\tfirst: function() {\n\t\treturn this.eq( 0 );\n\t},\n\n\tlast: function() {\n\t\treturn this.eq( -1 );\n\t},\n\n\teq: function( i ) {\n\t\tvar len = this.length,\n\t\t\tj = +i + ( i < 0 ? len : 0 );\n\t\treturn this.pushStack( j >= 0 && j < len ? [ this[j] ] : [] );\n\t},\n\n\tend: function() {\n\t\treturn this.prevObject || this.constructor(null);\n\t},\n\n\t// For internal use only.\n\t// Behaves like an Array's method, not like a jQuery method.\n\tpush: push,\n\tsort: arr.sort,\n\tsplice: arr.splice\n};\n\njQuery.extend = jQuery.fn.extend = function() {\n\tvar options, name, src, copy, copyIsArray, clone,\n\t\ttarget = arguments[0] || {},\n\t\ti = 1,\n\t\tlength = arguments.length,\n\t\tdeep = false;\n\n\t// Handle a deep copy situation\n\tif ( typeof target === \"boolean\" ) {\n\t\tdeep = target;\n\n\t\t// skip the boolean and the target\n\t\ttarget = arguments[ i ] || {};\n\t\ti++;\n\t}\n\n\t// Handle case when target is a string or something (possible in deep copy)\n\tif ( typeof target !== \"object\" && !jQuery.isFunction(target) ) {\n\t\ttarget = {};\n\t}\n\n\t// extend jQuery itself if only one argument is passed\n\tif ( i === length ) {\n\t\ttarget = this;\n\t\ti--;\n\t}\n\n\tfor ( ; i < length; i++ ) {\n\t\t// Only deal with non-null/undefined values\n\t\tif ( (options = arguments[ i ]) != null ) {\n\t\t\t// Extend the base object\n\t\t\tfor ( name in options ) {\n\t\t\t\tsrc = target[ name ];\n\t\t\t\tcopy = options[ name ];\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif ( target === copy ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\tif ( deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) ) ) {\n\t\t\t\t\tif ( copyIsArray ) {\n\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\tclone = src && jQuery.isArray(src) ? src : [];\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclone = src && jQuery.isPlainObject(src) ? src : {};\n\t\t\t\t\t}\n\n\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\ttarget[ name ] = jQuery.extend( deep, clone, copy );\n\n\t\t\t\t// Don't bring in undefined values\n\t\t\t\t} else if ( copy !== undefined ) {\n\t\t\t\t\ttarget[ name ] = copy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n\njQuery.extend({\n\t// Unique for each copy of jQuery on the page\n\texpando: \"jQuery\" + ( version + Math.random() ).replace( /\\D/g, \"\" ),\n\n\t// Assume jQuery is ready without the ready module\n\tisReady: true,\n\n\terror: function( msg ) {\n\t\tthrow new Error( msg );\n\t},\n\n\tnoop: function() {},\n\n\t// See test/unit/core.js for details concerning isFunction.\n\t// Since version 1.3, DOM methods and functions like alert\n\t// aren't supported. They return false on IE (#2968).\n\tisFunction: function( obj ) {\n\t\treturn jQuery.type(obj) === \"function\";\n\t},\n\n\tisArray: Array.isArray,\n\n\tisWindow: function( obj ) {\n\t\treturn obj != null && obj === obj.window;\n\t},\n\n\tisNumeric: function( obj ) {\n\t\t// parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n\t\t// ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n\t\t// subtraction forces infinities to NaN\n\t\treturn !jQuery.isArray( obj ) && obj - parseFloat( obj ) >= 0;\n\t},\n\n\tisPlainObject: function( obj ) {\n\t\t// Not plain objects:\n\t\t// - Any object or value whose internal [[Class]] property is not \"[object Object]\"\n\t\t// - DOM nodes\n\t\t// - window\n\t\tif ( jQuery.type( obj ) !== \"object\" || obj.nodeType || jQuery.isWindow( obj ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( obj.constructor &&\n\t\t\t\t!hasOwn.call( obj.constructor.prototype, \"isPrototypeOf\" ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// If the function hasn't returned already, we're confident that\n\t\t// |obj| is a plain object, created by {} or constructed with new Object\n\t\treturn true;\n\t},\n\n\tisEmptyObject: function( obj ) {\n\t\tvar name;\n\t\tfor ( name in obj ) {\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t},\n\n\ttype: function( obj ) {\n\t\tif ( obj == null ) {\n\t\t\treturn obj + \"\";\n\t\t}\n\t\t// Support: Android < 4.0, iOS < 6 (functionish RegExp)\n\t\treturn typeof obj === \"object\" || typeof obj === \"function\" ?\n\t\t\tclass2type[ toString.call(obj) ] || \"object\" :\n\t\t\ttypeof obj;\n\t},\n\n\t// Evaluates a script in a global context\n\tglobalEval: function( code ) {\n\t\tvar script,\n\t\t\tindirect = eval;\n\n\t\tcode = jQuery.trim( code );\n\n\t\tif ( code ) {\n\t\t\t// If the code includes a valid, prologue position\n\t\t\t// strict mode pragma, execute code by injecting a\n\t\t\t// script tag into the document.\n\t\t\tif ( code.indexOf(\"use strict\") === 1 ) {\n\t\t\t\tscript = document.createElement(\"script\");\n\t\t\t\tscript.text = code;\n\t\t\t\tdocument.head.appendChild( script ).parentNode.removeChild( script );\n\t\t\t} else {\n\t\t\t// Otherwise, avoid the DOM node creation, insertion\n\t\t\t// and removal by using an indirect global eval\n\t\t\t\tindirect( code );\n\t\t\t}\n\t\t}\n\t},\n\n\t// Convert dashed to camelCase; used by the css and data modules\n\t// Microsoft forgot to hump their vendor prefix (#9572)\n\tcamelCase: function( string ) {\n\t\treturn string.replace( rmsPrefix, \"ms-\" ).replace( rdashAlpha, fcamelCase );\n\t},\n\n\tnodeName: function( elem, name ) {\n\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\n\t},\n\n\t// args is for internal usage only\n\teach: function( obj, callback, args ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = obj.length,\n\t\t\tisArray = isArraylike( obj );\n\n\t\tif ( args ) {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.apply( obj[ i ], args );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// A special, fast, case for the most common use of each\n\t\t} else {\n\t\t\tif ( isArray ) {\n\t\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( i in obj ) {\n\t\t\t\t\tvalue = callback.call( obj[ i ], i, obj[ i ] );\n\n\t\t\t\t\tif ( value === false ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn obj;\n\t},\n\n\t// Support: Android<4.1\n\ttrim: function( text ) {\n\t\treturn text == null ?\n\t\t\t\"\" :\n\t\t\t( text + \"\" ).replace( rtrim, \"\" );\n\t},\n\n\t// results is for internal usage only\n\tmakeArray: function( arr, results ) {\n\t\tvar ret = results || [];\n\n\t\tif ( arr != null ) {\n\t\t\tif ( isArraylike( Object(arr) ) ) {\n\t\t\t\tjQuery.merge( ret,\n\t\t\t\t\ttypeof arr === \"string\" ?\n\t\t\t\t\t[ arr ] : arr\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tpush.call( ret, arr );\n\t\t\t}\n\t\t}\n\n\t\treturn ret;\n\t},\n\n\tinArray: function( elem, arr, i ) {\n\t\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\n\t},\n\n\tmerge: function( first, second ) {\n\t\tvar len = +second.length,\n\t\t\tj = 0,\n\t\t\ti = first.length;\n\n\t\tfor ( ; j < len; j++ ) {\n\t\t\tfirst[ i++ ] = second[ j ];\n\t\t}\n\n\t\tfirst.length = i;\n\n\t\treturn first;\n\t},\n\n\tgrep: function( elems, callback, invert ) {\n\t\tvar callbackInverse,\n\t\t\tmatches = [],\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tcallbackExpect = !invert;\n\n\t\t// Go through the array, only saving the items\n\t\t// that pass the validator function\n\t\tfor ( ; i < length; i++ ) {\n\t\t\tcallbackInverse = !callback( elems[ i ], i );\n\t\t\tif ( callbackInverse !== callbackExpect ) {\n\t\t\t\tmatches.push( elems[ i ] );\n\t\t\t}\n\t\t}\n\n\t\treturn matches;\n\t},\n\n\t// arg is for internal usage only\n\tmap: function( elems, callback, arg ) {\n\t\tvar value,\n\t\t\ti = 0,\n\t\t\tlength = elems.length,\n\t\t\tisArray = isArraylike( elems ),\n\t\t\tret = [];\n\n\t\t// Go through the array, translating each of the items to their new values\n\t\tif ( isArray ) {\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Go through every key on the object,\n\t\t} else {\n\t\t\tfor ( i in elems ) {\n\t\t\t\tvalue = callback( elems[ i ], i, arg );\n\n\t\t\t\tif ( value != null ) {\n\t\t\t\t\tret.push( value );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Flatten any nested arrays\n\t\treturn concat.apply( [], ret );\n\t},\n\n\t// A global GUID counter for objects\n\tguid: 1,\n\n\t// Bind a function to a context, optionally partially applying any\n\t// arguments.\n\tproxy: function( fn, context ) {\n\t\tvar tmp, args, proxy;\n\n\t\tif ( typeof context === \"string\" ) {\n\t\t\ttmp = fn[ context ];\n\t\t\tcontext = fn;\n\t\t\tfn = tmp;\n\t\t}\n\n\t\t// Quick check to determine if target is callable, in the spec\n\t\t// this throws a TypeError, but we will just return undefined.\n\t\tif ( !jQuery.isFunction( fn ) ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Simulated bind\n\t\targs = slice.call( arguments, 2 );\n\t\tproxy = function() {\n\t\t\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\n\t\t};\n\n\t\t// Set the guid of unique handler to the same of original handler, so it can be removed\n\t\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\n\n\t\treturn proxy;\n\t},\n\n\tnow: Date.now,\n\n\t// jQuery.support is not used in Core but other projects attach their\n\t// properties to it so it needs to exist.\n\tsupport: support\n});\n\n// Populate the class2type map\njQuery.each(\"Boolean Number String Function Array Date RegExp Object Error\".split(\" \"), function(i, name) {\n\tclass2type[ \"[object \" + name + \"]\" ] = name.toLowerCase();\n});\n\nfunction isArraylike( obj ) {\n\tvar length = obj.length,\n\t\ttype = jQuery.type( obj );\n\n\tif ( type === \"function\" || jQuery.isWindow( obj ) ) {\n\t\treturn false;\n\t}\n\n\tif ( obj.nodeType === 1 && length ) {\n\t\treturn true;\n\t}\n\n\treturn type === \"array\" || length === 0 ||\n\t\ttypeof length === \"number\" && length > 0 && ( length - 1 ) in obj;\n}\nvar Sizzle =\n/*!\n * Sizzle CSS Selector Engine v1.10.19\n * http://sizzlejs.com/\n *\n * Copyright 2013 jQuery Foundation, Inc. and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-04-18\n */\n(function( window ) {\n\nvar i,\n\tsupport,\n\tExpr,\n\tgetText,\n\tisXML,\n\ttokenize,\n\tcompile,\n\tselect,\n\toutermostContext,\n\tsortInput,\n\thasDuplicate,\n\n\t// Local document vars\n\tsetDocument,\n\tdocument,\n\tdocElem,\n\tdocumentIsHTML,\n\trbuggyQSA,\n\trbuggyMatches,\n\tmatches,\n\tcontains,\n\n\t// Instance-specific data\n\texpando = \"sizzle\" + -(new Date()),\n\tpreferredDoc = window.document,\n\tdirruns = 0,\n\tdone = 0,\n\tclassCache = createCache(),\n\ttokenCache = createCache(),\n\tcompilerCache = createCache(),\n\tsortOrder = function( a, b ) {\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t}\n\t\treturn 0;\n\t},\n\n\t// General-purpose constants\n\tstrundefined = typeof undefined,\n\tMAX_NEGATIVE = 1 << 31,\n\n\t// Instance methods\n\thasOwn = ({}).hasOwnProperty,\n\tarr = [],\n\tpop = arr.pop,\n\tpush_native = arr.push,\n\tpush = arr.push,\n\tslice = arr.slice,\n\t// Use a stripped-down indexOf if we can't use a native one\n\tindexOf = arr.indexOf || function( elem ) {\n\t\tvar i = 0,\n\t\t\tlen = this.length;\n\t\tfor ( ; i < len; i++ ) {\n\t\t\tif ( this[i] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\treturn -1;\n\t},\n\n\tbooleans = \"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\",\n\n\t// Regular expressions\n\n\t// Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\n\twhitespace = \"[\\\\x20\\\\t\\\\r\\\\n\\\\f]\",\n\t// http://www.w3.org/TR/css3-syntax/#characters\n\tcharacterEncoding = \"(?:\\\\\\\\.|[\\\\w-]|[^\\\\x00-\\\\xa0])+\",\n\n\t// Loosely modeled on CSS identifier characters\n\t// An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\n\t// Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\n\tidentifier = characterEncoding.replace( \"w\", \"w#\" ),\n\n\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\n\tattributes = \"\\\\[\" + whitespace + \"*(\" + characterEncoding + \")(?:\" + whitespace +\n\t\t// Operator (capture 2)\n\t\t\"*([*^$|!~]?=)\" + whitespace +\n\t\t// \"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\"\n\t\t\"*(?:'((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\"|(\" + identifier + \"))|)\" + whitespace +\n\t\t\"*\\\\]\",\n\n\tpseudos = \":(\" + characterEncoding + \")(?:\\\\((\" +\n\t\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\n\t\t// 1. quoted (capture 3; capture 4 or capture 5)\n\t\t\"('((?:\\\\\\\\.|[^\\\\\\\\'])*)'|\\\"((?:\\\\\\\\.|[^\\\\\\\\\\\"])*)\\\")|\" +\n\t\t// 2. simple (capture 6)\n\t\t\"((?:\\\\\\\\.|[^\\\\\\\\()[\\\\]]|\" + attributes + \")*)|\" +\n\t\t// 3. anything else (capture 2)\n\t\t\".*\" +\n\t\t\")\\\\)|)\",\n\n\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\n\trtrim = new RegExp( \"^\" + whitespace + \"+|((?:^|[^\\\\\\\\])(?:\\\\\\\\.)*)\" + whitespace + \"+$\", \"g\" ),\n\n\trcomma = new RegExp( \"^\" + whitespace + \"*,\" + whitespace + \"*\" ),\n\trcombinators = new RegExp( \"^\" + whitespace + \"*([>+~]|\" + whitespace + \")\" + whitespace + \"*\" ),\n\n\trattributeQuotes = new RegExp( \"=\" + whitespace + \"*([^\\\\]'\\\"]*?)\" + whitespace + \"*\\\\]\", \"g\" ),\n\n\trpseudo = new RegExp( pseudos ),\n\tridentifier = new RegExp( \"^\" + identifier + \"$\" ),\n\n\tmatchExpr = {\n\t\t\"ID\": new RegExp( \"^#(\" + characterEncoding + \")\" ),\n\t\t\"CLASS\": new RegExp( \"^\\\\.(\" + characterEncoding + \")\" ),\n\t\t\"TAG\": new RegExp( \"^(\" + characterEncoding.replace( \"w\", \"w*\" ) + \")\" ),\n\t\t\"ATTR\": new RegExp( \"^\" + attributes ),\n\t\t\"PSEUDO\": new RegExp( \"^\" + pseudos ),\n\t\t\"CHILD\": new RegExp( \"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\(\" + whitespace +\n\t\t\t\"*(even|odd|(([+-]|)(\\\\d*)n|)\" + whitespace + \"*(?:([+-]|)\" + whitespace +\n\t\t\t\"*(\\\\d+)|))\" + whitespace + \"*\\\\)|)\", \"i\" ),\n\t\t\"bool\": new RegExp( \"^(?:\" + booleans + \")$\", \"i\" ),\n\t\t// For use in libraries implementing .is()\n\t\t// We use this for POS matching in `select`\n\t\t\"needsContext\": new RegExp( \"^\" + whitespace + \"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\(\" +\n\t\t\twhitespace + \"*((?:-\\\\d)?\\\\d*)\" + whitespace + \"*\\\\)|)(?=[^-]|$)\", \"i\" )\n\t},\n\n\trinputs = /^(?:input|select|textarea|button)$/i,\n\trheader = /^h\\d$/i,\n\n\trnative = /^[^{]+\\{\\s*\\[native \\w/,\n\n\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\n\trquickExpr = /^(?:#([\\w-]+)|(\\w+)|\\.([\\w-]+))$/,\n\n\trsibling = /[+~]/,\n\trescape = /'|\\\\/g,\n\n\t// CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\n\trunescape = new RegExp( \"\\\\\\\\([\\\\da-f]{1,6}\" + whitespace + \"?|(\" + whitespace + \")|.)\", \"ig\" ),\n\tfunescape = function( _, escaped, escapedWhitespace ) {\n\t\tvar high = \"0x\" + escaped - 0x10000;\n\t\t// NaN means non-codepoint\n\t\t// Support: Firefox<24\n\t\t// Workaround erroneous numeric interpretation of +\"0x\"\n\t\treturn high !== high || escapedWhitespace ?\n\t\t\tescaped :\n\t\t\thigh < 0 ?\n\t\t\t\t// BMP codepoint\n\t\t\t\tString.fromCharCode( high + 0x10000 ) :\n\t\t\t\t// Supplemental Plane codepoint (surrogate pair)\n\t\t\t\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\n\t};\n\n// Optimize for push.apply( _, NodeList )\ntry {\n\tpush.apply(\n\t\t(arr = slice.call( preferredDoc.childNodes )),\n\t\tpreferredDoc.childNodes\n\t);\n\t// Support: Android<4.0\n\t// Detect silently failing push.apply\n\tarr[ preferredDoc.childNodes.length ].nodeType;\n} catch ( e ) {\n\tpush = { apply: arr.length ?\n\n\t\t// Leverage slice if possible\n\t\tfunction( target, els ) {\n\t\t\tpush_native.apply( target, slice.call(els) );\n\t\t} :\n\n\t\t// Support: IE<9\n\t\t// Otherwise append directly\n\t\tfunction( target, els ) {\n\t\t\tvar j = target.length,\n\t\t\t\ti = 0;\n\t\t\t// Can't trust NodeList.length\n\t\t\twhile ( (target[j++] = els[i++]) ) {}\n\t\t\ttarget.length = j - 1;\n\t\t}\n\t};\n}\n\nfunction Sizzle( selector, context, results, seed ) {\n\tvar match, elem, m, nodeType,\n\t\t// QSA vars\n\t\ti, groups, old, nid, newContext, newSelector;\n\n\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\n\tcontext = context || document;\n\tresults = results || [];\n\n\tif ( !selector || typeof selector !== \"string\" ) {\n\t\treturn results;\n\t}\n\n\tif ( (nodeType = context.nodeType) !== 1 && nodeType !== 9 ) {\n\t\treturn [];\n\t}\n\n\tif ( documentIsHTML && !seed ) {\n\n\t\t// Shortcuts\n\t\tif ( (match = rquickExpr.exec( selector )) ) {\n\t\t\t// Speed-up: Sizzle(\"#ID\")\n\t\t\tif ( (m = match[1]) ) {\n\t\t\t\tif ( nodeType === 9 ) {\n\t\t\t\t\telem = context.getElementById( m );\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document (jQuery #6963)\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Handle the case where IE, Opera, and Webkit return items\n\t\t\t\t\t\t// by name instead of ID\n\t\t\t\t\t\tif ( elem.id === m ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\treturn results;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// Context is not a document\n\t\t\t\t\tif ( context.ownerDocument && (elem = context.ownerDocument.getElementById( m )) &&\n\t\t\t\t\t\tcontains( context, elem ) && elem.id === m ) {\n\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Speed-up: Sizzle(\"TAG\")\n\t\t\t} else if ( match[2] ) {\n\t\t\t\tpush.apply( results, context.getElementsByTagName( selector ) );\n\t\t\t\treturn results;\n\n\t\t\t// Speed-up: Sizzle(\".CLASS\")\n\t\t\t} else if ( (m = match[3]) && support.getElementsByClassName && context.getElementsByClassName ) {\n\t\t\t\tpush.apply( results, context.getElementsByClassName( m ) );\n\t\t\t\treturn results;\n\t\t\t}\n\t\t}\n\n\t\t// QSA path\n\t\tif ( support.qsa && (!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\n\t\t\tnid = old = expando;\n\t\t\tnewContext = context;\n\t\t\tnewSelector = nodeType === 9 && selector;\n\n\t\t\t// qSA works strangely on Element-rooted queries\n\t\t\t// We can work around this by specifying an extra ID on the root\n\t\t\t// and working up from there (Thanks to Andrew Dupont for the technique)\n\t\t\t// IE 8 doesn't work on object elements\n\t\t\tif ( nodeType === 1 && context.nodeName.toLowerCase() !== \"object\" ) {\n\t\t\t\tgroups = tokenize( selector );\n\n\t\t\t\tif ( (old = context.getAttribute(\"id\")) ) {\n\t\t\t\t\tnid = old.replace( rescape, \"\\\\$&\" );\n\t\t\t\t} else {\n\t\t\t\t\tcontext.setAttribute( \"id\", nid );\n\t\t\t\t}\n\t\t\t\tnid = \"[id='\" + nid + \"'] \";\n\n\t\t\t\ti = groups.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tgroups[i] = nid + toSelector( groups[i] );\n\t\t\t\t}\n\t\t\t\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) || context;\n\t\t\t\tnewSelector = groups.join(\",\");\n\t\t\t}\n\n\t\t\tif ( newSelector ) {\n\t\t\t\ttry {\n\t\t\t\t\tpush.apply( results,\n\t\t\t\t\t\tnewContext.querySelectorAll( newSelector )\n\t\t\t\t\t);\n\t\t\t\t\treturn results;\n\t\t\t\t} catch(qsaError) {\n\t\t\t\t} finally {\n\t\t\t\t\tif ( !old ) {\n\t\t\t\t\t\tcontext.removeAttribute(\"id\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// All others\n\treturn select( selector.replace( rtrim, \"$1\" ), context, results, seed );\n}\n\n/**\n * Create key-value caches of limited size\n * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\n *\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\n *\tdeleting the oldest entry\n */\nfunction createCache() {\n\tvar keys = [];\n\n\tfunction cache( key, value ) {\n\t\t// Use (key + \" \") to avoid collision with native prototype properties (see Issue #157)\n\t\tif ( keys.push( key + \" \" ) > Expr.cacheLength ) {\n\t\t\t// Only keep the most recent entries\n\t\t\tdelete cache[ keys.shift() ];\n\t\t}\n\t\treturn (cache[ key + \" \" ] = value);\n\t}\n\treturn cache;\n}\n\n/**\n * Mark a function for special use by Sizzle\n * @param {Function} fn The function to mark\n */\nfunction markFunction( fn ) {\n\tfn[ expando ] = true;\n\treturn fn;\n}\n\n/**\n * Support testing using an element\n * @param {Function} fn Passed the created div and expects a boolean result\n */\nfunction assert( fn ) {\n\tvar div = document.createElement(\"div\");\n\n\ttry {\n\t\treturn !!fn( div );\n\t} catch (e) {\n\t\treturn false;\n\t} finally {\n\t\t// Remove from its parent by default\n\t\tif ( div.parentNode ) {\n\t\t\tdiv.parentNode.removeChild( div );\n\t\t}\n\t\t// release memory in IE\n\t\tdiv = null;\n\t}\n}\n\n/**\n * Adds the same handler for all of the specified attrs\n * @param {String} attrs Pipe-separated list of attributes\n * @param {Function} handler The method that will be applied\n */\nfunction addHandle( attrs, handler ) {\n\tvar arr = attrs.split(\"|\"),\n\t\ti = attrs.length;\n\n\twhile ( i-- ) {\n\t\tExpr.attrHandle[ arr[i] ] = handler;\n\t}\n}\n\n/**\n * Checks document order of two siblings\n * @param {Element} a\n * @param {Element} b\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\n */\nfunction siblingCheck( a, b ) {\n\tvar cur = b && a,\n\t\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\n\t\t\t( ~b.sourceIndex || MAX_NEGATIVE ) -\n\t\t\t( ~a.sourceIndex || MAX_NEGATIVE );\n\n\t// Use IE sourceIndex if available on both nodes\n\tif ( diff ) {\n\t\treturn diff;\n\t}\n\n\t// Check if b follows a\n\tif ( cur ) {\n\t\twhile ( (cur = cur.nextSibling) ) {\n\t\t\tif ( cur === b ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a ? 1 : -1;\n}\n\n/**\n * Returns a function to use in pseudos for input types\n * @param {String} type\n */\nfunction createInputPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn name === \"input\" && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for buttons\n * @param {String} type\n */\nfunction createButtonPseudo( type ) {\n\treturn function( elem ) {\n\t\tvar name = elem.nodeName.toLowerCase();\n\t\treturn (name === \"input\" || name === \"button\") && elem.type === type;\n\t};\n}\n\n/**\n * Returns a function to use in pseudos for positionals\n * @param {Function} fn\n */\nfunction createPositionalPseudo( fn ) {\n\treturn markFunction(function( argument ) {\n\t\targument = +argument;\n\t\treturn markFunction(function( seed, matches ) {\n\t\t\tvar j,\n\t\t\t\tmatchIndexes = fn( [], seed.length, argument ),\n\t\t\t\ti = matchIndexes.length;\n\n\t\t\t// Match elements found at the specified indexes\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( seed[ (j = matchIndexes[i]) ] ) {\n\t\t\t\t\tseed[j] = !(matches[j] = seed[j]);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Checks a node for validity as a Sizzle context\n * @param {Element|Object=} context\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\n */\nfunction testContext( context ) {\n\treturn context && typeof context.getElementsByTagName !== strundefined && context;\n}\n\n// Expose support vars for convenience\nsupport = Sizzle.support = {};\n\n/**\n * Detects XML nodes\n * @param {Element|Object} elem An element or a document\n * @returns {Boolean} True iff elem is a non-HTML XML node\n */\nisXML = Sizzle.isXML = function( elem ) {\n\t// documentElement is verified for cases where it doesn't yet exist\n\t// (such as loading iframes in IE - #4833)\n\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\n\treturn documentElement ? documentElement.nodeName !== \"HTML\" : false;\n};\n\n/**\n * Sets document-related variables once based on the current document\n * @param {Element|Object} [doc] An element or document object to use to set the document\n * @returns {Object} Returns the current document\n */\nsetDocument = Sizzle.setDocument = function( node ) {\n\tvar hasCompare,\n\t\tdoc = node ? node.ownerDocument || node : preferredDoc,\n\t\tparent = doc.defaultView;\n\n\t// If no document and documentElement is available, return\n\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\n\t\treturn document;\n\t}\n\n\t// Set our document\n\tdocument = doc;\n\tdocElem = doc.documentElement;\n\n\t// Support tests\n\tdocumentIsHTML = !isXML( doc );\n\n\t// Support: IE>8\n\t// If iframe document is assigned to \"document\" variable and if iframe has been reloaded,\n\t// IE will throw \"permission denied\" error when accessing \"document\" variable, see jQuery #13936\n\t// IE6-8 do not support the defaultView property so parent will be undefined\n\tif ( parent && parent !== parent.top ) {\n\t\t// IE11 does not have attachEvent, so all must suffer\n\t\tif ( parent.addEventListener ) {\n\t\t\tparent.addEventListener( \"unload\", function() {\n\t\t\t\tsetDocument();\n\t\t\t}, false );\n\t\t} else if ( parent.attachEvent ) {\n\t\t\tparent.attachEvent( \"onunload\", function() {\n\t\t\t\tsetDocument();\n\t\t\t});\n\t\t}\n\t}\n\n\t/* Attributes\n\t---------------------------------------------------------------------- */\n\n\t// Support: IE<8\n\t// Verify that getAttribute really returns attributes and not properties (excepting IE8 booleans)\n\tsupport.attributes = assert(function( div ) {\n\t\tdiv.className = \"i\";\n\t\treturn !div.getAttribute(\"className\");\n\t});\n\n\t/* getElement(s)By*\n\t---------------------------------------------------------------------- */\n\n\t// Check if getElementsByTagName(\"*\") returns only elements\n\tsupport.getElementsByTagName = assert(function( div ) {\n\t\tdiv.appendChild( doc.createComment(\"\") );\n\t\treturn !div.getElementsByTagName(\"*\").length;\n\t});\n\n\t// Check if getElementsByClassName can be trusted\n\tsupport.getElementsByClassName = rnative.test( doc.getElementsByClassName ) && assert(function( div ) {\n\t\tdiv.innerHTML = \"<div class='a'></div><div class='a i'></div>\";\n\n\t\t// Support: Safari<4\n\t\t// Catch class over-caching\n\t\tdiv.firstChild.className = \"i\";\n\t\t// Support: Opera<10\n\t\t// Catch gEBCN failure to find non-leading classes\n\t\treturn div.getElementsByClassName(\"i\").length === 2;\n\t});\n\n\t// Support: IE<10\n\t// Check if getElementById returns elements by name\n\t// The broken getElementById methods don't pick up programatically-set names,\n\t// so use a roundabout getElementsByName test\n\tsupport.getById = assert(function( div ) {\n\t\tdocElem.appendChild( div ).id = expando;\n\t\treturn !doc.getElementsByName || !doc.getElementsByName( expando ).length;\n\t});\n\n\t// ID find and filter\n\tif ( support.getById ) {\n\t\tExpr.find[\"ID\"] = function( id, context ) {\n\t\t\tif ( typeof context.getElementById !== strundefined && documentIsHTML ) {\n\t\t\t\tvar m = context.getElementById( id );\n\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\treturn m && m.parentNode ? [ m ] : [];\n\t\t\t}\n\t\t};\n\t\tExpr.filter[\"ID\"] = function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\treturn elem.getAttribute(\"id\") === attrId;\n\t\t\t};\n\t\t};\n\t} else {\n\t\t// Support: IE6/7\n\t\t// getElementById is not reliable as a find shortcut\n\t\tdelete Expr.find[\"ID\"];\n\n\t\tExpr.filter[\"ID\"] =  function( id ) {\n\t\t\tvar attrId = id.replace( runescape, funescape );\n\t\t\treturn function( elem ) {\n\t\t\t\tvar node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode(\"id\");\n\t\t\t\treturn node && node.value === attrId;\n\t\t\t};\n\t\t};\n\t}\n\n\t// Tag\n\tExpr.find[\"TAG\"] = support.getElementsByTagName ?\n\t\tfunction( tag, context ) {\n\t\t\tif ( typeof context.getElementsByTagName !== strundefined ) {\n\t\t\t\treturn context.getElementsByTagName( tag );\n\t\t\t}\n\t\t} :\n\t\tfunction( tag, context ) {\n\t\t\tvar elem,\n\t\t\t\ttmp = [],\n\t\t\t\ti = 0,\n\t\t\t\tresults = context.getElementsByTagName( tag );\n\n\t\t\t// Filter out possible comments\n\t\t\tif ( tag === \"*\" ) {\n\t\t\t\twhile ( (elem = results[i++]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\ttmp.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn tmp;\n\t\t\t}\n\t\t\treturn results;\n\t\t};\n\n\t// Class\n\tExpr.find[\"CLASS\"] = support.getElementsByClassName && function( className, context ) {\n\t\tif ( typeof context.getElementsByClassName !== strundefined && documentIsHTML ) {\n\t\t\treturn context.getElementsByClassName( className );\n\t\t}\n\t};\n\n\t/* QSA/matchesSelector\n\t---------------------------------------------------------------------- */\n\n\t// QSA and matchesSelector support\n\n\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\n\trbuggyMatches = [];\n\n\t// qSa(:focus) reports false when true (Chrome 21)\n\t// We allow this because of a bug in IE8/9 that throws an error\n\t// whenever `document.activeElement` is accessed on an iframe\n\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\n\t// See http://bugs.jquery.com/ticket/13378\n\trbuggyQSA = [];\n\n\tif ( (support.qsa = rnative.test( doc.querySelectorAll )) ) {\n\t\t// Build QSA regex\n\t\t// Regex strategy adopted from Diego Perini\n\t\tassert(function( div ) {\n\t\t\t// Select is set to empty string on purpose\n\t\t\t// This is to test IE's treatment of not explicitly\n\t\t\t// setting a boolean content attribute,\n\t\t\t// since its presence should be enough\n\t\t\t// http://bugs.jquery.com/ticket/12359\n\t\t\tdiv.innerHTML = \"<select msallowclip=''><option selected=''></option></select>\";\n\n\t\t\t// Support: IE8, Opera 11-12.16\n\t\t\t// Nothing should be selected when empty strings follow ^= or $= or *=\n\t\t\t// The test attribute must be unknown in Opera but \"safe\" for WinRT\n\t\t\t// http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\n\t\t\tif ( div.querySelectorAll(\"[msallowclip^='']\").length ) {\n\t\t\t\trbuggyQSA.push( \"[*^$]=\" + whitespace + \"*(?:''|\\\"\\\")\" );\n\t\t\t}\n\n\t\t\t// Support: IE8\n\t\t\t// Boolean attributes and \"value\" are not treated correctly\n\t\t\tif ( !div.querySelectorAll(\"[selected]\").length ) {\n\t\t\t\trbuggyQSA.push( \"\\\\[\" + whitespace + \"*(?:value|\" + booleans + \")\" );\n\t\t\t}\n\n\t\t\t// Webkit/Opera - :checked should return selected option elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":checked\").length ) {\n\t\t\t\trbuggyQSA.push(\":checked\");\n\t\t\t}\n\t\t});\n\n\t\tassert(function( div ) {\n\t\t\t// Support: Windows 8 Native Apps\n\t\t\t// The type and name attributes are restricted during .innerHTML assignment\n\t\t\tvar input = doc.createElement(\"input\");\n\t\t\tinput.setAttribute( \"type\", \"hidden\" );\n\t\t\tdiv.appendChild( input ).setAttribute( \"name\", \"D\" );\n\n\t\t\t// Support: IE8\n\t\t\t// Enforce case-sensitivity of name attribute\n\t\t\tif ( div.querySelectorAll(\"[name=d]\").length ) {\n\t\t\t\trbuggyQSA.push( \"name\" + whitespace + \"*[*^$|!~]?=\" );\n\t\t\t}\n\n\t\t\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\n\t\t\t// IE8 throws error here and will not see later tests\n\t\t\tif ( !div.querySelectorAll(\":enabled\").length ) {\n\t\t\t\trbuggyQSA.push( \":enabled\", \":disabled\" );\n\t\t\t}\n\n\t\t\t// Opera 10-11 does not throw on post-comma invalid pseudos\n\t\t\tdiv.querySelectorAll(\"*,:x\");\n\t\t\trbuggyQSA.push(\",.*:\");\n\t\t});\n\t}\n\n\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\n\t\tdocElem.webkitMatchesSelector ||\n\t\tdocElem.mozMatchesSelector ||\n\t\tdocElem.oMatchesSelector ||\n\t\tdocElem.msMatchesSelector) )) ) {\n\n\t\tassert(function( div ) {\n\t\t\t// Check to see if it's possible to do matchesSelector\n\t\t\t// on a disconnected node (IE 9)\n\t\t\tsupport.disconnectedMatch = matches.call( div, \"div\" );\n\n\t\t\t// This should fail with an exception\n\t\t\t// Gecko does not error, returns false instead\n\t\t\tmatches.call( div, \"[s!='']:x\" );\n\t\t\trbuggyMatches.push( \"!=\", pseudos );\n\t\t});\n\t}\n\n\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\"|\") );\n\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\"|\") );\n\n\t/* Contains\n\t---------------------------------------------------------------------- */\n\thasCompare = rnative.test( docElem.compareDocumentPosition );\n\n\t// Element contains another\n\t// Purposefully does not implement inclusive descendent\n\t// As in, an element does not contain itself\n\tcontains = hasCompare || rnative.test( docElem.contains ) ?\n\t\tfunction( a, b ) {\n\t\t\tvar adown = a.nodeType === 9 ? a.documentElement : a,\n\t\t\t\tbup = b && b.parentNode;\n\t\t\treturn a === bup || !!( bup && bup.nodeType === 1 && (\n\t\t\t\tadown.contains ?\n\t\t\t\t\tadown.contains( bup ) :\n\t\t\t\t\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\n\t\t\t));\n\t\t} :\n\t\tfunction( a, b ) {\n\t\t\tif ( b ) {\n\t\t\t\twhile ( (b = b.parentNode) ) {\n\t\t\t\t\tif ( b === a ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\n\t/* Sorting\n\t---------------------------------------------------------------------- */\n\n\t// Document order sorting\n\tsortOrder = hasCompare ?\n\tfunction( a, b ) {\n\n\t\t// Flag for duplicate removal\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Sort on method existence if only one input has compareDocumentPosition\n\t\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\n\t\tif ( compare ) {\n\t\t\treturn compare;\n\t\t}\n\n\t\t// Calculate position if both inputs belong to the same document\n\t\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\n\t\t\ta.compareDocumentPosition( b ) :\n\n\t\t\t// Otherwise we know they are disconnected\n\t\t\t1;\n\n\t\t// Disconnected nodes\n\t\tif ( compare & 1 ||\n\t\t\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\n\n\t\t\t// Choose the first element that is related to our preferred document\n\t\t\tif ( a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\n\t\t\t\treturn -1;\n\t\t\t}\n\t\t\tif ( b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\n\t\t\t\treturn 1;\n\t\t\t}\n\n\t\t\t// Maintain original order\n\t\t\treturn sortInput ?\n\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n\t\t\t\t0;\n\t\t}\n\n\t\treturn compare & 4 ? -1 : 1;\n\t} :\n\tfunction( a, b ) {\n\t\t// Exit early if the nodes are identical\n\t\tif ( a === b ) {\n\t\t\thasDuplicate = true;\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\taup = a.parentNode,\n\t\t\tbup = b.parentNode,\n\t\t\tap = [ a ],\n\t\t\tbp = [ b ];\n\n\t\t// Parentless nodes are either documents or disconnected\n\t\tif ( !aup || !bup ) {\n\t\t\treturn a === doc ? -1 :\n\t\t\t\tb === doc ? 1 :\n\t\t\t\taup ? -1 :\n\t\t\t\tbup ? 1 :\n\t\t\t\tsortInput ?\n\t\t\t\t( indexOf.call( sortInput, a ) - indexOf.call( sortInput, b ) ) :\n\t\t\t\t0;\n\n\t\t// If the nodes are siblings, we can do a quick check\n\t\t} else if ( aup === bup ) {\n\t\t\treturn siblingCheck( a, b );\n\t\t}\n\n\t\t// Otherwise we need full lists of their ancestors for comparison\n\t\tcur = a;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tap.unshift( cur );\n\t\t}\n\t\tcur = b;\n\t\twhile ( (cur = cur.parentNode) ) {\n\t\t\tbp.unshift( cur );\n\t\t}\n\n\t\t// Walk down the tree looking for a discrepancy\n\t\twhile ( ap[i] === bp[i] ) {\n\t\t\ti++;\n\t\t}\n\n\t\treturn i ?\n\t\t\t// Do a sibling check if the nodes have a common ancestor\n\t\t\tsiblingCheck( ap[i], bp[i] ) :\n\n\t\t\t// Otherwise nodes in our document sort first\n\t\t\tap[i] === preferredDoc ? -1 :\n\t\t\tbp[i] === preferredDoc ? 1 :\n\t\t\t0;\n\t};\n\n\treturn doc;\n};\n\nSizzle.matches = function( expr, elements ) {\n\treturn Sizzle( expr, null, null, elements );\n};\n\nSizzle.matchesSelector = function( elem, expr ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\t// Make sure that attribute selectors are quoted\n\texpr = expr.replace( rattributeQuotes, \"='$1']\" );\n\n\tif ( support.matchesSelector && documentIsHTML &&\n\t\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\n\t\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\n\n\t\ttry {\n\t\t\tvar ret = matches.call( elem, expr );\n\n\t\t\t// IE 9's matchesSelector returns false on disconnected nodes\n\t\t\tif ( ret || support.disconnectedMatch ||\n\t\t\t\t\t// As well, disconnected nodes are said to be in a document\n\t\t\t\t\t// fragment in IE 9\n\t\t\t\t\telem.document && elem.document.nodeType !== 11 ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t} catch(e) {}\n\t}\n\n\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\n};\n\nSizzle.contains = function( context, elem ) {\n\t// Set document vars if needed\n\tif ( ( context.ownerDocument || context ) !== document ) {\n\t\tsetDocument( context );\n\t}\n\treturn contains( context, elem );\n};\n\nSizzle.attr = function( elem, name ) {\n\t// Set document vars if needed\n\tif ( ( elem.ownerDocument || elem ) !== document ) {\n\t\tsetDocument( elem );\n\t}\n\n\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\n\t\t// Don't get fooled by Object.prototype properties (jQuery #13807)\n\t\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\n\t\t\tfn( elem, name, !documentIsHTML ) :\n\t\t\tundefined;\n\n\treturn val !== undefined ?\n\t\tval :\n\t\tsupport.attributes || !documentIsHTML ?\n\t\t\telem.getAttribute( name ) :\n\t\t\t(val = elem.getAttributeNode(name)) && val.specified ?\n\t\t\t\tval.value :\n\t\t\t\tnull;\n};\n\nSizzle.error = function( msg ) {\n\tthrow new Error( \"Syntax error, unrecognized expression: \" + msg );\n};\n\n/**\n * Document sorting and removing duplicates\n * @param {ArrayLike} results\n */\nSizzle.uniqueSort = function( results ) {\n\tvar elem,\n\t\tduplicates = [],\n\t\tj = 0,\n\t\ti = 0;\n\n\t// Unless we *know* we can detect duplicates, assume their presence\n\thasDuplicate = !support.detectDuplicates;\n\tsortInput = !support.sortStable && results.slice( 0 );\n\tresults.sort( sortOrder );\n\n\tif ( hasDuplicate ) {\n\t\twhile ( (elem = results[i++]) ) {\n\t\t\tif ( elem === results[ i ] ) {\n\t\t\t\tj = duplicates.push( i );\n\t\t\t}\n\t\t}\n\t\twhile ( j-- ) {\n\t\t\tresults.splice( duplicates[ j ], 1 );\n\t\t}\n\t}\n\n\t// Clear input after sorting to release objects\n\t// See https://github.com/jquery/sizzle/pull/225\n\tsortInput = null;\n\n\treturn results;\n};\n\n/**\n * Utility function for retrieving the text value of an array of DOM nodes\n * @param {Array|Element} elem\n */\ngetText = Sizzle.getText = function( elem ) {\n\tvar node,\n\t\tret = \"\",\n\t\ti = 0,\n\t\tnodeType = elem.nodeType;\n\n\tif ( !nodeType ) {\n\t\t// If no nodeType, this is expected to be an array\n\t\twhile ( (node = elem[i++]) ) {\n\t\t\t// Do not traverse comment nodes\n\t\t\tret += getText( node );\n\t\t}\n\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\n\t\t// Use textContent for elements\n\t\t// innerText usage removed for consistency of new lines (jQuery #11153)\n\t\tif ( typeof elem.textContent === \"string\" ) {\n\t\t\treturn elem.textContent;\n\t\t} else {\n\t\t\t// Traverse its children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tret += getText( elem );\n\t\t\t}\n\t\t}\n\t} else if ( nodeType === 3 || nodeType === 4 ) {\n\t\treturn elem.nodeValue;\n\t}\n\t// Do not include comment or processing instruction nodes\n\n\treturn ret;\n};\n\nExpr = Sizzle.selectors = {\n\n\t// Can be adjusted by the user\n\tcacheLength: 50,\n\n\tcreatePseudo: markFunction,\n\n\tmatch: matchExpr,\n\n\tattrHandle: {},\n\n\tfind: {},\n\n\trelative: {\n\t\t\">\": { dir: \"parentNode\", first: true },\n\t\t\" \": { dir: \"parentNode\" },\n\t\t\"+\": { dir: \"previousSibling\", first: true },\n\t\t\"~\": { dir: \"previousSibling\" }\n\t},\n\n\tpreFilter: {\n\t\t\"ATTR\": function( match ) {\n\t\t\tmatch[1] = match[1].replace( runescape, funescape );\n\n\t\t\t// Move the given value to match[3] whether quoted or unquoted\n\t\t\tmatch[3] = ( match[3] || match[4] || match[5] || \"\" ).replace( runescape, funescape );\n\n\t\t\tif ( match[2] === \"~=\" ) {\n\t\t\t\tmatch[3] = \" \" + match[3] + \" \";\n\t\t\t}\n\n\t\t\treturn match.slice( 0, 4 );\n\t\t},\n\n\t\t\"CHILD\": function( match ) {\n\t\t\t/* matches from matchExpr[\"CHILD\"]\n\t\t\t\t1 type (only|nth|...)\n\t\t\t\t2 what (child|of-type)\n\t\t\t\t3 argument (even|odd|\\d*|\\d*n([+-]\\d+)?|...)\n\t\t\t\t4 xn-component of xn+y argument ([+-]?\\d*n|)\n\t\t\t\t5 sign of xn-component\n\t\t\t\t6 x of xn-component\n\t\t\t\t7 sign of y-component\n\t\t\t\t8 y of y-component\n\t\t\t*/\n\t\t\tmatch[1] = match[1].toLowerCase();\n\n\t\t\tif ( match[1].slice( 0, 3 ) === \"nth\" ) {\n\t\t\t\t// nth-* requires argument\n\t\t\t\tif ( !match[3] ) {\n\t\t\t\t\tSizzle.error( match[0] );\n\t\t\t\t}\n\n\t\t\t\t// numeric x and y parameters for Expr.filter.CHILD\n\t\t\t\t// remember that false/true cast respectively to 0/1\n\t\t\t\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \"even\" || match[3] === \"odd\" ) );\n\t\t\t\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \"odd\" );\n\n\t\t\t// other types prohibit arguments\n\t\t\t} else if ( match[3] ) {\n\t\t\t\tSizzle.error( match[0] );\n\t\t\t}\n\n\t\t\treturn match;\n\t\t},\n\n\t\t\"PSEUDO\": function( match ) {\n\t\t\tvar excess,\n\t\t\t\tunquoted = !match[6] && match[2];\n\n\t\t\tif ( matchExpr[\"CHILD\"].test( match[0] ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Accept quoted arguments as-is\n\t\t\tif ( match[3] ) {\n\t\t\t\tmatch[2] = match[4] || match[5] || \"\";\n\n\t\t\t// Strip excess characters from unquoted arguments\n\t\t\t} else if ( unquoted && rpseudo.test( unquoted ) &&\n\t\t\t\t// Get excess from tokenize (recursively)\n\t\t\t\t(excess = tokenize( unquoted, true )) &&\n\t\t\t\t// advance to the next closing parenthesis\n\t\t\t\t(excess = unquoted.indexOf( \")\", unquoted.length - excess ) - unquoted.length) ) {\n\n\t\t\t\t// excess is a negative index\n\t\t\t\tmatch[0] = match[0].slice( 0, excess );\n\t\t\t\tmatch[2] = unquoted.slice( 0, excess );\n\t\t\t}\n\n\t\t\t// Return only captures needed by the pseudo filter method (type and argument)\n\t\t\treturn match.slice( 0, 3 );\n\t\t}\n\t},\n\n\tfilter: {\n\n\t\t\"TAG\": function( nodeNameSelector ) {\n\t\t\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn nodeNameSelector === \"*\" ?\n\t\t\t\tfunction() { return true; } :\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\n\t\t\t\t};\n\t\t},\n\n\t\t\"CLASS\": function( className ) {\n\t\t\tvar pattern = classCache[ className + \" \" ];\n\n\t\t\treturn pattern ||\n\t\t\t\t(pattern = new RegExp( \"(^|\" + whitespace + \")\" + className + \"(\" + whitespace + \"|$)\" )) &&\n\t\t\t\tclassCache( className, function( elem ) {\n\t\t\t\t\treturn pattern.test( typeof elem.className === \"string\" && elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute(\"class\") || \"\" );\n\t\t\t\t});\n\t\t},\n\n\t\t\"ATTR\": function( name, operator, check ) {\n\t\t\treturn function( elem ) {\n\t\t\t\tvar result = Sizzle.attr( elem, name );\n\n\t\t\t\tif ( result == null ) {\n\t\t\t\t\treturn operator === \"!=\";\n\t\t\t\t}\n\t\t\t\tif ( !operator ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tresult += \"\";\n\n\t\t\t\treturn operator === \"=\" ? result === check :\n\t\t\t\t\toperator === \"!=\" ? result !== check :\n\t\t\t\t\toperator === \"^=\" ? check && result.indexOf( check ) === 0 :\n\t\t\t\t\toperator === \"*=\" ? check && result.indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"$=\" ? check && result.slice( -check.length ) === check :\n\t\t\t\t\toperator === \"~=\" ? ( \" \" + result + \" \" ).indexOf( check ) > -1 :\n\t\t\t\t\toperator === \"|=\" ? result === check || result.slice( 0, check.length + 1 ) === check + \"-\" :\n\t\t\t\t\tfalse;\n\t\t\t};\n\t\t},\n\n\t\t\"CHILD\": function( type, what, argument, first, last ) {\n\t\t\tvar simple = type.slice( 0, 3 ) !== \"nth\",\n\t\t\t\tforward = type.slice( -4 ) !== \"last\",\n\t\t\t\tofType = what === \"of-type\";\n\n\t\t\treturn first === 1 && last === 0 ?\n\n\t\t\t\t// Shortcut for :nth-*(n)\n\t\t\t\tfunction( elem ) {\n\t\t\t\t\treturn !!elem.parentNode;\n\t\t\t\t} :\n\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tvar cache, outerCache, node, diff, nodeIndex, start,\n\t\t\t\t\t\tdir = simple !== forward ? \"nextSibling\" : \"previousSibling\",\n\t\t\t\t\t\tparent = elem.parentNode,\n\t\t\t\t\t\tname = ofType && elem.nodeName.toLowerCase(),\n\t\t\t\t\t\tuseCache = !xml && !ofType;\n\n\t\t\t\t\tif ( parent ) {\n\n\t\t\t\t\t\t// :(first|last|only)-(child|of-type)\n\t\t\t\t\t\tif ( simple ) {\n\t\t\t\t\t\t\twhile ( dir ) {\n\t\t\t\t\t\t\t\tnode = elem;\n\t\t\t\t\t\t\t\twhile ( (node = node[ dir ]) ) {\n\t\t\t\t\t\t\t\t\tif ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) {\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// Reverse direction for :only-* (if we haven't yet done so)\n\t\t\t\t\t\t\t\tstart = dir = type === \"only\" && !start && \"nextSibling\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstart = [ forward ? parent.firstChild : parent.lastChild ];\n\n\t\t\t\t\t\t// non-xml :nth-child(...) stores cache data on `parent`\n\t\t\t\t\t\tif ( forward && useCache ) {\n\t\t\t\t\t\t\t// Seek `elem` from a previously-cached index\n\t\t\t\t\t\t\touterCache = parent[ expando ] || (parent[ expando ] = {});\n\t\t\t\t\t\t\tcache = outerCache[ type ] || [];\n\t\t\t\t\t\t\tnodeIndex = cache[0] === dirruns && cache[1];\n\t\t\t\t\t\t\tdiff = cache[0] === dirruns && cache[2];\n\t\t\t\t\t\t\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\n\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\n\t\t\t\t\t\t\t\t// Fallback to seeking `elem` from the start\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\t// When found, cache indexes on `parent` and break\n\t\t\t\t\t\t\t\tif ( node.nodeType === 1 && ++diff && node === elem ) {\n\t\t\t\t\t\t\t\t\touterCache[ type ] = [ dirruns, nodeIndex, diff ];\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Use previously-cached element index if available\n\t\t\t\t\t\t} else if ( useCache && (cache = (elem[ expando ] || (elem[ expando ] = {}))[ type ]) && cache[0] === dirruns ) {\n\t\t\t\t\t\t\tdiff = cache[1];\n\n\t\t\t\t\t\t// xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Use the same loop as above to seek `elem` from the start\n\t\t\t\t\t\t\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\n\t\t\t\t\t\t\t\t(diff = nodeIndex = 0) || start.pop()) ) {\n\n\t\t\t\t\t\t\t\tif ( ( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff ) {\n\t\t\t\t\t\t\t\t\t// Cache the index of each encountered element\n\t\t\t\t\t\t\t\t\tif ( useCache ) {\n\t\t\t\t\t\t\t\t\t\t(node[ expando ] || (node[ expando ] = {}))[ type ] = [ dirruns, diff ];\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif ( node === elem ) {\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Incorporate the offset, then check against cycle size\n\t\t\t\t\t\tdiff -= last;\n\t\t\t\t\t\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t},\n\n\t\t\"PSEUDO\": function( pseudo, argument ) {\n\t\t\t// pseudo-class names are case-insensitive\n\t\t\t// http://www.w3.org/TR/selectors/#pseudo-classes\n\t\t\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\n\t\t\t// Remember that setFilters inherits from pseudos\n\t\t\tvar args,\n\t\t\t\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\n\t\t\t\t\tSizzle.error( \"unsupported pseudo: \" + pseudo );\n\n\t\t\t// The user may use createPseudo to indicate that\n\t\t\t// arguments are needed to create the filter function\n\t\t\t// just as Sizzle does\n\t\t\tif ( fn[ expando ] ) {\n\t\t\t\treturn fn( argument );\n\t\t\t}\n\n\t\t\t// But maintain support for old signatures\n\t\t\tif ( fn.length > 1 ) {\n\t\t\t\targs = [ pseudo, pseudo, \"\", argument ];\n\t\t\t\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\n\t\t\t\t\tmarkFunction(function( seed, matches ) {\n\t\t\t\t\t\tvar idx,\n\t\t\t\t\t\t\tmatched = fn( seed, argument ),\n\t\t\t\t\t\t\ti = matched.length;\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tidx = indexOf.call( seed, matched[i] );\n\t\t\t\t\t\t\tseed[ idx ] = !( matches[ idx ] = matched[i] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}) :\n\t\t\t\t\tfunction( elem ) {\n\t\t\t\t\t\treturn fn( elem, 0, args );\n\t\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn fn;\n\t\t}\n\t},\n\n\tpseudos: {\n\t\t// Potentially complex pseudos\n\t\t\"not\": markFunction(function( selector ) {\n\t\t\t// Trim the selector passed to compile\n\t\t\t// to avoid treating leading and trailing\n\t\t\t// spaces as combinators\n\t\t\tvar input = [],\n\t\t\t\tresults = [],\n\t\t\t\tmatcher = compile( selector.replace( rtrim, \"$1\" ) );\n\n\t\t\treturn matcher[ expando ] ?\n\t\t\t\tmarkFunction(function( seed, matches, context, xml ) {\n\t\t\t\t\tvar elem,\n\t\t\t\t\t\tunmatched = matcher( seed, null, xml, [] ),\n\t\t\t\t\t\ti = seed.length;\n\n\t\t\t\t\t// Match elements unmatched by `matcher`\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = unmatched[i]) ) {\n\t\t\t\t\t\t\tseed[i] = !(matches[i] = elem);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}) :\n\t\t\t\tfunction( elem, context, xml ) {\n\t\t\t\t\tinput[0] = elem;\n\t\t\t\t\tmatcher( input, null, xml, results );\n\t\t\t\t\treturn !results.pop();\n\t\t\t\t};\n\t\t}),\n\n\t\t\"has\": markFunction(function( selector ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn Sizzle( selector, elem ).length > 0;\n\t\t\t};\n\t\t}),\n\n\t\t\"contains\": markFunction(function( text ) {\n\t\t\treturn function( elem ) {\n\t\t\t\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\n\t\t\t};\n\t\t}),\n\n\t\t// \"Whether an element is represented by a :lang() selector\n\t\t// is based solely on the element's language value\n\t\t// being equal to the identifier C,\n\t\t// or beginning with the identifier C immediately followed by \"-\".\n\t\t// The matching of C against the element's language value is performed case-insensitively.\n\t\t// The identifier C does not have to be a valid language name.\"\n\t\t// http://www.w3.org/TR/selectors/#lang-pseudo\n\t\t\"lang\": markFunction( function( lang ) {\n\t\t\t// lang value must be a valid identifier\n\t\t\tif ( !ridentifier.test(lang || \"\") ) {\n\t\t\t\tSizzle.error( \"unsupported lang: \" + lang );\n\t\t\t}\n\t\t\tlang = lang.replace( runescape, funescape ).toLowerCase();\n\t\t\treturn function( elem ) {\n\t\t\t\tvar elemLang;\n\t\t\t\tdo {\n\t\t\t\t\tif ( (elemLang = documentIsHTML ?\n\t\t\t\t\t\telem.lang :\n\t\t\t\t\t\telem.getAttribute(\"xml:lang\") || elem.getAttribute(\"lang\")) ) {\n\n\t\t\t\t\t\telemLang = elemLang.toLowerCase();\n\t\t\t\t\t\treturn elemLang === lang || elemLang.indexOf( lang + \"-\" ) === 0;\n\t\t\t\t\t}\n\t\t\t\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\n\t\t\t\treturn false;\n\t\t\t};\n\t\t}),\n\n\t\t// Miscellaneous\n\t\t\"target\": function( elem ) {\n\t\t\tvar hash = window.location && window.location.hash;\n\t\t\treturn hash && hash.slice( 1 ) === elem.id;\n\t\t},\n\n\t\t\"root\": function( elem ) {\n\t\t\treturn elem === docElem;\n\t\t},\n\n\t\t\"focus\": function( elem ) {\n\t\t\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\n\t\t},\n\n\t\t// Boolean properties\n\t\t\"enabled\": function( elem ) {\n\t\t\treturn elem.disabled === false;\n\t\t},\n\n\t\t\"disabled\": function( elem ) {\n\t\t\treturn elem.disabled === true;\n\t\t},\n\n\t\t\"checked\": function( elem ) {\n\t\t\t// In CSS3, :checked should return both checked and selected elements\n\t\t\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\n\t\t\tvar nodeName = elem.nodeName.toLowerCase();\n\t\t\treturn (nodeName === \"input\" && !!elem.checked) || (nodeName === \"option\" && !!elem.selected);\n\t\t},\n\n\t\t\"selected\": function( elem ) {\n\t\t\t// Accessing this property makes selected-by-default\n\t\t\t// options in Safari work properly\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\telem.parentNode.selectedIndex;\n\t\t\t}\n\n\t\t\treturn elem.selected === true;\n\t\t},\n\n\t\t// Contents\n\t\t\"empty\": function( elem ) {\n\t\t\t// http://www.w3.org/TR/selectors/#empty-pseudo\n\t\t\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\n\t\t\t//   but not by others (comment: 8; processing instruction: 7; etc.)\n\t\t\t// nodeType < 6 works because attributes (2) do not appear as children\n\t\t\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\n\t\t\t\tif ( elem.nodeType < 6 ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t},\n\n\t\t\"parent\": function( elem ) {\n\t\t\treturn !Expr.pseudos[\"empty\"]( elem );\n\t\t},\n\n\t\t// Element/input types\n\t\t\"header\": function( elem ) {\n\t\t\treturn rheader.test( elem.nodeName );\n\t\t},\n\n\t\t\"input\": function( elem ) {\n\t\t\treturn rinputs.test( elem.nodeName );\n\t\t},\n\n\t\t\"button\": function( elem ) {\n\t\t\tvar name = elem.nodeName.toLowerCase();\n\t\t\treturn name === \"input\" && elem.type === \"button\" || name === \"button\";\n\t\t},\n\n\t\t\"text\": function( elem ) {\n\t\t\tvar attr;\n\t\t\treturn elem.nodeName.toLowerCase() === \"input\" &&\n\t\t\t\telem.type === \"text\" &&\n\n\t\t\t\t// Support: IE<8\n\t\t\t\t// New HTML5 attribute values (e.g., \"search\") appear with elem.type === \"text\"\n\t\t\t\t( (attr = elem.getAttribute(\"type\")) == null || attr.toLowerCase() === \"text\" );\n\t\t},\n\n\t\t// Position-in-collection\n\t\t\"first\": createPositionalPseudo(function() {\n\t\t\treturn [ 0 ];\n\t\t}),\n\n\t\t\"last\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\treturn [ length - 1 ];\n\t\t}),\n\n\t\t\"eq\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\treturn [ argument < 0 ? argument + length : argument ];\n\t\t}),\n\n\t\t\"even\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"odd\": createPositionalPseudo(function( matchIndexes, length ) {\n\t\t\tvar i = 1;\n\t\t\tfor ( ; i < length; i += 2 ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"lt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; --i >= 0; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t}),\n\n\t\t\"gt\": createPositionalPseudo(function( matchIndexes, length, argument ) {\n\t\t\tvar i = argument < 0 ? argument + length : argument;\n\t\t\tfor ( ; ++i < length; ) {\n\t\t\t\tmatchIndexes.push( i );\n\t\t\t}\n\t\t\treturn matchIndexes;\n\t\t})\n\t}\n};\n\nExpr.pseudos[\"nth\"] = Expr.pseudos[\"eq\"];\n\n// Add button/input type pseudos\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\n\tExpr.pseudos[ i ] = createInputPseudo( i );\n}\nfor ( i in { submit: true, reset: true } ) {\n\tExpr.pseudos[ i ] = createButtonPseudo( i );\n}\n\n// Easy API for creating new setFilters\nfunction setFilters() {}\nsetFilters.prototype = Expr.filters = Expr.pseudos;\nExpr.setFilters = new setFilters();\n\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\n\tvar matched, match, tokens, type,\n\t\tsoFar, groups, preFilters,\n\t\tcached = tokenCache[ selector + \" \" ];\n\n\tif ( cached ) {\n\t\treturn parseOnly ? 0 : cached.slice( 0 );\n\t}\n\n\tsoFar = selector;\n\tgroups = [];\n\tpreFilters = Expr.preFilter;\n\n\twhile ( soFar ) {\n\n\t\t// Comma and first run\n\t\tif ( !matched || (match = rcomma.exec( soFar )) ) {\n\t\t\tif ( match ) {\n\t\t\t\t// Don't consume trailing commas as valid\n\t\t\t\tsoFar = soFar.slice( match[0].length ) || soFar;\n\t\t\t}\n\t\t\tgroups.push( (tokens = []) );\n\t\t}\n\n\t\tmatched = false;\n\n\t\t// Combinators\n\t\tif ( (match = rcombinators.exec( soFar )) ) {\n\t\t\tmatched = match.shift();\n\t\t\ttokens.push({\n\t\t\t\tvalue: matched,\n\t\t\t\t// Cast descendant combinators to space\n\t\t\t\ttype: match[0].replace( rtrim, \" \" )\n\t\t\t});\n\t\t\tsoFar = soFar.slice( matched.length );\n\t\t}\n\n\t\t// Filters\n\t\tfor ( type in Expr.filter ) {\n\t\t\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\n\t\t\t\t(match = preFilters[ type ]( match ))) ) {\n\t\t\t\tmatched = match.shift();\n\t\t\t\ttokens.push({\n\t\t\t\t\tvalue: matched,\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmatches: match\n\t\t\t\t});\n\t\t\t\tsoFar = soFar.slice( matched.length );\n\t\t\t}\n\t\t}\n\n\t\tif ( !matched ) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t// Return the length of the invalid excess\n\t// if we're just parsing\n\t// Otherwise, throw an error or return tokens\n\treturn parseOnly ?\n\t\tsoFar.length :\n\t\tsoFar ?\n\t\t\tSizzle.error( selector ) :\n\t\t\t// Cache the tokens\n\t\t\ttokenCache( selector, groups ).slice( 0 );\n};\n\nfunction toSelector( tokens ) {\n\tvar i = 0,\n\t\tlen = tokens.length,\n\t\tselector = \"\";\n\tfor ( ; i < len; i++ ) {\n\t\tselector += tokens[i].value;\n\t}\n\treturn selector;\n}\n\nfunction addCombinator( matcher, combinator, base ) {\n\tvar dir = combinator.dir,\n\t\tcheckNonElements = base && dir === \"parentNode\",\n\t\tdoneName = done++;\n\n\treturn combinator.first ?\n\t\t// Check against closest ancestor/preceding element\n\t\tfunction( elem, context, xml ) {\n\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\treturn matcher( elem, context, xml );\n\t\t\t\t}\n\t\t\t}\n\t\t} :\n\n\t\t// Check against all ancestor/preceding elements\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar oldCache, outerCache,\n\t\t\t\tnewCache = [ dirruns, doneName ];\n\n\t\t\t// We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\n\t\t\tif ( xml ) {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\twhile ( (elem = elem[ dir ]) ) {\n\t\t\t\t\tif ( elem.nodeType === 1 || checkNonElements ) {\n\t\t\t\t\t\touterCache = elem[ expando ] || (elem[ expando ] = {});\n\t\t\t\t\t\tif ( (oldCache = outerCache[ dir ]) &&\n\t\t\t\t\t\t\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\n\n\t\t\t\t\t\t\t// Assign to newCache so results back-propagate to previous elements\n\t\t\t\t\t\t\treturn (newCache[ 2 ] = oldCache[ 2 ]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Reuse newcache so results back-propagate to previous elements\n\t\t\t\t\t\t\touterCache[ dir ] = newCache;\n\n\t\t\t\t\t\t\t// A match means we're done; a fail means we have to keep checking\n\t\t\t\t\t\t\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n}\n\nfunction elementMatcher( matchers ) {\n\treturn matchers.length > 1 ?\n\t\tfunction( elem, context, xml ) {\n\t\t\tvar i = matchers.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( !matchers[i]( elem, context, xml ) ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn true;\n\t\t} :\n\t\tmatchers[0];\n}\n\nfunction multipleContexts( selector, contexts, results ) {\n\tvar i = 0,\n\t\tlen = contexts.length;\n\tfor ( ; i < len; i++ ) {\n\t\tSizzle( selector, contexts[i], results );\n\t}\n\treturn results;\n}\n\nfunction condense( unmatched, map, filter, context, xml ) {\n\tvar elem,\n\t\tnewUnmatched = [],\n\t\ti = 0,\n\t\tlen = unmatched.length,\n\t\tmapped = map != null;\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (elem = unmatched[i]) ) {\n\t\t\tif ( !filter || filter( elem, context, xml ) ) {\n\t\t\t\tnewUnmatched.push( elem );\n\t\t\t\tif ( mapped ) {\n\t\t\t\t\tmap.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn newUnmatched;\n}\n\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\n\tif ( postFilter && !postFilter[ expando ] ) {\n\t\tpostFilter = setMatcher( postFilter );\n\t}\n\tif ( postFinder && !postFinder[ expando ] ) {\n\t\tpostFinder = setMatcher( postFinder, postSelector );\n\t}\n\treturn markFunction(function( seed, results, context, xml ) {\n\t\tvar temp, i, elem,\n\t\t\tpreMap = [],\n\t\t\tpostMap = [],\n\t\t\tpreexisting = results.length,\n\n\t\t\t// Get initial elements from seed or context\n\t\t\telems = seed || multipleContexts( selector || \"*\", context.nodeType ? [ context ] : context, [] ),\n\n\t\t\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\n\t\t\tmatcherIn = preFilter && ( seed || !selector ) ?\n\t\t\t\tcondense( elems, preMap, preFilter, context, xml ) :\n\t\t\t\telems,\n\n\t\t\tmatcherOut = matcher ?\n\t\t\t\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\n\t\t\t\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\n\n\t\t\t\t\t// ...intermediate processing is necessary\n\t\t\t\t\t[] :\n\n\t\t\t\t\t// ...otherwise use results directly\n\t\t\t\t\tresults :\n\t\t\t\tmatcherIn;\n\n\t\t// Find primary matches\n\t\tif ( matcher ) {\n\t\t\tmatcher( matcherIn, matcherOut, context, xml );\n\t\t}\n\n\t\t// Apply postFilter\n\t\tif ( postFilter ) {\n\t\t\ttemp = condense( matcherOut, postMap );\n\t\t\tpostFilter( temp, [], context, xml );\n\n\t\t\t// Un-match failing elements by moving them back to matcherIn\n\t\t\ti = temp.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( (elem = temp[i]) ) {\n\t\t\t\t\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( seed ) {\n\t\t\tif ( postFinder || preFilter ) {\n\t\t\t\tif ( postFinder ) {\n\t\t\t\t\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\n\t\t\t\t\ttemp = [];\n\t\t\t\t\ti = matcherOut.length;\n\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\tif ( (elem = matcherOut[i]) ) {\n\t\t\t\t\t\t\t// Restore matcherIn since elem is not yet a final match\n\t\t\t\t\t\t\ttemp.push( (matcherIn[i] = elem) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpostFinder( null, (matcherOut = []), temp, xml );\n\t\t\t\t}\n\n\t\t\t\t// Move matched elements from seed to results to keep them synchronized\n\t\t\t\ti = matcherOut.length;\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\tif ( (elem = matcherOut[i]) &&\n\t\t\t\t\t\t(temp = postFinder ? indexOf.call( seed, elem ) : preMap[i]) > -1 ) {\n\n\t\t\t\t\t\tseed[temp] = !(results[temp] = elem);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t// Add elements to results, through postFinder if defined\n\t\t} else {\n\t\t\tmatcherOut = condense(\n\t\t\t\tmatcherOut === results ?\n\t\t\t\t\tmatcherOut.splice( preexisting, matcherOut.length ) :\n\t\t\t\t\tmatcherOut\n\t\t\t);\n\t\t\tif ( postFinder ) {\n\t\t\t\tpostFinder( null, results, matcherOut, xml );\n\t\t\t} else {\n\t\t\t\tpush.apply( results, matcherOut );\n\t\t\t}\n\t\t}\n\t});\n}\n\nfunction matcherFromTokens( tokens ) {\n\tvar checkContext, matcher, j,\n\t\tlen = tokens.length,\n\t\tleadingRelative = Expr.relative[ tokens[0].type ],\n\t\timplicitRelative = leadingRelative || Expr.relative[\" \"],\n\t\ti = leadingRelative ? 1 : 0,\n\n\t\t// The foundational matcher ensures that elements are reachable from top-level context(s)\n\t\tmatchContext = addCombinator( function( elem ) {\n\t\t\treturn elem === checkContext;\n\t\t}, implicitRelative, true ),\n\t\tmatchAnyContext = addCombinator( function( elem ) {\n\t\t\treturn indexOf.call( checkContext, elem ) > -1;\n\t\t}, implicitRelative, true ),\n\t\tmatchers = [ function( elem, context, xml ) {\n\t\t\treturn ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\n\t\t\t\t(checkContext = context).nodeType ?\n\t\t\t\t\tmatchContext( elem, context, xml ) :\n\t\t\t\t\tmatchAnyContext( elem, context, xml ) );\n\t\t} ];\n\n\tfor ( ; i < len; i++ ) {\n\t\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\n\t\t\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\n\t\t} else {\n\t\t\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\n\n\t\t\t// Return special upon seeing a positional matcher\n\t\t\tif ( matcher[ expando ] ) {\n\t\t\t\t// Find the next relative operator (if any) for proper handling\n\t\t\t\tj = ++i;\n\t\t\t\tfor ( ; j < len; j++ ) {\n\t\t\t\t\tif ( Expr.relative[ tokens[j].type ] ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn setMatcher(\n\t\t\t\t\ti > 1 && elementMatcher( matchers ),\n\t\t\t\t\ti > 1 && toSelector(\n\t\t\t\t\t\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\n\t\t\t\t\t\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \" \" ? \"*\" : \"\" })\n\t\t\t\t\t).replace( rtrim, \"$1\" ),\n\t\t\t\t\tmatcher,\n\t\t\t\t\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\n\t\t\t\t\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\n\t\t\t\t\tj < len && toSelector( tokens )\n\t\t\t\t);\n\t\t\t}\n\t\t\tmatchers.push( matcher );\n\t\t}\n\t}\n\n\treturn elementMatcher( matchers );\n}\n\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\n\tvar bySet = setMatchers.length > 0,\n\t\tbyElement = elementMatchers.length > 0,\n\t\tsuperMatcher = function( seed, context, xml, results, outermost ) {\n\t\t\tvar elem, j, matcher,\n\t\t\t\tmatchedCount = 0,\n\t\t\t\ti = \"0\",\n\t\t\t\tunmatched = seed && [],\n\t\t\t\tsetMatched = [],\n\t\t\t\tcontextBackup = outermostContext,\n\t\t\t\t// We must always have either seed elements or outermost context\n\t\t\t\telems = seed || byElement && Expr.find[\"TAG\"]( \"*\", outermost ),\n\t\t\t\t// Use integer dirruns iff this is the outermost matcher\n\t\t\t\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\n\t\t\t\tlen = elems.length;\n\n\t\t\tif ( outermost ) {\n\t\t\t\toutermostContext = context !== document && context;\n\t\t\t}\n\n\t\t\t// Add elements passing elementMatchers directly to results\n\t\t\t// Keep `i` a string if there are no elements so `matchedCount` will be \"00\" below\n\t\t\t// Support: IE<9, Safari\n\t\t\t// Tolerate NodeList properties (IE: \"length\"; Safari: <number>) matching elements by id\n\t\t\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\n\t\t\t\tif ( byElement && elem ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (matcher = elementMatchers[j++]) ) {\n\t\t\t\t\t\tif ( matcher( elem, context, xml ) ) {\n\t\t\t\t\t\t\tresults.push( elem );\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( outermost ) {\n\t\t\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Track unmatched elements for set filters\n\t\t\t\tif ( bySet ) {\n\t\t\t\t\t// They will have gone through all possible matchers\n\t\t\t\t\tif ( (elem = !matcher && elem) ) {\n\t\t\t\t\t\tmatchedCount--;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Lengthen the array for every element, matched or not\n\t\t\t\t\tif ( seed ) {\n\t\t\t\t\t\tunmatched.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Apply set filters to unmatched elements\n\t\t\tmatchedCount += i;\n\t\t\tif ( bySet && i !== matchedCount ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (matcher = setMatchers[j++]) ) {\n\t\t\t\t\tmatcher( unmatched, setMatched, context, xml );\n\t\t\t\t}\n\n\t\t\t\tif ( seed ) {\n\t\t\t\t\t// Reintegrate element matches to eliminate the need for sorting\n\t\t\t\t\tif ( matchedCount > 0 ) {\n\t\t\t\t\t\twhile ( i-- ) {\n\t\t\t\t\t\t\tif ( !(unmatched[i] || setMatched[i]) ) {\n\t\t\t\t\t\t\t\tsetMatched[i] = pop.call( results );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Discard index placeholder values to get only actual matches\n\t\t\t\t\tsetMatched = condense( setMatched );\n\t\t\t\t}\n\n\t\t\t\t// Add matches to results\n\t\t\t\tpush.apply( results, setMatched );\n\n\t\t\t\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\n\t\t\t\tif ( outermost && !seed && setMatched.length > 0 &&\n\t\t\t\t\t( matchedCount + setMatchers.length ) > 1 ) {\n\n\t\t\t\t\tSizzle.uniqueSort( results );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Override manipulation of globals by nested matchers\n\t\t\tif ( outermost ) {\n\t\t\t\tdirruns = dirrunsUnique;\n\t\t\t\toutermostContext = contextBackup;\n\t\t\t}\n\n\t\t\treturn unmatched;\n\t\t};\n\n\treturn bySet ?\n\t\tmarkFunction( superMatcher ) :\n\t\tsuperMatcher;\n}\n\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\n\tvar i,\n\t\tsetMatchers = [],\n\t\telementMatchers = [],\n\t\tcached = compilerCache[ selector + \" \" ];\n\n\tif ( !cached ) {\n\t\t// Generate a function of recursive functions that can be used to check each element\n\t\tif ( !match ) {\n\t\t\tmatch = tokenize( selector );\n\t\t}\n\t\ti = match.length;\n\t\twhile ( i-- ) {\n\t\t\tcached = matcherFromTokens( match[i] );\n\t\t\tif ( cached[ expando ] ) {\n\t\t\t\tsetMatchers.push( cached );\n\t\t\t} else {\n\t\t\t\telementMatchers.push( cached );\n\t\t\t}\n\t\t}\n\n\t\t// Cache the compiled function\n\t\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\n\n\t\t// Save selector and tokenization\n\t\tcached.selector = selector;\n\t}\n\treturn cached;\n};\n\n/**\n * A low-level selection function that works with Sizzle's compiled\n *  selector functions\n * @param {String|Function} selector A selector or a pre-compiled\n *  selector function built with Sizzle.compile\n * @param {Element} context\n * @param {Array} [results]\n * @param {Array} [seed] A set of elements to match against\n */\nselect = Sizzle.select = function( selector, context, results, seed ) {\n\tvar i, tokens, token, type, find,\n\t\tcompiled = typeof selector === \"function\" && selector,\n\t\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\n\n\tresults = results || [];\n\n\t// Try to minimize operations if there is no seed and only one group\n\tif ( match.length === 1 ) {\n\n\t\t// Take a shortcut and set the context if the root selector is an ID\n\t\ttokens = match[0] = match[0].slice( 0 );\n\t\tif ( tokens.length > 2 && (token = tokens[0]).type === \"ID\" &&\n\t\t\t\tsupport.getById && context.nodeType === 9 && documentIsHTML &&\n\t\t\t\tExpr.relative[ tokens[1].type ] ) {\n\n\t\t\tcontext = ( Expr.find[\"ID\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\n\t\t\tif ( !context ) {\n\t\t\t\treturn results;\n\n\t\t\t// Precompiled matchers will still verify ancestry, so step up a level\n\t\t\t} else if ( compiled ) {\n\t\t\t\tcontext = context.parentNode;\n\t\t\t}\n\n\t\t\tselector = selector.slice( tokens.shift().value.length );\n\t\t}\n\n\t\t// Fetch a seed set for right-to-left matching\n\t\ti = matchExpr[\"needsContext\"].test( selector ) ? 0 : tokens.length;\n\t\twhile ( i-- ) {\n\t\t\ttoken = tokens[i];\n\n\t\t\t// Abort if we hit a combinator\n\t\t\tif ( Expr.relative[ (type = token.type) ] ) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( (find = Expr.find[ type ]) ) {\n\t\t\t\t// Search, expanding context for leading sibling combinators\n\t\t\t\tif ( (seed = find(\n\t\t\t\t\ttoken.matches[0].replace( runescape, funescape ),\n\t\t\t\t\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\n\t\t\t\t)) ) {\n\n\t\t\t\t\t// If seed is empty or no tokens remain, we can return early\n\t\t\t\t\ttokens.splice( i, 1 );\n\t\t\t\t\tselector = seed.length && toSelector( tokens );\n\t\t\t\t\tif ( !selector ) {\n\t\t\t\t\t\tpush.apply( results, seed );\n\t\t\t\t\t\treturn results;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Compile and execute a filtering function if one is not provided\n\t// Provide `match` to avoid retokenization if we modified the selector above\n\t( compiled || compile( selector, match ) )(\n\t\tseed,\n\t\tcontext,\n\t\t!documentIsHTML,\n\t\tresults,\n\t\trsibling.test( selector ) && testContext( context.parentNode ) || context\n\t);\n\treturn results;\n};\n\n// One-time assignments\n\n// Sort stability\nsupport.sortStable = expando.split(\"\").sort( sortOrder ).join(\"\") === expando;\n\n// Support: Chrome<14\n// Always assume duplicates if they aren't passed to the comparison function\nsupport.detectDuplicates = !!hasDuplicate;\n\n// Initialize against the default document\nsetDocument();\n\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\n// Detached nodes confoundingly follow *each other*\nsupport.sortDetached = assert(function( div1 ) {\n\t// Should return 1, but returns 4 (following)\n\treturn div1.compareDocumentPosition( document.createElement(\"div\") ) & 1;\n});\n\n// Support: IE<8\n// Prevent attribute/property \"interpolation\"\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\nif ( !assert(function( div ) {\n\tdiv.innerHTML = \"<a href='#'></a>\";\n\treturn div.firstChild.getAttribute(\"href\") === \"#\" ;\n}) ) {\n\taddHandle( \"type|href|height|width\", function( elem, name, isXML ) {\n\t\tif ( !isXML ) {\n\t\t\treturn elem.getAttribute( name, name.toLowerCase() === \"type\" ? 1 : 2 );\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use defaultValue in place of getAttribute(\"value\")\nif ( !support.attributes || !assert(function( div ) {\n\tdiv.innerHTML = \"<input/>\";\n\tdiv.firstChild.setAttribute( \"value\", \"\" );\n\treturn div.firstChild.getAttribute( \"value\" ) === \"\";\n}) ) {\n\taddHandle( \"value\", function( elem, name, isXML ) {\n\t\tif ( !isXML && elem.nodeName.toLowerCase() === \"input\" ) {\n\t\t\treturn elem.defaultValue;\n\t\t}\n\t});\n}\n\n// Support: IE<9\n// Use getAttributeNode to fetch booleans when getAttribute lies\nif ( !assert(function( div ) {\n\treturn div.getAttribute(\"disabled\") == null;\n}) ) {\n\taddHandle( booleans, function( elem, name, isXML ) {\n\t\tvar val;\n\t\tif ( !isXML ) {\n\t\t\treturn elem[ name ] === true ? name.toLowerCase() :\n\t\t\t\t\t(val = elem.getAttributeNode( name )) && val.specified ?\n\t\t\t\t\tval.value :\n\t\t\t\tnull;\n\t\t}\n\t});\n}\n\nreturn Sizzle;\n\n})( window );\n\n\n\njQuery.find = Sizzle;\njQuery.expr = Sizzle.selectors;\njQuery.expr[\":\"] = jQuery.expr.pseudos;\njQuery.unique = Sizzle.uniqueSort;\njQuery.text = Sizzle.getText;\njQuery.isXMLDoc = Sizzle.isXML;\njQuery.contains = Sizzle.contains;\n\n\n\nvar rneedsContext = jQuery.expr.match.needsContext;\n\nvar rsingleTag = (/^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/);\n\n\n\nvar risSimple = /^.[^:#\\[\\.,]*$/;\n\n// Implement the identical functionality for filter and not\nfunction winnow( elements, qualifier, not ) {\n\tif ( jQuery.isFunction( qualifier ) ) {\n\t\treturn jQuery.grep( elements, function( elem, i ) {\n\t\t\t/* jshint -W018 */\n\t\t\treturn !!qualifier.call( elem, i, elem ) !== not;\n\t\t});\n\n\t}\n\n\tif ( qualifier.nodeType ) {\n\t\treturn jQuery.grep( elements, function( elem ) {\n\t\t\treturn ( elem === qualifier ) !== not;\n\t\t});\n\n\t}\n\n\tif ( typeof qualifier === \"string\" ) {\n\t\tif ( risSimple.test( qualifier ) ) {\n\t\t\treturn jQuery.filter( qualifier, elements, not );\n\t\t}\n\n\t\tqualifier = jQuery.filter( qualifier, elements );\n\t}\n\n\treturn jQuery.grep( elements, function( elem ) {\n\t\treturn ( indexOf.call( qualifier, elem ) >= 0 ) !== not;\n\t});\n}\n\njQuery.filter = function( expr, elems, not ) {\n\tvar elem = elems[ 0 ];\n\n\tif ( not ) {\n\t\texpr = \":not(\" + expr + \")\";\n\t}\n\n\treturn elems.length === 1 && elem.nodeType === 1 ?\n\t\tjQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [] :\n\t\tjQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\n\t\t\treturn elem.nodeType === 1;\n\t\t}));\n};\n\njQuery.fn.extend({\n\tfind: function( selector ) {\n\t\tvar i,\n\t\t\tlen = this.length,\n\t\t\tret = [],\n\t\t\tself = this;\n\n\t\tif ( typeof selector !== \"string\" ) {\n\t\t\treturn this.pushStack( jQuery( selector ).filter(function() {\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tif ( jQuery.contains( self[ i ], this ) ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}) );\n\t\t}\n\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tjQuery.find( selector, self[ i ], ret );\n\t\t}\n\n\t\t// Needed because $( selector, context ) becomes $( context ).find( selector )\n\t\tret = this.pushStack( len > 1 ? jQuery.unique( ret ) : ret );\n\t\tret.selector = this.selector ? this.selector + \" \" + selector : selector;\n\t\treturn ret;\n\t},\n\tfilter: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], false) );\n\t},\n\tnot: function( selector ) {\n\t\treturn this.pushStack( winnow(this, selector || [], true) );\n\t},\n\tis: function( selector ) {\n\t\treturn !!winnow(\n\t\t\tthis,\n\n\t\t\t// If this is a positional/relative selector, check membership in the returned set\n\t\t\t// so $(\"p:first\").is(\"p:last\") won't return true for a doc with two \"p\".\n\t\t\ttypeof selector === \"string\" && rneedsContext.test( selector ) ?\n\t\t\t\tjQuery( selector ) :\n\t\t\t\tselector || [],\n\t\t\tfalse\n\t\t).length;\n\t}\n});\n\n\n// Initialize a jQuery object\n\n\n// A central reference to the root jQuery(document)\nvar rootjQuery,\n\n\t// A simple way to check for HTML strings\n\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\n\t// Strict HTML recognition (#11290: must start with <)\n\trquickExpr = /^(?:\\s*(<[\\w\\W]+>)[^>]*|#([\\w-]*))$/,\n\n\tinit = jQuery.fn.init = function( selector, context ) {\n\t\tvar match, elem;\n\n\t\t// HANDLE: $(\"\"), $(null), $(undefined), $(false)\n\t\tif ( !selector ) {\n\t\t\treturn this;\n\t\t}\n\n\t\t// Handle HTML strings\n\t\tif ( typeof selector === \"string\" ) {\n\t\t\tif ( selector[0] === \"<\" && selector[ selector.length - 1 ] === \">\" && selector.length >= 3 ) {\n\t\t\t\t// Assume that strings that start and end with <> are HTML and skip the regex check\n\t\t\t\tmatch = [ null, selector, null ];\n\n\t\t\t} else {\n\t\t\t\tmatch = rquickExpr.exec( selector );\n\t\t\t}\n\n\t\t\t// Match html or make sure no context is specified for #id\n\t\t\tif ( match && (match[1] || !context) ) {\n\n\t\t\t\t// HANDLE: $(html) -> $(array)\n\t\t\t\tif ( match[1] ) {\n\t\t\t\t\tcontext = context instanceof jQuery ? context[0] : context;\n\n\t\t\t\t\t// scripts is true for back-compat\n\t\t\t\t\t// Intentionally let the error be thrown if parseHTML is not present\n\t\t\t\t\tjQuery.merge( this, jQuery.parseHTML(\n\t\t\t\t\t\tmatch[1],\n\t\t\t\t\t\tcontext && context.nodeType ? context.ownerDocument || context : document,\n\t\t\t\t\t\ttrue\n\t\t\t\t\t) );\n\n\t\t\t\t\t// HANDLE: $(html, props)\n\t\t\t\t\tif ( rsingleTag.test( match[1] ) && jQuery.isPlainObject( context ) ) {\n\t\t\t\t\t\tfor ( match in context ) {\n\t\t\t\t\t\t\t// Properties of context are called as methods if possible\n\t\t\t\t\t\t\tif ( jQuery.isFunction( this[ match ] ) ) {\n\t\t\t\t\t\t\t\tthis[ match ]( context[ match ] );\n\n\t\t\t\t\t\t\t// ...and otherwise set as attributes\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.attr( match, context[ match ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t// HANDLE: $(#id)\n\t\t\t\t} else {\n\t\t\t\t\telem = document.getElementById( match[2] );\n\n\t\t\t\t\t// Check parentNode to catch when Blackberry 4.6 returns\n\t\t\t\t\t// nodes that are no longer in the document #6963\n\t\t\t\t\tif ( elem && elem.parentNode ) {\n\t\t\t\t\t\t// Inject the element directly into the jQuery object\n\t\t\t\t\t\tthis.length = 1;\n\t\t\t\t\t\tthis[0] = elem;\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.context = document;\n\t\t\t\t\tthis.selector = selector;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\n\t\t\t// HANDLE: $(expr, $(...))\n\t\t\t} else if ( !context || context.jquery ) {\n\t\t\t\treturn ( context || rootjQuery ).find( selector );\n\n\t\t\t// HANDLE: $(expr, context)\n\t\t\t// (which is just equivalent to: $(context).find(expr)\n\t\t\t} else {\n\t\t\t\treturn this.constructor( context ).find( selector );\n\t\t\t}\n\n\t\t// HANDLE: $(DOMElement)\n\t\t} else if ( selector.nodeType ) {\n\t\t\tthis.context = this[0] = selector;\n\t\t\tthis.length = 1;\n\t\t\treturn this;\n\n\t\t// HANDLE: $(function)\n\t\t// Shortcut for document ready\n\t\t} else if ( jQuery.isFunction( selector ) ) {\n\t\t\treturn typeof rootjQuery.ready !== \"undefined\" ?\n\t\t\t\trootjQuery.ready( selector ) :\n\t\t\t\t// Execute immediately if ready is not present\n\t\t\t\tselector( jQuery );\n\t\t}\n\n\t\tif ( selector.selector !== undefined ) {\n\t\t\tthis.selector = selector.selector;\n\t\t\tthis.context = selector.context;\n\t\t}\n\n\t\treturn jQuery.makeArray( selector, this );\n\t};\n\n// Give the init function the jQuery prototype for later instantiation\ninit.prototype = jQuery.fn;\n\n// Initialize central reference\nrootjQuery = jQuery( document );\n\n\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\n\t// methods guaranteed to produce a unique set when starting from a unique set\n\tguaranteedUnique = {\n\t\tchildren: true,\n\t\tcontents: true,\n\t\tnext: true,\n\t\tprev: true\n\t};\n\njQuery.extend({\n\tdir: function( elem, dir, until ) {\n\t\tvar matched = [],\n\t\t\ttruncate = until !== undefined;\n\n\t\twhile ( (elem = elem[ dir ]) && elem.nodeType !== 9 ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\tif ( truncate && jQuery( elem ).is( until ) ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tmatched.push( elem );\n\t\t\t}\n\t\t}\n\t\treturn matched;\n\t},\n\n\tsibling: function( n, elem ) {\n\t\tvar matched = [];\n\n\t\tfor ( ; n; n = n.nextSibling ) {\n\t\t\tif ( n.nodeType === 1 && n !== elem ) {\n\t\t\t\tmatched.push( n );\n\t\t\t}\n\t\t}\n\n\t\treturn matched;\n\t}\n});\n\njQuery.fn.extend({\n\thas: function( target ) {\n\t\tvar targets = jQuery( target, this ),\n\t\t\tl = targets.length;\n\n\t\treturn this.filter(function() {\n\t\t\tvar i = 0;\n\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\tif ( jQuery.contains( this, targets[i] ) ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t},\n\n\tclosest: function( selectors, context ) {\n\t\tvar cur,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tmatched = [],\n\t\t\tpos = rneedsContext.test( selectors ) || typeof selectors !== \"string\" ?\n\t\t\t\tjQuery( selectors, context || this.context ) :\n\t\t\t\t0;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tfor ( cur = this[i]; cur && cur !== context; cur = cur.parentNode ) {\n\t\t\t\t// Always skip document fragments\n\t\t\t\tif ( cur.nodeType < 11 && (pos ?\n\t\t\t\t\tpos.index(cur) > -1 :\n\n\t\t\t\t\t// Don't pass non-elements to Sizzle\n\t\t\t\t\tcur.nodeType === 1 &&\n\t\t\t\t\t\tjQuery.find.matchesSelector(cur, selectors)) ) {\n\n\t\t\t\t\tmatched.push( cur );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched.length > 1 ? jQuery.unique( matched ) : matched );\n\t},\n\n\t// Determine the position of an element within\n\t// the matched set of elements\n\tindex: function( elem ) {\n\n\t\t// No argument, return index in parent\n\t\tif ( !elem ) {\n\t\t\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\n\t\t}\n\n\t\t// index in selector\n\t\tif ( typeof elem === \"string\" ) {\n\t\t\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\n\t\t}\n\n\t\t// Locate the position of the desired element\n\t\treturn indexOf.call( this,\n\n\t\t\t// If it receives a jQuery object, the first element is used\n\t\t\telem.jquery ? elem[ 0 ] : elem\n\t\t);\n\t},\n\n\tadd: function( selector, context ) {\n\t\treturn this.pushStack(\n\t\t\tjQuery.unique(\n\t\t\t\tjQuery.merge( this.get(), jQuery( selector, context ) )\n\t\t\t)\n\t\t);\n\t},\n\n\taddBack: function( selector ) {\n\t\treturn this.add( selector == null ?\n\t\t\tthis.prevObject : this.prevObject.filter(selector)\n\t\t);\n\t}\n});\n\nfunction sibling( cur, dir ) {\n\twhile ( (cur = cur[dir]) && cur.nodeType !== 1 ) {}\n\treturn cur;\n}\n\njQuery.each({\n\tparent: function( elem ) {\n\t\tvar parent = elem.parentNode;\n\t\treturn parent && parent.nodeType !== 11 ? parent : null;\n\t},\n\tparents: function( elem ) {\n\t\treturn jQuery.dir( elem, \"parentNode\" );\n\t},\n\tparentsUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"parentNode\", until );\n\t},\n\tnext: function( elem ) {\n\t\treturn sibling( elem, \"nextSibling\" );\n\t},\n\tprev: function( elem ) {\n\t\treturn sibling( elem, \"previousSibling\" );\n\t},\n\tnextAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\" );\n\t},\n\tprevAll: function( elem ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\" );\n\t},\n\tnextUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"nextSibling\", until );\n\t},\n\tprevUntil: function( elem, i, until ) {\n\t\treturn jQuery.dir( elem, \"previousSibling\", until );\n\t},\n\tsiblings: function( elem ) {\n\t\treturn jQuery.sibling( ( elem.parentNode || {} ).firstChild, elem );\n\t},\n\tchildren: function( elem ) {\n\t\treturn jQuery.sibling( elem.firstChild );\n\t},\n\tcontents: function( elem ) {\n\t\treturn elem.contentDocument || jQuery.merge( [], elem.childNodes );\n\t}\n}, function( name, fn ) {\n\tjQuery.fn[ name ] = function( until, selector ) {\n\t\tvar matched = jQuery.map( this, fn, until );\n\n\t\tif ( name.slice( -5 ) !== \"Until\" ) {\n\t\t\tselector = until;\n\t\t}\n\n\t\tif ( selector && typeof selector === \"string\" ) {\n\t\t\tmatched = jQuery.filter( selector, matched );\n\t\t}\n\n\t\tif ( this.length > 1 ) {\n\t\t\t// Remove duplicates\n\t\t\tif ( !guaranteedUnique[ name ] ) {\n\t\t\t\tjQuery.unique( matched );\n\t\t\t}\n\n\t\t\t// Reverse order for parents* and prev-derivatives\n\t\t\tif ( rparentsprev.test( name ) ) {\n\t\t\t\tmatched.reverse();\n\t\t\t}\n\t\t}\n\n\t\treturn this.pushStack( matched );\n\t};\n});\nvar rnotwhite = (/\\S+/g);\n\n\n\n// String to Object options format cache\nvar optionsCache = {};\n\n// Convert String-formatted options into Object-formatted ones and store in cache\nfunction createOptions( options ) {\n\tvar object = optionsCache[ options ] = {};\n\tjQuery.each( options.match( rnotwhite ) || [], function( _, flag ) {\n\t\tobject[ flag ] = true;\n\t});\n\treturn object;\n}\n\n/*\n * Create a callback list using the following parameters:\n *\n *\toptions: an optional list of space-separated options that will change how\n *\t\t\tthe callback list behaves or a more traditional option object\n *\n * By default a callback list will act like an event callback list and can be\n * \"fired\" multiple times.\n *\n * Possible options:\n *\n *\tonce:\t\t\twill ensure the callback list can only be fired once (like a Deferred)\n *\n *\tmemory:\t\t\twill keep track of previous values and will call any callback added\n *\t\t\t\t\tafter the list has been fired right away with the latest \"memorized\"\n *\t\t\t\t\tvalues (like a Deferred)\n *\n *\tunique:\t\t\twill ensure a callback can only be added once (no duplicate in the list)\n *\n *\tstopOnFalse:\tinterrupt callings when a callback returns false\n *\n */\njQuery.Callbacks = function( options ) {\n\n\t// Convert options from String-formatted to Object-formatted if needed\n\t// (we check in cache first)\n\toptions = typeof options === \"string\" ?\n\t\t( optionsCache[ options ] || createOptions( options ) ) :\n\t\tjQuery.extend( {}, options );\n\n\tvar // Last fire value (for non-forgettable lists)\n\t\tmemory,\n\t\t// Flag to know if list was already fired\n\t\tfired,\n\t\t// Flag to know if list is currently firing\n\t\tfiring,\n\t\t// First callback to fire (used internally by add and fireWith)\n\t\tfiringStart,\n\t\t// End of the loop when firing\n\t\tfiringLength,\n\t\t// Index of currently firing callback (modified by remove if needed)\n\t\tfiringIndex,\n\t\t// Actual callback list\n\t\tlist = [],\n\t\t// Stack of fire calls for repeatable lists\n\t\tstack = !options.once && [],\n\t\t// Fire callbacks\n\t\tfire = function( data ) {\n\t\t\tmemory = options.memory && data;\n\t\t\tfired = true;\n\t\t\tfiringIndex = firingStart || 0;\n\t\t\tfiringStart = 0;\n\t\t\tfiringLength = list.length;\n\t\t\tfiring = true;\n\t\t\tfor ( ; list && firingIndex < firingLength; firingIndex++ ) {\n\t\t\t\tif ( list[ firingIndex ].apply( data[ 0 ], data[ 1 ] ) === false && options.stopOnFalse ) {\n\t\t\t\t\tmemory = false; // To prevent further calls using add\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tfiring = false;\n\t\t\tif ( list ) {\n\t\t\t\tif ( stack ) {\n\t\t\t\t\tif ( stack.length ) {\n\t\t\t\t\t\tfire( stack.shift() );\n\t\t\t\t\t}\n\t\t\t\t} else if ( memory ) {\n\t\t\t\t\tlist = [];\n\t\t\t\t} else {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t// Actual Callbacks object\n\t\tself = {\n\t\t\t// Add a callback or a collection of callbacks to the list\n\t\t\tadd: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\t// First, we save the current length\n\t\t\t\t\tvar start = list.length;\n\t\t\t\t\t(function add( args ) {\n\t\t\t\t\t\tjQuery.each( args, function( _, arg ) {\n\t\t\t\t\t\t\tvar type = jQuery.type( arg );\n\t\t\t\t\t\t\tif ( type === \"function\" ) {\n\t\t\t\t\t\t\t\tif ( !options.unique || !self.has( arg ) ) {\n\t\t\t\t\t\t\t\t\tlist.push( arg );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if ( arg && arg.length && type !== \"string\" ) {\n\t\t\t\t\t\t\t\t// Inspect recursively\n\t\t\t\t\t\t\t\tadd( arg );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t})( arguments );\n\t\t\t\t\t// Do we need to add the callbacks to the\n\t\t\t\t\t// current firing batch?\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tfiringLength = list.length;\n\t\t\t\t\t// With memory, if we're not firing then\n\t\t\t\t\t// we should call right away\n\t\t\t\t\t} else if ( memory ) {\n\t\t\t\t\t\tfiringStart = start;\n\t\t\t\t\t\tfire( memory );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Remove a callback from the list\n\t\t\tremove: function() {\n\t\t\t\tif ( list ) {\n\t\t\t\t\tjQuery.each( arguments, function( _, arg ) {\n\t\t\t\t\t\tvar index;\n\t\t\t\t\t\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\n\t\t\t\t\t\t\tlist.splice( index, 1 );\n\t\t\t\t\t\t\t// Handle firing indexes\n\t\t\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\t\t\tif ( index <= firingLength ) {\n\t\t\t\t\t\t\t\t\tfiringLength--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif ( index <= firingIndex ) {\n\t\t\t\t\t\t\t\t\tfiringIndex--;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Check if a given callback is in the list.\n\t\t\t// If no argument is given, return whether or not list has callbacks attached.\n\t\t\thas: function( fn ) {\n\t\t\t\treturn fn ? jQuery.inArray( fn, list ) > -1 : !!( list && list.length );\n\t\t\t},\n\t\t\t// Remove all callbacks from the list\n\t\t\tempty: function() {\n\t\t\t\tlist = [];\n\t\t\t\tfiringLength = 0;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Have the list do nothing anymore\n\t\t\tdisable: function() {\n\t\t\t\tlist = stack = memory = undefined;\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it disabled?\n\t\t\tdisabled: function() {\n\t\t\t\treturn !list;\n\t\t\t},\n\t\t\t// Lock the list in its current state\n\t\t\tlock: function() {\n\t\t\t\tstack = undefined;\n\t\t\t\tif ( !memory ) {\n\t\t\t\t\tself.disable();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Is it locked?\n\t\t\tlocked: function() {\n\t\t\t\treturn !stack;\n\t\t\t},\n\t\t\t// Call all callbacks with the given context and arguments\n\t\t\tfireWith: function( context, args ) {\n\t\t\t\tif ( list && ( !fired || stack ) ) {\n\t\t\t\t\targs = args || [];\n\t\t\t\t\targs = [ context, args.slice ? args.slice() : args ];\n\t\t\t\t\tif ( firing ) {\n\t\t\t\t\t\tstack.push( args );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfire( args );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// Call all the callbacks with the given arguments\n\t\t\tfire: function() {\n\t\t\t\tself.fireWith( this, arguments );\n\t\t\t\treturn this;\n\t\t\t},\n\t\t\t// To know if the callbacks have already been called at least once\n\t\t\tfired: function() {\n\t\t\t\treturn !!fired;\n\t\t\t}\n\t\t};\n\n\treturn self;\n};\n\n\njQuery.extend({\n\n\tDeferred: function( func ) {\n\t\tvar tuples = [\n\t\t\t\t// action, add listener, listener list, final state\n\t\t\t\t[ \"resolve\", \"done\", jQuery.Callbacks(\"once memory\"), \"resolved\" ],\n\t\t\t\t[ \"reject\", \"fail\", jQuery.Callbacks(\"once memory\"), \"rejected\" ],\n\t\t\t\t[ \"notify\", \"progress\", jQuery.Callbacks(\"memory\") ]\n\t\t\t],\n\t\t\tstate = \"pending\",\n\t\t\tpromise = {\n\t\t\t\tstate: function() {\n\t\t\t\t\treturn state;\n\t\t\t\t},\n\t\t\t\talways: function() {\n\t\t\t\t\tdeferred.done( arguments ).fail( arguments );\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\t\t\t\tthen: function( /* fnDone, fnFail, fnProgress */ ) {\n\t\t\t\t\tvar fns = arguments;\n\t\t\t\t\treturn jQuery.Deferred(function( newDefer ) {\n\t\t\t\t\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\t\t\t\t\tvar fn = jQuery.isFunction( fns[ i ] ) && fns[ i ];\n\t\t\t\t\t\t\t// deferred[ done | fail | progress ] for forwarding actions to newDefer\n\t\t\t\t\t\t\tdeferred[ tuple[1] ](function() {\n\t\t\t\t\t\t\t\tvar returned = fn && fn.apply( this, arguments );\n\t\t\t\t\t\t\t\tif ( returned && jQuery.isFunction( returned.promise ) ) {\n\t\t\t\t\t\t\t\t\treturned.promise()\n\t\t\t\t\t\t\t\t\t\t.done( newDefer.resolve )\n\t\t\t\t\t\t\t\t\t\t.fail( newDefer.reject )\n\t\t\t\t\t\t\t\t\t\t.progress( newDefer.notify );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tnewDefer[ tuple[ 0 ] + \"With\" ]( this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\t\t\t\t\t\tfns = null;\n\t\t\t\t\t}).promise();\n\t\t\t\t},\n\t\t\t\t// Get a promise for this deferred\n\t\t\t\t// If obj is provided, the promise aspect is added to the object\n\t\t\t\tpromise: function( obj ) {\n\t\t\t\t\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdeferred = {};\n\n\t\t// Keep pipe for back-compat\n\t\tpromise.pipe = promise.then;\n\n\t\t// Add list-specific methods\n\t\tjQuery.each( tuples, function( i, tuple ) {\n\t\t\tvar list = tuple[ 2 ],\n\t\t\t\tstateString = tuple[ 3 ];\n\n\t\t\t// promise[ done | fail | progress ] = list.add\n\t\t\tpromise[ tuple[1] ] = list.add;\n\n\t\t\t// Handle state\n\t\t\tif ( stateString ) {\n\t\t\t\tlist.add(function() {\n\t\t\t\t\t// state = [ resolved | rejected ]\n\t\t\t\t\tstate = stateString;\n\n\t\t\t\t// [ reject_list | resolve_list ].disable; progress_list.lock\n\t\t\t\t}, tuples[ i ^ 1 ][ 2 ].disable, tuples[ 2 ][ 2 ].lock );\n\t\t\t}\n\n\t\t\t// deferred[ resolve | reject | notify ]\n\t\t\tdeferred[ tuple[0] ] = function() {\n\t\t\t\tdeferred[ tuple[0] + \"With\" ]( this === deferred ? promise : this, arguments );\n\t\t\t\treturn this;\n\t\t\t};\n\t\t\tdeferred[ tuple[0] + \"With\" ] = list.fireWith;\n\t\t});\n\n\t\t// Make the deferred a promise\n\t\tpromise.promise( deferred );\n\n\t\t// Call given func if any\n\t\tif ( func ) {\n\t\t\tfunc.call( deferred, deferred );\n\t\t}\n\n\t\t// All done!\n\t\treturn deferred;\n\t},\n\n\t// Deferred helper\n\twhen: function( subordinate /* , ..., subordinateN */ ) {\n\t\tvar i = 0,\n\t\t\tresolveValues = slice.call( arguments ),\n\t\t\tlength = resolveValues.length,\n\n\t\t\t// the count of uncompleted subordinates\n\t\t\tremaining = length !== 1 || ( subordinate && jQuery.isFunction( subordinate.promise ) ) ? length : 0,\n\n\t\t\t// the master Deferred. If resolveValues consist of only a single Deferred, just use that.\n\t\t\tdeferred = remaining === 1 ? subordinate : jQuery.Deferred(),\n\n\t\t\t// Update function for both resolve and progress values\n\t\t\tupdateFunc = function( i, contexts, values ) {\n\t\t\t\treturn function( value ) {\n\t\t\t\t\tcontexts[ i ] = this;\n\t\t\t\t\tvalues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\n\t\t\t\t\tif ( values === progressValues ) {\n\t\t\t\t\t\tdeferred.notifyWith( contexts, values );\n\t\t\t\t\t} else if ( !( --remaining ) ) {\n\t\t\t\t\t\tdeferred.resolveWith( contexts, values );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t},\n\n\t\t\tprogressValues, progressContexts, resolveContexts;\n\n\t\t// add listeners to Deferred subordinates; treat others as resolved\n\t\tif ( length > 1 ) {\n\t\t\tprogressValues = new Array( length );\n\t\t\tprogressContexts = new Array( length );\n\t\t\tresolveContexts = new Array( length );\n\t\t\tfor ( ; i < length; i++ ) {\n\t\t\t\tif ( resolveValues[ i ] && jQuery.isFunction( resolveValues[ i ].promise ) ) {\n\t\t\t\t\tresolveValues[ i ].promise()\n\t\t\t\t\t\t.done( updateFunc( i, resolveContexts, resolveValues ) )\n\t\t\t\t\t\t.fail( deferred.reject )\n\t\t\t\t\t\t.progress( updateFunc( i, progressContexts, progressValues ) );\n\t\t\t\t} else {\n\t\t\t\t\t--remaining;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// if we're not waiting on anything, resolve the master\n\t\tif ( !remaining ) {\n\t\t\tdeferred.resolveWith( resolveContexts, resolveValues );\n\t\t}\n\n\t\treturn deferred.promise();\n\t}\n});\n\n\n// The deferred used on DOM ready\nvar readyList;\n\njQuery.fn.ready = function( fn ) {\n\t// Add the callback\n\tjQuery.ready.promise().done( fn );\n\n\treturn this;\n};\n\njQuery.extend({\n\t// Is the DOM ready to be used? Set to true once it occurs.\n\tisReady: false,\n\n\t// A counter to track how many items to wait for before\n\t// the ready event fires. See #6781\n\treadyWait: 1,\n\n\t// Hold (or release) the ready event\n\tholdReady: function( hold ) {\n\t\tif ( hold ) {\n\t\t\tjQuery.readyWait++;\n\t\t} else {\n\t\t\tjQuery.ready( true );\n\t\t}\n\t},\n\n\t// Handle when the DOM is ready\n\tready: function( wait ) {\n\n\t\t// Abort if there are pending holds or we're already ready\n\t\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Remember that the DOM is ready\n\t\tjQuery.isReady = true;\n\n\t\t// If a normal DOM Ready event fired, decrement, and wait if need be\n\t\tif ( wait !== true && --jQuery.readyWait > 0 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If there are functions bound, to execute\n\t\treadyList.resolveWith( document, [ jQuery ] );\n\n\t\t// Trigger any bound ready events\n\t\tif ( jQuery.fn.triggerHandler ) {\n\t\t\tjQuery( document ).triggerHandler( \"ready\" );\n\t\t\tjQuery( document ).off( \"ready\" );\n\t\t}\n\t}\n});\n\n/**\n * The ready event handler and self cleanup method\n */\nfunction completed() {\n\tdocument.removeEventListener( \"DOMContentLoaded\", completed, false );\n\twindow.removeEventListener( \"load\", completed, false );\n\tjQuery.ready();\n}\n\njQuery.ready.promise = function( obj ) {\n\tif ( !readyList ) {\n\n\t\treadyList = jQuery.Deferred();\n\n\t\t// Catch cases where $(document).ready() is called after the browser event has already occurred.\n\t\t// we once tried to use readyState \"interactive\" here, but it caused issues like the one\n\t\t// discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\n\t\tif ( document.readyState === \"complete\" ) {\n\t\t\t// Handle it asynchronously to allow scripts the opportunity to delay ready\n\t\t\tsetTimeout( jQuery.ready );\n\n\t\t} else {\n\n\t\t\t// Use the handy event callback\n\t\t\tdocument.addEventListener( \"DOMContentLoaded\", completed, false );\n\n\t\t\t// A fallback to window.onload, that will always work\n\t\t\twindow.addEventListener( \"load\", completed, false );\n\t\t}\n\t}\n\treturn readyList.promise( obj );\n};\n\n// Kick off the DOM ready check even if the user does not\njQuery.ready.promise();\n\n\n\n\n// Multifunctional method to get and set values of a collection\n// The value/s can optionally be executed if it's a function\nvar access = jQuery.access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\n\tvar i = 0,\n\t\tlen = elems.length,\n\t\tbulk = key == null;\n\n\t// Sets many values\n\tif ( jQuery.type( key ) === \"object\" ) {\n\t\tchainable = true;\n\t\tfor ( i in key ) {\n\t\t\tjQuery.access( elems, fn, i, key[i], true, emptyGet, raw );\n\t\t}\n\n\t// Sets one value\n\t} else if ( value !== undefined ) {\n\t\tchainable = true;\n\n\t\tif ( !jQuery.isFunction( value ) ) {\n\t\t\traw = true;\n\t\t}\n\n\t\tif ( bulk ) {\n\t\t\t// Bulk operations run against the entire set\n\t\t\tif ( raw ) {\n\t\t\t\tfn.call( elems, value );\n\t\t\t\tfn = null;\n\n\t\t\t// ...except when executing function values\n\t\t\t} else {\n\t\t\t\tbulk = fn;\n\t\t\t\tfn = function( elem, key, value ) {\n\t\t\t\t\treturn bulk.call( jQuery( elem ), value );\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif ( fn ) {\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\tfn( elems[i], key, raw ? value : value.call( elems[i], i, fn( elems[i], key ) ) );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn chainable ?\n\t\telems :\n\n\t\t// Gets\n\t\tbulk ?\n\t\t\tfn.call( elems ) :\n\t\t\tlen ? fn( elems[0], key ) : emptyGet;\n};\n\n\n/**\n * Determines whether an object can have data\n */\njQuery.acceptData = function( owner ) {\n\t// Accepts only:\n\t//  - Node\n\t//    - Node.ELEMENT_NODE\n\t//    - Node.DOCUMENT_NODE\n\t//  - Object\n\t//    - Any\n\t/* jshint -W018 */\n\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\n};\n\n\nfunction Data() {\n\t// Support: Android < 4,\n\t// Old WebKit does not have Object.preventExtensions/freeze method,\n\t// return new empty object instead with no [[set]] accessor\n\tObject.defineProperty( this.cache = {}, 0, {\n\t\tget: function() {\n\t\t\treturn {};\n\t\t}\n\t});\n\n\tthis.expando = jQuery.expando + Math.random();\n}\n\nData.uid = 1;\nData.accepts = jQuery.acceptData;\n\nData.prototype = {\n\tkey: function( owner ) {\n\t\t// We can accept data for non-element nodes in modern browsers,\n\t\t// but we should not, see #8335.\n\t\t// Always return the key for a frozen object.\n\t\tif ( !Data.accepts( owner ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\tvar descriptor = {},\n\t\t\t// Check if the owner object already has a cache key\n\t\t\tunlock = owner[ this.expando ];\n\n\t\t// If not, create one\n\t\tif ( !unlock ) {\n\t\t\tunlock = Data.uid++;\n\n\t\t\t// Secure it in a non-enumerable, non-writable property\n\t\t\ttry {\n\t\t\t\tdescriptor[ this.expando ] = { value: unlock };\n\t\t\t\tObject.defineProperties( owner, descriptor );\n\n\t\t\t// Support: Android < 4\n\t\t\t// Fallback to a less secure definition\n\t\t\t} catch ( e ) {\n\t\t\t\tdescriptor[ this.expando ] = unlock;\n\t\t\t\tjQuery.extend( owner, descriptor );\n\t\t\t}\n\t\t}\n\n\t\t// Ensure the cache object\n\t\tif ( !this.cache[ unlock ] ) {\n\t\t\tthis.cache[ unlock ] = {};\n\t\t}\n\n\t\treturn unlock;\n\t},\n\tset: function( owner, data, value ) {\n\t\tvar prop,\n\t\t\t// There may be an unlock assigned to this node,\n\t\t\t// if there is no entry for this \"owner\", create one inline\n\t\t\t// and set the unlock as though an owner entry had always existed\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\t// Handle: [ owner, key, value ] args\n\t\tif ( typeof data === \"string\" ) {\n\t\t\tcache[ data ] = value;\n\n\t\t// Handle: [ owner, { properties } ] args\n\t\t} else {\n\t\t\t// Fresh assignments by object are shallow copied\n\t\t\tif ( jQuery.isEmptyObject( cache ) ) {\n\t\t\t\tjQuery.extend( this.cache[ unlock ], data );\n\t\t\t// Otherwise, copy the properties one-by-one to the cache object\n\t\t\t} else {\n\t\t\t\tfor ( prop in data ) {\n\t\t\t\t\tcache[ prop ] = data[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn cache;\n\t},\n\tget: function( owner, key ) {\n\t\t// Either a valid cache is found, or will be created.\n\t\t// New caches will be created and the unlock returned,\n\t\t// allowing direct access to the newly created\n\t\t// empty data object. A valid owner object must be provided.\n\t\tvar cache = this.cache[ this.key( owner ) ];\n\n\t\treturn key === undefined ?\n\t\t\tcache : cache[ key ];\n\t},\n\taccess: function( owner, key, value ) {\n\t\tvar stored;\n\t\t// In cases where either:\n\t\t//\n\t\t//   1. No key was specified\n\t\t//   2. A string key was specified, but no value provided\n\t\t//\n\t\t// Take the \"read\" path and allow the get method to determine\n\t\t// which value to return, respectively either:\n\t\t//\n\t\t//   1. The entire cache object\n\t\t//   2. The data stored at the key\n\t\t//\n\t\tif ( key === undefined ||\n\t\t\t\t((key && typeof key === \"string\") && value === undefined) ) {\n\n\t\t\tstored = this.get( owner, key );\n\n\t\t\treturn stored !== undefined ?\n\t\t\t\tstored : this.get( owner, jQuery.camelCase(key) );\n\t\t}\n\n\t\t// [*]When the key is not a string, or both a key and value\n\t\t// are specified, set or extend (existing objects) with either:\n\t\t//\n\t\t//   1. An object of properties\n\t\t//   2. A key and value\n\t\t//\n\t\tthis.set( owner, key, value );\n\n\t\t// Since the \"set\" path can have two possible entry points\n\t\t// return the expected data based on which path was taken[*]\n\t\treturn value !== undefined ? value : key;\n\t},\n\tremove: function( owner, key ) {\n\t\tvar i, name, camel,\n\t\t\tunlock = this.key( owner ),\n\t\t\tcache = this.cache[ unlock ];\n\n\t\tif ( key === undefined ) {\n\t\t\tthis.cache[ unlock ] = {};\n\n\t\t} else {\n\t\t\t// Support array or space separated string of keys\n\t\t\tif ( jQuery.isArray( key ) ) {\n\t\t\t\t// If \"name\" is an array of keys...\n\t\t\t\t// When data is initially created, via (\"key\", \"val\") signature,\n\t\t\t\t// keys will be converted to camelCase.\n\t\t\t\t// Since there is no way to tell _how_ a key was added, remove\n\t\t\t\t// both plain key and camelCase key. #12786\n\t\t\t\t// This will only penalize the array argument path.\n\t\t\t\tname = key.concat( key.map( jQuery.camelCase ) );\n\t\t\t} else {\n\t\t\t\tcamel = jQuery.camelCase( key );\n\t\t\t\t// Try the string as a key before any manipulation\n\t\t\t\tif ( key in cache ) {\n\t\t\t\t\tname = [ key, camel ];\n\t\t\t\t} else {\n\t\t\t\t\t// If a key with the spaces exists, use it.\n\t\t\t\t\t// Otherwise, create an array by matching non-whitespace\n\t\t\t\t\tname = camel;\n\t\t\t\t\tname = name in cache ?\n\t\t\t\t\t\t[ name ] : ( name.match( rnotwhite ) || [] );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = name.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tdelete cache[ name[ i ] ];\n\t\t\t}\n\t\t}\n\t},\n\thasData: function( owner ) {\n\t\treturn !jQuery.isEmptyObject(\n\t\t\tthis.cache[ owner[ this.expando ] ] || {}\n\t\t);\n\t},\n\tdiscard: function( owner ) {\n\t\tif ( owner[ this.expando ] ) {\n\t\t\tdelete this.cache[ owner[ this.expando ] ];\n\t\t}\n\t}\n};\nvar data_priv = new Data();\n\nvar data_user = new Data();\n\n\n\n/*\n\tImplementation Summary\n\n\t1. Enforce API surface and semantic compatibility with 1.9.x branch\n\t2. Improve the module's maintainability by reducing the storage\n\t\tpaths to a single mechanism.\n\t3. Use the same single mechanism to support \"private\" and \"user\" data.\n\t4. _Never_ expose \"private\" data to user code (TODO: Drop _data, _removeData)\n\t5. Avoid exposing implementation details on user objects (eg. expando properties)\n\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\n*/\nvar rbrace = /^(?:\\{[\\w\\W]*\\}|\\[[\\w\\W]*\\])$/,\n\trmultiDash = /([A-Z])/g;\n\nfunction dataAttr( elem, key, data ) {\n\tvar name;\n\n\t// If nothing was found internally, try to fetch any\n\t// data from the HTML5 data-* attribute\n\tif ( data === undefined && elem.nodeType === 1 ) {\n\t\tname = \"data-\" + key.replace( rmultiDash, \"-$1\" ).toLowerCase();\n\t\tdata = elem.getAttribute( name );\n\n\t\tif ( typeof data === \"string\" ) {\n\t\t\ttry {\n\t\t\t\tdata = data === \"true\" ? true :\n\t\t\t\t\tdata === \"false\" ? false :\n\t\t\t\t\tdata === \"null\" ? null :\n\t\t\t\t\t// Only convert to a number if it doesn't change the string\n\t\t\t\t\t+data + \"\" === data ? +data :\n\t\t\t\t\trbrace.test( data ) ? jQuery.parseJSON( data ) :\n\t\t\t\t\tdata;\n\t\t\t} catch( e ) {}\n\n\t\t\t// Make sure we set the data so it isn't changed later\n\t\t\tdata_user.set( elem, key, data );\n\t\t} else {\n\t\t\tdata = undefined;\n\t\t}\n\t}\n\treturn data;\n}\n\njQuery.extend({\n\thasData: function( elem ) {\n\t\treturn data_user.hasData( elem ) || data_priv.hasData( elem );\n\t},\n\n\tdata: function( elem, name, data ) {\n\t\treturn data_user.access( elem, name, data );\n\t},\n\n\tremoveData: function( elem, name ) {\n\t\tdata_user.remove( elem, name );\n\t},\n\n\t// TODO: Now that all calls to _data and _removeData have been replaced\n\t// with direct calls to data_priv methods, these can be deprecated.\n\t_data: function( elem, name, data ) {\n\t\treturn data_priv.access( elem, name, data );\n\t},\n\n\t_removeData: function( elem, name ) {\n\t\tdata_priv.remove( elem, name );\n\t}\n});\n\njQuery.fn.extend({\n\tdata: function( key, value ) {\n\t\tvar i, name, data,\n\t\t\telem = this[ 0 ],\n\t\t\tattrs = elem && elem.attributes;\n\n\t\t// Gets all values\n\t\tif ( key === undefined ) {\n\t\t\tif ( this.length ) {\n\t\t\t\tdata = data_user.get( elem );\n\n\t\t\t\tif ( elem.nodeType === 1 && !data_priv.get( elem, \"hasDataAttrs\" ) ) {\n\t\t\t\t\ti = attrs.length;\n\t\t\t\t\twhile ( i-- ) {\n\n\t\t\t\t\t\t// Support: IE11+\n\t\t\t\t\t\t// The attrs elements can be null (#14894)\n\t\t\t\t\t\tif ( attrs[ i ] ) {\n\t\t\t\t\t\t\tname = attrs[ i ].name;\n\t\t\t\t\t\t\tif ( name.indexOf( \"data-\" ) === 0 ) {\n\t\t\t\t\t\t\t\tname = jQuery.camelCase( name.slice(5) );\n\t\t\t\t\t\t\t\tdataAttr( elem, name, data[ name ] );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdata_priv.set( elem, \"hasDataAttrs\", true );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\t// Sets multiple values\n\t\tif ( typeof key === \"object\" ) {\n\t\t\treturn this.each(function() {\n\t\t\t\tdata_user.set( this, key );\n\t\t\t});\n\t\t}\n\n\t\treturn access( this, function( value ) {\n\t\t\tvar data,\n\t\t\t\tcamelKey = jQuery.camelCase( key );\n\n\t\t\t// The calling jQuery object (element matches) is not empty\n\t\t\t// (and therefore has an element appears at this[ 0 ]) and the\n\t\t\t// `value` parameter was not undefined. An empty jQuery object\n\t\t\t// will result in `undefined` for elem = this[ 0 ] which will\n\t\t\t// throw an exception if an attempt to read a data cache is made.\n\t\t\tif ( elem && value === undefined ) {\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key as-is\n\t\t\t\tdata = data_user.get( elem, key );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to get data from the cache\n\t\t\t\t// with the key camelized\n\t\t\t\tdata = data_user.get( elem, camelKey );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// Attempt to \"discover\" the data in\n\t\t\t\t// HTML5 custom data-* attrs\n\t\t\t\tdata = dataAttr( elem, camelKey, undefined );\n\t\t\t\tif ( data !== undefined ) {\n\t\t\t\t\treturn data;\n\t\t\t\t}\n\n\t\t\t\t// We tried really hard, but the data doesn't exist.\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set the data...\n\t\t\tthis.each(function() {\n\t\t\t\t// First, attempt to store a copy or reference of any\n\t\t\t\t// data that might've been store with a camelCased key.\n\t\t\t\tvar data = data_user.get( this, camelKey );\n\n\t\t\t\t// For HTML5 data-* attribute interop, we have to\n\t\t\t\t// store property names with dashes in a camelCase form.\n\t\t\t\t// This might not apply to all properties...*\n\t\t\t\tdata_user.set( this, camelKey, value );\n\n\t\t\t\t// *... In the case of properties that might _actually_\n\t\t\t\t// have dashes, we need to also store a copy of that\n\t\t\t\t// unchanged property.\n\t\t\t\tif ( key.indexOf(\"-\") !== -1 && data !== undefined ) {\n\t\t\t\t\tdata_user.set( this, key, value );\n\t\t\t\t}\n\t\t\t});\n\t\t}, null, value, arguments.length > 1, null, true );\n\t},\n\n\tremoveData: function( key ) {\n\t\treturn this.each(function() {\n\t\t\tdata_user.remove( this, key );\n\t\t});\n\t}\n});\n\n\njQuery.extend({\n\tqueue: function( elem, type, data ) {\n\t\tvar queue;\n\n\t\tif ( elem ) {\n\t\t\ttype = ( type || \"fx\" ) + \"queue\";\n\t\t\tqueue = data_priv.get( elem, type );\n\n\t\t\t// Speed up dequeue by getting out quickly if this is just a lookup\n\t\t\tif ( data ) {\n\t\t\t\tif ( !queue || jQuery.isArray( data ) ) {\n\t\t\t\t\tqueue = data_priv.access( elem, type, jQuery.makeArray(data) );\n\t\t\t\t} else {\n\t\t\t\t\tqueue.push( data );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn queue || [];\n\t\t}\n\t},\n\n\tdequeue: function( elem, type ) {\n\t\ttype = type || \"fx\";\n\n\t\tvar queue = jQuery.queue( elem, type ),\n\t\t\tstartLength = queue.length,\n\t\t\tfn = queue.shift(),\n\t\t\thooks = jQuery._queueHooks( elem, type ),\n\t\t\tnext = function() {\n\t\t\t\tjQuery.dequeue( elem, type );\n\t\t\t};\n\n\t\t// If the fx queue is dequeued, always remove the progress sentinel\n\t\tif ( fn === \"inprogress\" ) {\n\t\t\tfn = queue.shift();\n\t\t\tstartLength--;\n\t\t}\n\n\t\tif ( fn ) {\n\n\t\t\t// Add a progress sentinel to prevent the fx queue from being\n\t\t\t// automatically dequeued\n\t\t\tif ( type === \"fx\" ) {\n\t\t\t\tqueue.unshift( \"inprogress\" );\n\t\t\t}\n\n\t\t\t// clear up the last queue stop function\n\t\t\tdelete hooks.stop;\n\t\t\tfn.call( elem, next, hooks );\n\t\t}\n\n\t\tif ( !startLength && hooks ) {\n\t\t\thooks.empty.fire();\n\t\t}\n\t},\n\n\t// not intended for public consumption - generates a queueHooks object, or returns the current one\n\t_queueHooks: function( elem, type ) {\n\t\tvar key = type + \"queueHooks\";\n\t\treturn data_priv.get( elem, key ) || data_priv.access( elem, key, {\n\t\t\tempty: jQuery.Callbacks(\"once memory\").add(function() {\n\t\t\t\tdata_priv.remove( elem, [ type + \"queue\", key ] );\n\t\t\t})\n\t\t});\n\t}\n});\n\njQuery.fn.extend({\n\tqueue: function( type, data ) {\n\t\tvar setter = 2;\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tdata = type;\n\t\t\ttype = \"fx\";\n\t\t\tsetter--;\n\t\t}\n\n\t\tif ( arguments.length < setter ) {\n\t\t\treturn jQuery.queue( this[0], type );\n\t\t}\n\n\t\treturn data === undefined ?\n\t\t\tthis :\n\t\t\tthis.each(function() {\n\t\t\t\tvar queue = jQuery.queue( this, type, data );\n\n\t\t\t\t// ensure a hooks for this queue\n\t\t\t\tjQuery._queueHooks( this, type );\n\n\t\t\t\tif ( type === \"fx\" && queue[0] !== \"inprogress\" ) {\n\t\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t\t}\n\t\t\t});\n\t},\n\tdequeue: function( type ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.dequeue( this, type );\n\t\t});\n\t},\n\tclearQueue: function( type ) {\n\t\treturn this.queue( type || \"fx\", [] );\n\t},\n\t// Get a promise resolved when queues of a certain type\n\t// are emptied (fx is the type by default)\n\tpromise: function( type, obj ) {\n\t\tvar tmp,\n\t\t\tcount = 1,\n\t\t\tdefer = jQuery.Deferred(),\n\t\t\telements = this,\n\t\t\ti = this.length,\n\t\t\tresolve = function() {\n\t\t\t\tif ( !( --count ) ) {\n\t\t\t\t\tdefer.resolveWith( elements, [ elements ] );\n\t\t\t\t}\n\t\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tobj = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\ttype = type || \"fx\";\n\n\t\twhile ( i-- ) {\n\t\t\ttmp = data_priv.get( elements[ i ], type + \"queueHooks\" );\n\t\t\tif ( tmp && tmp.empty ) {\n\t\t\t\tcount++;\n\t\t\t\ttmp.empty.add( resolve );\n\t\t\t}\n\t\t}\n\t\tresolve();\n\t\treturn defer.promise( obj );\n\t}\n});\nvar pnum = (/[+-]?(?:\\d*\\.|)\\d+(?:[eE][+-]?\\d+|)/).source;\n\nvar cssExpand = [ \"Top\", \"Right\", \"Bottom\", \"Left\" ];\n\nvar isHidden = function( elem, el ) {\n\t\t// isHidden might be called from jQuery#filter function;\n\t\t// in that case, element will be second argument\n\t\telem = el || elem;\n\t\treturn jQuery.css( elem, \"display\" ) === \"none\" || !jQuery.contains( elem.ownerDocument, elem );\n\t};\n\nvar rcheckableType = (/^(?:checkbox|radio)$/i);\n\n\n\n(function() {\n\tvar fragment = document.createDocumentFragment(),\n\t\tdiv = fragment.appendChild( document.createElement( \"div\" ) ),\n\t\tinput = document.createElement( \"input\" );\n\n\t// #11217 - WebKit loses check when the name is after the checked attribute\n\t// Support: Windows Web Apps (WWA)\n\t// `name` and `type` need .setAttribute for WWA\n\tinput.setAttribute( \"type\", \"radio\" );\n\tinput.setAttribute( \"checked\", \"checked\" );\n\tinput.setAttribute( \"name\", \"t\" );\n\n\tdiv.appendChild( input );\n\n\t// Support: Safari 5.1, iOS 5.1, Android 4.x, Android 2.3\n\t// old WebKit doesn't clone checked state correctly in fragments\n\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\n\n\t// Make sure textarea (and checkbox) defaultValue is properly cloned\n\t// Support: IE9-IE11+\n\tdiv.innerHTML = \"<textarea>x</textarea>\";\n\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\n})();\nvar strundefined = typeof undefined;\n\n\n\nsupport.focusinBubbles = \"onfocusin\" in window;\n\n\nvar\n\trkeyEvent = /^key/,\n\trmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\n\trfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\n\trtypenamespace = /^([^.]*)(?:\\.(.+)|)$/;\n\nfunction returnTrue() {\n\treturn true;\n}\n\nfunction returnFalse() {\n\treturn false;\n}\n\nfunction safeActiveElement() {\n\ttry {\n\t\treturn document.activeElement;\n\t} catch ( err ) { }\n}\n\n/*\n * Helper functions for managing events -- not part of the public interface.\n * Props to Dean Edwards' addEvent library for many of the ideas.\n */\njQuery.event = {\n\n\tglobal: {},\n\n\tadd: function( elem, types, handler, data, selector ) {\n\n\t\tvar handleObjIn, eventHandle, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.get( elem );\n\n\t\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\n\t\tif ( !elemData ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Caller can pass in an object of custom data in lieu of the handler\n\t\tif ( handler.handler ) {\n\t\t\thandleObjIn = handler;\n\t\t\thandler = handleObjIn.handler;\n\t\t\tselector = handleObjIn.selector;\n\t\t}\n\n\t\t// Make sure that the handler has a unique ID, used to find/remove it later\n\t\tif ( !handler.guid ) {\n\t\t\thandler.guid = jQuery.guid++;\n\t\t}\n\n\t\t// Init the element's event structure and main handler, if this is the first\n\t\tif ( !(events = elemData.events) ) {\n\t\t\tevents = elemData.events = {};\n\t\t}\n\t\tif ( !(eventHandle = elemData.handle) ) {\n\t\t\teventHandle = elemData.handle = function( e ) {\n\t\t\t\t// Discard the second event of a jQuery.event.trigger() and\n\t\t\t\t// when an event is called after a page has unloaded\n\t\t\t\treturn typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?\n\t\t\t\t\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\n\t\t\t};\n\t\t}\n\n\t\t// Handle multiple events separated by a space\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// There *must* be a type, no attaching namespace-only handlers\n\t\t\tif ( !type ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\t// If event changes its type, use the special event handlers for the changed type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// If selector defined, determine special event api type, otherwise given type\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\n\t\t\t// Update special based on newly reset type\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\n\t\t\t// handleObj is passed to all event handlers\n\t\t\thandleObj = jQuery.extend({\n\t\t\t\ttype: type,\n\t\t\t\torigType: origType,\n\t\t\t\tdata: data,\n\t\t\t\thandler: handler,\n\t\t\t\tguid: handler.guid,\n\t\t\t\tselector: selector,\n\t\t\t\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\n\t\t\t\tnamespace: namespaces.join(\".\")\n\t\t\t}, handleObjIn );\n\n\t\t\t// Init the event handler queue if we're the first\n\t\t\tif ( !(handlers = events[ type ]) ) {\n\t\t\t\thandlers = events[ type ] = [];\n\t\t\t\thandlers.delegateCount = 0;\n\n\t\t\t\t// Only use addEventListener if the special events handler returns false\n\t\t\t\tif ( !special.setup || special.setup.call( elem, data, namespaces, eventHandle ) === false ) {\n\t\t\t\t\tif ( elem.addEventListener ) {\n\t\t\t\t\t\telem.addEventListener( type, eventHandle, false );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( special.add ) {\n\t\t\t\tspecial.add.call( elem, handleObj );\n\n\t\t\t\tif ( !handleObj.handler.guid ) {\n\t\t\t\t\thandleObj.handler.guid = handler.guid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Add to the element's handler list, delegates in front\n\t\t\tif ( selector ) {\n\t\t\t\thandlers.splice( handlers.delegateCount++, 0, handleObj );\n\t\t\t} else {\n\t\t\t\thandlers.push( handleObj );\n\t\t\t}\n\n\t\t\t// Keep track of which events have ever been used, for event optimization\n\t\t\tjQuery.event.global[ type ] = true;\n\t\t}\n\n\t},\n\n\t// Detach an event or set of events from an element\n\tremove: function( elem, types, handler, selector, mappedTypes ) {\n\n\t\tvar j, origCount, tmp,\n\t\t\tevents, t, handleObj,\n\t\t\tspecial, handlers, type, namespaces, origType,\n\t\t\telemData = data_priv.hasData( elem ) && data_priv.get( elem );\n\n\t\tif ( !elemData || !(events = elemData.events) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Once for each type.namespace in types; type may be omitted\n\t\ttypes = ( types || \"\" ).match( rnotwhite ) || [ \"\" ];\n\t\tt = types.length;\n\t\twhile ( t-- ) {\n\t\t\ttmp = rtypenamespace.exec( types[t] ) || [];\n\t\t\ttype = origType = tmp[1];\n\t\t\tnamespaces = ( tmp[2] || \"\" ).split( \".\" ).sort();\n\n\t\t\t// Unbind all events (on this namespace, if provided) for the element\n\t\t\tif ( !type ) {\n\t\t\t\tfor ( type in events ) {\n\t\t\t\t\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tspecial = jQuery.event.special[ type ] || {};\n\t\t\ttype = ( selector ? special.delegateType : special.bindType ) || type;\n\t\t\thandlers = events[ type ] || [];\n\t\t\ttmp = tmp[2] && new RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" );\n\n\t\t\t// Remove matching events\n\t\t\torigCount = j = handlers.length;\n\t\t\twhile ( j-- ) {\n\t\t\t\thandleObj = handlers[ j ];\n\n\t\t\t\tif ( ( mappedTypes || origType === handleObj.origType ) &&\n\t\t\t\t\t( !handler || handler.guid === handleObj.guid ) &&\n\t\t\t\t\t( !tmp || tmp.test( handleObj.namespace ) ) &&\n\t\t\t\t\t( !selector || selector === handleObj.selector || selector === \"**\" && handleObj.selector ) ) {\n\t\t\t\t\thandlers.splice( j, 1 );\n\n\t\t\t\t\tif ( handleObj.selector ) {\n\t\t\t\t\t\thandlers.delegateCount--;\n\t\t\t\t\t}\n\t\t\t\t\tif ( special.remove ) {\n\t\t\t\t\t\tspecial.remove.call( elem, handleObj );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Remove generic event handler if we removed something and no more handlers exist\n\t\t\t// (avoids potential for endless recursion during removal of special event handlers)\n\t\t\tif ( origCount && !handlers.length ) {\n\t\t\t\tif ( !special.teardown || special.teardown.call( elem, namespaces, elemData.handle ) === false ) {\n\t\t\t\t\tjQuery.removeEvent( elem, type, elemData.handle );\n\t\t\t\t}\n\n\t\t\t\tdelete events[ type ];\n\t\t\t}\n\t\t}\n\n\t\t// Remove the expando if it's no longer used\n\t\tif ( jQuery.isEmptyObject( events ) ) {\n\t\t\tdelete elemData.handle;\n\t\t\tdata_priv.remove( elem, \"events\" );\n\t\t}\n\t},\n\n\ttrigger: function( event, data, elem, onlyHandlers ) {\n\n\t\tvar i, cur, tmp, bubbleType, ontype, handle, special,\n\t\t\teventPath = [ elem || document ],\n\t\t\ttype = hasOwn.call( event, \"type\" ) ? event.type : event,\n\t\t\tnamespaces = hasOwn.call( event, \"namespace\" ) ? event.namespace.split(\".\") : [];\n\n\t\tcur = tmp = elem = elem || document;\n\n\t\t// Don't do events on text and comment nodes\n\t\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\n\t\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( type.indexOf(\".\") >= 0 ) {\n\t\t\t// Namespaced trigger; create a regexp to match event type in handle()\n\t\t\tnamespaces = type.split(\".\");\n\t\t\ttype = namespaces.shift();\n\t\t\tnamespaces.sort();\n\t\t}\n\t\tontype = type.indexOf(\":\") < 0 && \"on\" + type;\n\n\t\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\n\t\tevent = event[ jQuery.expando ] ?\n\t\t\tevent :\n\t\t\tnew jQuery.Event( type, typeof event === \"object\" && event );\n\n\t\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\n\t\tevent.isTrigger = onlyHandlers ? 2 : 3;\n\t\tevent.namespace = namespaces.join(\".\");\n\t\tevent.namespace_re = event.namespace ?\n\t\t\tnew RegExp( \"(^|\\\\.)\" + namespaces.join(\"\\\\.(?:.*\\\\.|)\") + \"(\\\\.|$)\" ) :\n\t\t\tnull;\n\n\t\t// Clean up the event in case it is being reused\n\t\tevent.result = undefined;\n\t\tif ( !event.target ) {\n\t\t\tevent.target = elem;\n\t\t}\n\n\t\t// Clone any incoming data and prepend the event, creating the handler arg list\n\t\tdata = data == null ?\n\t\t\t[ event ] :\n\t\t\tjQuery.makeArray( data, [ event ] );\n\n\t\t// Allow special events to draw outside the lines\n\t\tspecial = jQuery.event.special[ type ] || {};\n\t\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine event propagation path in advance, per W3C events spec (#9951)\n\t\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\n\t\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\n\n\t\t\tbubbleType = special.delegateType || type;\n\t\t\tif ( !rfocusMorph.test( bubbleType + type ) ) {\n\t\t\t\tcur = cur.parentNode;\n\t\t\t}\n\t\t\tfor ( ; cur; cur = cur.parentNode ) {\n\t\t\t\teventPath.push( cur );\n\t\t\t\ttmp = cur;\n\t\t\t}\n\n\t\t\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\n\t\t\tif ( tmp === (elem.ownerDocument || document) ) {\n\t\t\t\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\n\t\t\t}\n\t\t}\n\n\t\t// Fire handlers on the event path\n\t\ti = 0;\n\t\twhile ( (cur = eventPath[i++]) && !event.isPropagationStopped() ) {\n\n\t\t\tevent.type = i > 1 ?\n\t\t\t\tbubbleType :\n\t\t\t\tspecial.bindType || type;\n\n\t\t\t// jQuery handler\n\t\t\thandle = ( data_priv.get( cur, \"events\" ) || {} )[ event.type ] && data_priv.get( cur, \"handle\" );\n\t\t\tif ( handle ) {\n\t\t\t\thandle.apply( cur, data );\n\t\t\t}\n\n\t\t\t// Native handler\n\t\t\thandle = ontype && cur[ ontype ];\n\t\t\tif ( handle && handle.apply && jQuery.acceptData( cur ) ) {\n\t\t\t\tevent.result = handle.apply( cur, data );\n\t\t\t\tif ( event.result === false ) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tevent.type = type;\n\n\t\t// If nobody prevented the default action, do it now\n\t\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\n\n\t\t\tif ( (!special._default || special._default.apply( eventPath.pop(), data ) === false) &&\n\t\t\t\tjQuery.acceptData( elem ) ) {\n\n\t\t\t\t// Call a native DOM method on the target with the same name name as the event.\n\t\t\t\t// Don't do default actions on window, that's where global variables be (#6170)\n\t\t\t\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\n\n\t\t\t\t\t// Don't re-trigger an onFOO event when we call its FOO() method\n\t\t\t\t\ttmp = elem[ ontype ];\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Prevent re-triggering of the same event, since we already bubbled it above\n\t\t\t\t\tjQuery.event.triggered = type;\n\t\t\t\t\telem[ type ]();\n\t\t\t\t\tjQuery.event.triggered = undefined;\n\n\t\t\t\t\tif ( tmp ) {\n\t\t\t\t\t\telem[ ontype ] = tmp;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\tdispatch: function( event ) {\n\n\t\t// Make a writable jQuery.Event from the native event object\n\t\tevent = jQuery.event.fix( event );\n\n\t\tvar i, j, ret, matched, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\targs = slice.call( arguments ),\n\t\t\thandlers = ( data_priv.get( this, \"events\" ) || {} )[ event.type ] || [],\n\t\t\tspecial = jQuery.event.special[ event.type ] || {};\n\n\t\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\n\t\targs[0] = event;\n\t\tevent.delegateTarget = this;\n\n\t\t// Call the preDispatch hook for the mapped type, and let it bail if desired\n\t\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Determine handlers\n\t\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\n\n\t\t// Run delegates first; they may want to stop propagation beneath us\n\t\ti = 0;\n\t\twhile ( (matched = handlerQueue[ i++ ]) && !event.isPropagationStopped() ) {\n\t\t\tevent.currentTarget = matched.elem;\n\n\t\t\tj = 0;\n\t\t\twhile ( (handleObj = matched.handlers[ j++ ]) && !event.isImmediatePropagationStopped() ) {\n\n\t\t\t\t// Triggered event must either 1) have no namespace, or\n\t\t\t\t// 2) have namespace(s) a subset or equal to those in the bound event (both can have no namespace).\n\t\t\t\tif ( !event.namespace_re || event.namespace_re.test( handleObj.namespace ) ) {\n\n\t\t\t\t\tevent.handleObj = handleObj;\n\t\t\t\t\tevent.data = handleObj.data;\n\n\t\t\t\t\tret = ( (jQuery.event.special[ handleObj.origType ] || {}).handle || handleObj.handler )\n\t\t\t\t\t\t\t.apply( matched.elem, args );\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\tif ( (event.result = ret) === false ) {\n\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Call the postDispatch hook for the mapped type\n\t\tif ( special.postDispatch ) {\n\t\t\tspecial.postDispatch.call( this, event );\n\t\t}\n\n\t\treturn event.result;\n\t},\n\n\thandlers: function( event, handlers ) {\n\t\tvar i, matches, sel, handleObj,\n\t\t\thandlerQueue = [],\n\t\t\tdelegateCount = handlers.delegateCount,\n\t\t\tcur = event.target;\n\n\t\t// Find delegate handlers\n\t\t// Black-hole SVG <use> instance trees (#13180)\n\t\t// Avoid non-left-click bubbling in Firefox (#3861)\n\t\tif ( delegateCount && cur.nodeType && (!event.button || event.type !== \"click\") ) {\n\n\t\t\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\n\n\t\t\t\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\n\t\t\t\tif ( cur.disabled !== true || event.type !== \"click\" ) {\n\t\t\t\t\tmatches = [];\n\t\t\t\t\tfor ( i = 0; i < delegateCount; i++ ) {\n\t\t\t\t\t\thandleObj = handlers[ i ];\n\n\t\t\t\t\t\t// Don't conflict with Object.prototype properties (#13203)\n\t\t\t\t\t\tsel = handleObj.selector + \" \";\n\n\t\t\t\t\t\tif ( matches[ sel ] === undefined ) {\n\t\t\t\t\t\t\tmatches[ sel ] = handleObj.needsContext ?\n\t\t\t\t\t\t\t\tjQuery( sel, this ).index( cur ) >= 0 :\n\t\t\t\t\t\t\t\tjQuery.find( sel, this, null, [ cur ] ).length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( matches[ sel ] ) {\n\t\t\t\t\t\t\tmatches.push( handleObj );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( matches.length ) {\n\t\t\t\t\t\thandlerQueue.push({ elem: cur, handlers: matches });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Add the remaining (directly-bound) handlers\n\t\tif ( delegateCount < handlers.length ) {\n\t\t\thandlerQueue.push({ elem: this, handlers: handlers.slice( delegateCount ) });\n\t\t}\n\n\t\treturn handlerQueue;\n\t},\n\n\t// Includes some event props shared by KeyEvent and MouseEvent\n\tprops: \"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\".split(\" \"),\n\n\tfixHooks: {},\n\n\tkeyHooks: {\n\t\tprops: \"char charCode key keyCode\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\n\t\t\t// Add which for key events\n\t\t\tif ( event.which == null ) {\n\t\t\t\tevent.which = original.charCode != null ? original.charCode : original.keyCode;\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tmouseHooks: {\n\t\tprops: \"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\".split(\" \"),\n\t\tfilter: function( event, original ) {\n\t\t\tvar eventDoc, doc, body,\n\t\t\t\tbutton = original.button;\n\n\t\t\t// Calculate pageX/Y if missing and clientX/Y available\n\t\t\tif ( event.pageX == null && original.clientX != null ) {\n\t\t\t\teventDoc = event.target.ownerDocument || document;\n\t\t\t\tdoc = eventDoc.documentElement;\n\t\t\t\tbody = eventDoc.body;\n\n\t\t\t\tevent.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\n\t\t\t\tevent.pageY = original.clientY + ( doc && doc.scrollTop  || body && body.scrollTop  || 0 ) - ( doc && doc.clientTop  || body && body.clientTop  || 0 );\n\t\t\t}\n\n\t\t\t// Add which for click: 1 === left; 2 === middle; 3 === right\n\t\t\t// Note: button is not normalized, so don't use it\n\t\t\tif ( !event.which && button !== undefined ) {\n\t\t\t\tevent.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\n\t\t\t}\n\n\t\t\treturn event;\n\t\t}\n\t},\n\n\tfix: function( event ) {\n\t\tif ( event[ jQuery.expando ] ) {\n\t\t\treturn event;\n\t\t}\n\n\t\t// Create a writable copy of the event object and normalize some properties\n\t\tvar i, prop, copy,\n\t\t\ttype = event.type,\n\t\t\toriginalEvent = event,\n\t\t\tfixHook = this.fixHooks[ type ];\n\n\t\tif ( !fixHook ) {\n\t\t\tthis.fixHooks[ type ] = fixHook =\n\t\t\t\trmouseEvent.test( type ) ? this.mouseHooks :\n\t\t\t\trkeyEvent.test( type ) ? this.keyHooks :\n\t\t\t\t{};\n\t\t}\n\t\tcopy = fixHook.props ? this.props.concat( fixHook.props ) : this.props;\n\n\t\tevent = new jQuery.Event( originalEvent );\n\n\t\ti = copy.length;\n\t\twhile ( i-- ) {\n\t\t\tprop = copy[ i ];\n\t\t\tevent[ prop ] = originalEvent[ prop ];\n\t\t}\n\n\t\t// Support: Cordova 2.5 (WebKit) (#13255)\n\t\t// All events should have a target; Cordova deviceready doesn't\n\t\tif ( !event.target ) {\n\t\t\tevent.target = document;\n\t\t}\n\n\t\t// Support: Safari 6.0+, Chrome < 28\n\t\t// Target should not be a text node (#504, #13143)\n\t\tif ( event.target.nodeType === 3 ) {\n\t\t\tevent.target = event.target.parentNode;\n\t\t}\n\n\t\treturn fixHook.filter ? fixHook.filter( event, originalEvent ) : event;\n\t},\n\n\tspecial: {\n\t\tload: {\n\t\t\t// Prevent triggered image.load events from bubbling to window.load\n\t\t\tnoBubble: true\n\t\t},\n\t\tfocus: {\n\t\t\t// Fire native event if possible so blur/focus sequence is correct\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this !== safeActiveElement() && this.focus ) {\n\t\t\t\t\tthis.focus();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusin\"\n\t\t},\n\t\tblur: {\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this === safeActiveElement() && this.blur ) {\n\t\t\t\t\tthis.blur();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\t\tdelegateType: \"focusout\"\n\t\t},\n\t\tclick: {\n\t\t\t// For checkbox, fire native event so checked state will be right\n\t\t\ttrigger: function() {\n\t\t\t\tif ( this.type === \"checkbox\" && this.click && jQuery.nodeName( this, \"input\" ) ) {\n\t\t\t\t\tthis.click();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t// For cross-browser consistency, don't fire native .click() on links\n\t\t\t_default: function( event ) {\n\t\t\t\treturn jQuery.nodeName( event.target, \"a\" );\n\t\t\t}\n\t\t},\n\n\t\tbeforeunload: {\n\t\t\tpostDispatch: function( event ) {\n\n\t\t\t\t// Support: Firefox 20+\n\t\t\t\t// Firefox doesn't alert if the returnValue field is not set.\n\t\t\t\tif ( event.result !== undefined && event.originalEvent ) {\n\t\t\t\t\tevent.originalEvent.returnValue = event.result;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tsimulate: function( type, elem, event, bubble ) {\n\t\t// Piggyback on a donor event to simulate a different one.\n\t\t// Fake originalEvent to avoid donor's stopPropagation, but if the\n\t\t// simulated event prevents default then we do the same on the donor.\n\t\tvar e = jQuery.extend(\n\t\t\tnew jQuery.Event(),\n\t\t\tevent,\n\t\t\t{\n\t\t\t\ttype: type,\n\t\t\t\tisSimulated: true,\n\t\t\t\toriginalEvent: {}\n\t\t\t}\n\t\t);\n\t\tif ( bubble ) {\n\t\t\tjQuery.event.trigger( e, null, elem );\n\t\t} else {\n\t\t\tjQuery.event.dispatch.call( elem, e );\n\t\t}\n\t\tif ( e.isDefaultPrevented() ) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n};\n\njQuery.removeEvent = function( elem, type, handle ) {\n\tif ( elem.removeEventListener ) {\n\t\telem.removeEventListener( type, handle, false );\n\t}\n};\n\njQuery.Event = function( src, props ) {\n\t// Allow instantiation without the 'new' keyword\n\tif ( !(this instanceof jQuery.Event) ) {\n\t\treturn new jQuery.Event( src, props );\n\t}\n\n\t// Event object\n\tif ( src && src.type ) {\n\t\tthis.originalEvent = src;\n\t\tthis.type = src.type;\n\n\t\t// Events bubbling up the document may have been marked as prevented\n\t\t// by a handler lower down the tree; reflect the correct value.\n\t\tthis.isDefaultPrevented = src.defaultPrevented ||\n\t\t\t\tsrc.defaultPrevented === undefined &&\n\t\t\t\t// Support: Android < 4.0\n\t\t\t\tsrc.returnValue === false ?\n\t\t\treturnTrue :\n\t\t\treturnFalse;\n\n\t// Event type\n\t} else {\n\t\tthis.type = src;\n\t}\n\n\t// Put explicitly provided properties onto the event object\n\tif ( props ) {\n\t\tjQuery.extend( this, props );\n\t}\n\n\t// Create a timestamp if incoming event doesn't have one\n\tthis.timeStamp = src && src.timeStamp || jQuery.now();\n\n\t// Mark it as fixed\n\tthis[ jQuery.expando ] = true;\n};\n\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\njQuery.Event.prototype = {\n\tisDefaultPrevented: returnFalse,\n\tisPropagationStopped: returnFalse,\n\tisImmediatePropagationStopped: returnFalse,\n\n\tpreventDefault: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isDefaultPrevented = returnTrue;\n\n\t\tif ( e && e.preventDefault ) {\n\t\t\te.preventDefault();\n\t\t}\n\t},\n\tstopPropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isPropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopPropagation ) {\n\t\t\te.stopPropagation();\n\t\t}\n\t},\n\tstopImmediatePropagation: function() {\n\t\tvar e = this.originalEvent;\n\n\t\tthis.isImmediatePropagationStopped = returnTrue;\n\n\t\tif ( e && e.stopImmediatePropagation ) {\n\t\t\te.stopImmediatePropagation();\n\t\t}\n\n\t\tthis.stopPropagation();\n\t}\n};\n\n// Create mouseenter/leave events using mouseover/out and event-time checks\n// Support: Chrome 15+\njQuery.each({\n\tmouseenter: \"mouseover\",\n\tmouseleave: \"mouseout\",\n\tpointerenter: \"pointerover\",\n\tpointerleave: \"pointerout\"\n}, function( orig, fix ) {\n\tjQuery.event.special[ orig ] = {\n\t\tdelegateType: fix,\n\t\tbindType: fix,\n\n\t\thandle: function( event ) {\n\t\t\tvar ret,\n\t\t\t\ttarget = this,\n\t\t\t\trelated = event.relatedTarget,\n\t\t\t\thandleObj = event.handleObj;\n\n\t\t\t// For mousenter/leave call the handler if related is outside the target.\n\t\t\t// NB: No relatedTarget if the mouse left/entered the browser window\n\t\t\tif ( !related || (related !== target && !jQuery.contains( target, related )) ) {\n\t\t\t\tevent.type = handleObj.origType;\n\t\t\t\tret = handleObj.handler.apply( this, arguments );\n\t\t\t\tevent.type = fix;\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\t};\n});\n\n// Create \"bubbling\" focus and blur events\n// Support: Firefox, Chrome, Safari\nif ( !support.focusinBubbles ) {\n\tjQuery.each({ focus: \"focusin\", blur: \"focusout\" }, function( orig, fix ) {\n\n\t\t// Attach a single capturing handler on the document while someone wants focusin/focusout\n\t\tvar handler = function( event ) {\n\t\t\t\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ), true );\n\t\t\t};\n\n\t\tjQuery.event.special[ fix ] = {\n\t\t\tsetup: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix );\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.addEventListener( orig, handler, true );\n\t\t\t\t}\n\t\t\t\tdata_priv.access( doc, fix, ( attaches || 0 ) + 1 );\n\t\t\t},\n\t\t\tteardown: function() {\n\t\t\t\tvar doc = this.ownerDocument || this,\n\t\t\t\t\tattaches = data_priv.access( doc, fix ) - 1;\n\n\t\t\t\tif ( !attaches ) {\n\t\t\t\t\tdoc.removeEventListener( orig, handler, true );\n\t\t\t\t\tdata_priv.remove( doc, fix );\n\n\t\t\t\t} else {\n\t\t\t\t\tdata_priv.access( doc, fix, attaches );\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t});\n}\n\njQuery.fn.extend({\n\n\ton: function( types, selector, data, fn, /*INTERNAL*/ one ) {\n\t\tvar origFn, type;\n\n\t\t// Types can be a map of types/handlers\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-Object, selector, data )\n\t\t\tif ( typeof selector !== \"string\" ) {\n\t\t\t\t// ( types-Object, data )\n\t\t\t\tdata = data || selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.on( type, selector, data, types[ type ], one );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( data == null && fn == null ) {\n\t\t\t// ( types, fn )\n\t\t\tfn = selector;\n\t\t\tdata = selector = undefined;\n\t\t} else if ( fn == null ) {\n\t\t\tif ( typeof selector === \"string\" ) {\n\t\t\t\t// ( types, selector, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = undefined;\n\t\t\t} else {\n\t\t\t\t// ( types, data, fn )\n\t\t\t\tfn = data;\n\t\t\t\tdata = selector;\n\t\t\t\tselector = undefined;\n\t\t\t}\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t} else if ( !fn ) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif ( one === 1 ) {\n\t\t\torigFn = fn;\n\t\t\tfn = function( event ) {\n\t\t\t\t// Can use an empty set, since event contains the info\n\t\t\t\tjQuery().off( event );\n\t\t\t\treturn origFn.apply( this, arguments );\n\t\t\t};\n\t\t\t// Use same guid so caller can remove using origFn\n\t\t\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\n\t\t}\n\t\treturn this.each( function() {\n\t\t\tjQuery.event.add( this, types, fn, data, selector );\n\t\t});\n\t},\n\tone: function( types, selector, data, fn ) {\n\t\treturn this.on( types, selector, data, fn, 1 );\n\t},\n\toff: function( types, selector, fn ) {\n\t\tvar handleObj, type;\n\t\tif ( types && types.preventDefault && types.handleObj ) {\n\t\t\t// ( event )  dispatched jQuery.Event\n\t\t\thandleObj = types.handleObj;\n\t\t\tjQuery( types.delegateTarget ).off(\n\t\t\t\thandleObj.namespace ? handleObj.origType + \".\" + handleObj.namespace : handleObj.origType,\n\t\t\t\thandleObj.selector,\n\t\t\t\thandleObj.handler\n\t\t\t);\n\t\t\treturn this;\n\t\t}\n\t\tif ( typeof types === \"object\" ) {\n\t\t\t// ( types-object [, selector] )\n\t\t\tfor ( type in types ) {\n\t\t\t\tthis.off( type, selector, types[ type ] );\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\t\tif ( selector === false || typeof selector === \"function\" ) {\n\t\t\t// ( types [, fn] )\n\t\t\tfn = selector;\n\t\t\tselector = undefined;\n\t\t}\n\t\tif ( fn === false ) {\n\t\t\tfn = returnFalse;\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.remove( this, types, fn, selector );\n\t\t});\n\t},\n\n\ttrigger: function( type, data ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.event.trigger( type, data, this );\n\t\t});\n\t},\n\ttriggerHandler: function( type, data ) {\n\t\tvar elem = this[0];\n\t\tif ( elem ) {\n\t\t\treturn jQuery.event.trigger( type, data, elem, true );\n\t\t}\n\t}\n});\n\n\nvar\n\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\w:]+)[^>]*)\\/>/gi,\n\trtagName = /<([\\w:]+)/,\n\trhtml = /<|&#?\\w+;/,\n\trnoInnerhtml = /<(?:script|style|link)/i,\n\t// checked=\"checked\" or checked\n\trchecked = /checked\\s*(?:[^=]|=\\s*.checked.)/i,\n\trscriptType = /^$|\\/(?:java|ecma)script/i,\n\trscriptTypeMasked = /^true\\/(.*)/,\n\trcleanScript = /^\\s*<!(?:\\[CDATA\\[|--)|(?:\\]\\]|--)>\\s*$/g,\n\n\t// We have to close these tags to support XHTML (#13200)\n\twrapMap = {\n\n\t\t// Support: IE 9\n\t\toption: [ 1, \"<select multiple='multiple'>\", \"</select>\" ],\n\n\t\tthead: [ 1, \"<table>\", \"</table>\" ],\n\t\tcol: [ 2, \"<table><colgroup>\", \"</colgroup></table>\" ],\n\t\ttr: [ 2, \"<table><tbody>\", \"</tbody></table>\" ],\n\t\ttd: [ 3, \"<table><tbody><tr>\", \"</tr></tbody></table>\" ],\n\n\t\t_default: [ 0, \"\", \"\" ]\n\t};\n\n// Support: IE 9\nwrapMap.optgroup = wrapMap.option;\n\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\nwrapMap.th = wrapMap.td;\n\n// Support: 1.x compatibility\n// Manipulating tables requires a tbody\nfunction manipulationTarget( elem, content ) {\n\treturn jQuery.nodeName( elem, \"table\" ) &&\n\t\tjQuery.nodeName( content.nodeType !== 11 ? content : content.firstChild, \"tr\" ) ?\n\n\t\telem.getElementsByTagName(\"tbody\")[0] ||\n\t\t\telem.appendChild( elem.ownerDocument.createElement(\"tbody\") ) :\n\t\telem;\n}\n\n// Replace/restore the type attribute of script elements for safe DOM manipulation\nfunction disableScript( elem ) {\n\telem.type = (elem.getAttribute(\"type\") !== null) + \"/\" + elem.type;\n\treturn elem;\n}\nfunction restoreScript( elem ) {\n\tvar match = rscriptTypeMasked.exec( elem.type );\n\n\tif ( match ) {\n\t\telem.type = match[ 1 ];\n\t} else {\n\t\telem.removeAttribute(\"type\");\n\t}\n\n\treturn elem;\n}\n\n// Mark scripts as having already been evaluated\nfunction setGlobalEval( elems, refElements ) {\n\tvar i = 0,\n\t\tl = elems.length;\n\n\tfor ( ; i < l; i++ ) {\n\t\tdata_priv.set(\n\t\t\telems[ i ], \"globalEval\", !refElements || data_priv.get( refElements[ i ], \"globalEval\" )\n\t\t);\n\t}\n}\n\nfunction cloneCopyEvent( src, dest ) {\n\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\n\n\tif ( dest.nodeType !== 1 ) {\n\t\treturn;\n\t}\n\n\t// 1. Copy private data: events, handlers, etc.\n\tif ( data_priv.hasData( src ) ) {\n\t\tpdataOld = data_priv.access( src );\n\t\tpdataCur = data_priv.set( dest, pdataOld );\n\t\tevents = pdataOld.events;\n\n\t\tif ( events ) {\n\t\t\tdelete pdataCur.handle;\n\t\t\tpdataCur.events = {};\n\n\t\t\tfor ( type in events ) {\n\t\t\t\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\n\t\t\t\t\tjQuery.event.add( dest, type, events[ type ][ i ] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 2. Copy user data\n\tif ( data_user.hasData( src ) ) {\n\t\tudataOld = data_user.access( src );\n\t\tudataCur = jQuery.extend( {}, udataOld );\n\n\t\tdata_user.set( dest, udataCur );\n\t}\n}\n\nfunction getAll( context, tag ) {\n\tvar ret = context.getElementsByTagName ? context.getElementsByTagName( tag || \"*\" ) :\n\t\t\tcontext.querySelectorAll ? context.querySelectorAll( tag || \"*\" ) :\n\t\t\t[];\n\n\treturn tag === undefined || tag && jQuery.nodeName( context, tag ) ?\n\t\tjQuery.merge( [ context ], ret ) :\n\t\tret;\n}\n\n// Support: IE >= 9\nfunction fixInput( src, dest ) {\n\tvar nodeName = dest.nodeName.toLowerCase();\n\n\t// Fails to persist the checked state of a cloned checkbox or radio button.\n\tif ( nodeName === \"input\" && rcheckableType.test( src.type ) ) {\n\t\tdest.checked = src.checked;\n\n\t// Fails to return the selected option to the default selected state when cloning options\n\t} else if ( nodeName === \"input\" || nodeName === \"textarea\" ) {\n\t\tdest.defaultValue = src.defaultValue;\n\t}\n}\n\njQuery.extend({\n\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\n\t\tvar i, l, srcElements, destElements,\n\t\t\tclone = elem.cloneNode( true ),\n\t\t\tinPage = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t// Support: IE >= 9\n\t\t// Fix Cloning issues\n\t\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\n\t\t\t\t!jQuery.isXMLDoc( elem ) ) {\n\n\t\t\t// We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\n\t\t\tdestElements = getAll( clone );\n\t\t\tsrcElements = getAll( elem );\n\n\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\tfixInput( srcElements[ i ], destElements[ i ] );\n\t\t\t}\n\t\t}\n\n\t\t// Copy the events from the original to the clone\n\t\tif ( dataAndEvents ) {\n\t\t\tif ( deepDataAndEvents ) {\n\t\t\t\tsrcElements = srcElements || getAll( elem );\n\t\t\t\tdestElements = destElements || getAll( clone );\n\n\t\t\t\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\n\t\t\t\t\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcloneCopyEvent( elem, clone );\n\t\t\t}\n\t\t}\n\n\t\t// Preserve script evaluation history\n\t\tdestElements = getAll( clone, \"script\" );\n\t\tif ( destElements.length > 0 ) {\n\t\t\tsetGlobalEval( destElements, !inPage && getAll( elem, \"script\" ) );\n\t\t}\n\n\t\t// Return the cloned set\n\t\treturn clone;\n\t},\n\n\tbuildFragment: function( elems, context, scripts, selection ) {\n\t\tvar elem, tmp, tag, wrap, contains, j,\n\t\t\tfragment = context.createDocumentFragment(),\n\t\t\tnodes = [],\n\t\t\ti = 0,\n\t\t\tl = elems.length;\n\n\t\tfor ( ; i < l; i++ ) {\n\t\t\telem = elems[ i ];\n\n\t\t\tif ( elem || elem === 0 ) {\n\n\t\t\t\t// Add nodes directly\n\t\t\t\tif ( jQuery.type( elem ) === \"object\" ) {\n\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t// jQuery.merge because push.apply(_, arraylike) throws\n\t\t\t\t\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\n\n\t\t\t\t// Convert non-html into a text node\n\t\t\t\t} else if ( !rhtml.test( elem ) ) {\n\t\t\t\t\tnodes.push( context.createTextNode( elem ) );\n\n\t\t\t\t// Convert html into DOM nodes\n\t\t\t\t} else {\n\t\t\t\t\ttmp = tmp || fragment.appendChild( context.createElement(\"div\") );\n\n\t\t\t\t\t// Deserialize a standard representation\n\t\t\t\t\ttag = ( rtagName.exec( elem ) || [ \"\", \"\" ] )[ 1 ].toLowerCase();\n\t\t\t\t\twrap = wrapMap[ tag ] || wrapMap._default;\n\t\t\t\t\ttmp.innerHTML = wrap[ 1 ] + elem.replace( rxhtmlTag, \"<$1></$2>\" ) + wrap[ 2 ];\n\n\t\t\t\t\t// Descend through wrappers to the right content\n\t\t\t\t\tj = wrap[ 0 ];\n\t\t\t\t\twhile ( j-- ) {\n\t\t\t\t\t\ttmp = tmp.lastChild;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t// jQuery.merge because push.apply(_, arraylike) throws\n\t\t\t\t\tjQuery.merge( nodes, tmp.childNodes );\n\n\t\t\t\t\t// Remember the top-level container\n\t\t\t\t\ttmp = fragment.firstChild;\n\n\t\t\t\t\t// Fixes #12346\n\t\t\t\t\t// Support: Webkit, IE\n\t\t\t\t\ttmp.textContent = \"\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Remove wrapper from fragment\n\t\tfragment.textContent = \"\";\n\n\t\ti = 0;\n\t\twhile ( (elem = nodes[ i++ ]) ) {\n\n\t\t\t// #4087 - If origin and destination elements are the same, and this is\n\t\t\t// that element, do not do anything\n\t\t\tif ( selection && jQuery.inArray( elem, selection ) !== -1 ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tcontains = jQuery.contains( elem.ownerDocument, elem );\n\n\t\t\t// Append to fragment\n\t\t\ttmp = getAll( fragment.appendChild( elem ), \"script\" );\n\n\t\t\t// Preserve script evaluation history\n\t\t\tif ( contains ) {\n\t\t\t\tsetGlobalEval( tmp );\n\t\t\t}\n\n\t\t\t// Capture executables\n\t\t\tif ( scripts ) {\n\t\t\t\tj = 0;\n\t\t\t\twhile ( (elem = tmp[ j++ ]) ) {\n\t\t\t\t\tif ( rscriptType.test( elem.type || \"\" ) ) {\n\t\t\t\t\t\tscripts.push( elem );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn fragment;\n\t},\n\n\tcleanData: function( elems ) {\n\t\tvar data, elem, type, key,\n\t\t\tspecial = jQuery.event.special,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[ i ]) !== undefined; i++ ) {\n\t\t\tif ( jQuery.acceptData( elem ) ) {\n\t\t\t\tkey = elem[ data_priv.expando ];\n\n\t\t\t\tif ( key && (data = data_priv.cache[ key ]) ) {\n\t\t\t\t\tif ( data.events ) {\n\t\t\t\t\t\tfor ( type in data.events ) {\n\t\t\t\t\t\t\tif ( special[ type ] ) {\n\t\t\t\t\t\t\t\tjQuery.event.remove( elem, type );\n\n\t\t\t\t\t\t\t// This is a shortcut to avoid jQuery.event.remove's overhead\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.removeEvent( elem, type, data.handle );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( data_priv.cache[ key ] ) {\n\t\t\t\t\t\t// Discard any remaining `private` data\n\t\t\t\t\t\tdelete data_priv.cache[ key ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Discard any remaining `user` data\n\t\t\tdelete data_user.cache[ elem[ data_user.expando ] ];\n\t\t}\n\t}\n});\n\njQuery.fn.extend({\n\ttext: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\treturn value === undefined ?\n\t\t\t\tjQuery.text( this ) :\n\t\t\t\tthis.empty().each(function() {\n\t\t\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\t\t\tthis.textContent = value;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}, null, value, arguments.length );\n\t},\n\n\tappend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.appendChild( elem );\n\t\t\t}\n\t\t});\n\t},\n\n\tprepend: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\n\t\t\t\tvar target = manipulationTarget( this, elem );\n\t\t\t\ttarget.insertBefore( elem, target.firstChild );\n\t\t\t}\n\t\t});\n\t},\n\n\tbefore: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this );\n\t\t\t}\n\t\t});\n\t},\n\n\tafter: function() {\n\t\treturn this.domManip( arguments, function( elem ) {\n\t\t\tif ( this.parentNode ) {\n\t\t\t\tthis.parentNode.insertBefore( elem, this.nextSibling );\n\t\t\t}\n\t\t});\n\t},\n\n\tremove: function( selector, keepData /* Internal Use Only */ ) {\n\t\tvar elem,\n\t\t\telems = selector ? jQuery.filter( selector, this ) : this,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = elems[i]) != null; i++ ) {\n\t\t\tif ( !keepData && elem.nodeType === 1 ) {\n\t\t\t\tjQuery.cleanData( getAll( elem ) );\n\t\t\t}\n\n\t\t\tif ( elem.parentNode ) {\n\t\t\t\tif ( keepData && jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\t\t\tsetGlobalEval( getAll( elem, \"script\" ) );\n\t\t\t\t}\n\t\t\t\telem.parentNode.removeChild( elem );\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tempty: function() {\n\t\tvar elem,\n\t\t\ti = 0;\n\n\t\tfor ( ; (elem = this[i]) != null; i++ ) {\n\t\t\tif ( elem.nodeType === 1 ) {\n\n\t\t\t\t// Prevent memory leaks\n\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\n\t\t\t\t// Remove any remaining nodes\n\t\t\t\telem.textContent = \"\";\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tclone: function( dataAndEvents, deepDataAndEvents ) {\n\t\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\n\t\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\n\n\t\treturn this.map(function() {\n\t\t\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\n\t\t});\n\t},\n\n\thtml: function( value ) {\n\t\treturn access( this, function( value ) {\n\t\t\tvar elem = this[ 0 ] || {},\n\t\t\t\ti = 0,\n\t\t\t\tl = this.length;\n\n\t\t\tif ( value === undefined && elem.nodeType === 1 ) {\n\t\t\t\treturn elem.innerHTML;\n\t\t\t}\n\n\t\t\t// See if we can take a shortcut and just use innerHTML\n\t\t\tif ( typeof value === \"string\" && !rnoInnerhtml.test( value ) &&\n\t\t\t\t!wrapMap[ ( rtagName.exec( value ) || [ \"\", \"\" ] )[ 1 ].toLowerCase() ] ) {\n\n\t\t\t\tvalue = value.replace( rxhtmlTag, \"<$1></$2>\" );\n\n\t\t\t\ttry {\n\t\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\t\telem = this[ i ] || {};\n\n\t\t\t\t\t\t// Remove element nodes and prevent memory leaks\n\t\t\t\t\t\tif ( elem.nodeType === 1 ) {\n\t\t\t\t\t\t\tjQuery.cleanData( getAll( elem, false ) );\n\t\t\t\t\t\t\telem.innerHTML = value;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\telem = 0;\n\n\t\t\t\t// If using innerHTML throws an exception, use the fallback method\n\t\t\t\t} catch( e ) {}\n\t\t\t}\n\n\t\t\tif ( elem ) {\n\t\t\t\tthis.empty().append( value );\n\t\t\t}\n\t\t}, null, value, arguments.length );\n\t},\n\n\treplaceWith: function() {\n\t\tvar arg = arguments[ 0 ];\n\n\t\t// Make the changes, replacing each context element with the new content\n\t\tthis.domManip( arguments, function( elem ) {\n\t\t\targ = this.parentNode;\n\n\t\t\tjQuery.cleanData( getAll( this ) );\n\n\t\t\tif ( arg ) {\n\t\t\t\targ.replaceChild( elem, this );\n\t\t\t}\n\t\t});\n\n\t\t// Force removal if there was no new content (e.g., from empty arguments)\n\t\treturn arg && (arg.length || arg.nodeType) ? this : this.remove();\n\t},\n\n\tdetach: function( selector ) {\n\t\treturn this.remove( selector, true );\n\t},\n\n\tdomManip: function( args, callback ) {\n\n\t\t// Flatten any nested arrays\n\t\targs = concat.apply( [], args );\n\n\t\tvar fragment, first, scripts, hasScripts, node, doc,\n\t\t\ti = 0,\n\t\t\tl = this.length,\n\t\t\tset = this,\n\t\t\tiNoClone = l - 1,\n\t\t\tvalue = args[ 0 ],\n\t\t\tisFunction = jQuery.isFunction( value );\n\n\t\t// We can't cloneNode fragments that contain checked, in WebKit\n\t\tif ( isFunction ||\n\t\t\t\t( l > 1 && typeof value === \"string\" &&\n\t\t\t\t\t!support.checkClone && rchecked.test( value ) ) ) {\n\t\t\treturn this.each(function( index ) {\n\t\t\t\tvar self = set.eq( index );\n\t\t\t\tif ( isFunction ) {\n\t\t\t\t\targs[ 0 ] = value.call( this, index, self.html() );\n\t\t\t\t}\n\t\t\t\tself.domManip( args, callback );\n\t\t\t});\n\t\t}\n\n\t\tif ( l ) {\n\t\t\tfragment = jQuery.buildFragment( args, this[ 0 ].ownerDocument, false, this );\n\t\t\tfirst = fragment.firstChild;\n\n\t\t\tif ( fragment.childNodes.length === 1 ) {\n\t\t\t\tfragment = first;\n\t\t\t}\n\n\t\t\tif ( first ) {\n\t\t\t\tscripts = jQuery.map( getAll( fragment, \"script\" ), disableScript );\n\t\t\t\thasScripts = scripts.length;\n\n\t\t\t\t// Use the original fragment for the last item instead of the first because it can end up\n\t\t\t\t// being emptied incorrectly in certain situations (#8070).\n\t\t\t\tfor ( ; i < l; i++ ) {\n\t\t\t\t\tnode = fragment;\n\n\t\t\t\t\tif ( i !== iNoClone ) {\n\t\t\t\t\t\tnode = jQuery.clone( node, true, true );\n\n\t\t\t\t\t\t// Keep references to cloned scripts for later restoration\n\t\t\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\t\t\t// Support: QtWebKit\n\t\t\t\t\t\t\t// jQuery.merge because push.apply(_, arraylike) throws\n\t\t\t\t\t\t\tjQuery.merge( scripts, getAll( node, \"script\" ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcallback.call( this[ i ], node, i );\n\t\t\t\t}\n\n\t\t\t\tif ( hasScripts ) {\n\t\t\t\t\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\n\n\t\t\t\t\t// Reenable scripts\n\t\t\t\t\tjQuery.map( scripts, restoreScript );\n\n\t\t\t\t\t// Evaluate executable scripts on first document insertion\n\t\t\t\t\tfor ( i = 0; i < hasScripts; i++ ) {\n\t\t\t\t\t\tnode = scripts[ i ];\n\t\t\t\t\t\tif ( rscriptType.test( node.type || \"\" ) &&\n\t\t\t\t\t\t\t!data_priv.access( node, \"globalEval\" ) && jQuery.contains( doc, node ) ) {\n\n\t\t\t\t\t\t\tif ( node.src ) {\n\t\t\t\t\t\t\t\t// Optional AJAX dependency, but won't run scripts if not present\n\t\t\t\t\t\t\t\tif ( jQuery._evalUrl ) {\n\t\t\t\t\t\t\t\t\tjQuery._evalUrl( node.src );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tjQuery.globalEval( node.textContent.replace( rcleanScript, \"\" ) );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t}\n});\n\njQuery.each({\n\tappendTo: \"append\",\n\tprependTo: \"prepend\",\n\tinsertBefore: \"before\",\n\tinsertAfter: \"after\",\n\treplaceAll: \"replaceWith\"\n}, function( name, original ) {\n\tjQuery.fn[ name ] = function( selector ) {\n\t\tvar elems,\n\t\t\tret = [],\n\t\t\tinsert = jQuery( selector ),\n\t\t\tlast = insert.length - 1,\n\t\t\ti = 0;\n\n\t\tfor ( ; i <= last; i++ ) {\n\t\t\telems = i === last ? this : this.clone( true );\n\t\t\tjQuery( insert[ i ] )[ original ]( elems );\n\n\t\t\t// Support: QtWebKit\n\t\t\t// .get() because push.apply(_, arraylike) throws\n\t\t\tpush.apply( ret, elems.get() );\n\t\t}\n\n\t\treturn this.pushStack( ret );\n\t};\n});\n\n\nvar iframe,\n\telemdisplay = {};\n\n/**\n * Retrieve the actual display of a element\n * @param {String} name nodeName of the element\n * @param {Object} doc Document object\n */\n// Called only from within defaultDisplay\nfunction actualDisplay( name, doc ) {\n\tvar style,\n\t\telem = jQuery( doc.createElement( name ) ).appendTo( doc.body ),\n\n\t\t// getDefaultComputedStyle might be reliably used only on attached element\n\t\tdisplay = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle( elem[ 0 ] ) ) ?\n\n\t\t\t// Use of this method is a temporary fix (more like optmization) until something better comes along,\n\t\t\t// since it was removed from specification and supported only in FF\n\t\t\tstyle.display : jQuery.css( elem[ 0 ], \"display\" );\n\n\t// We don't have any data stored on the element,\n\t// so use \"detach\" method as fast way to get rid of the element\n\telem.detach();\n\n\treturn display;\n}\n\n/**\n * Try to determine the default display value of an element\n * @param {String} nodeName\n */\nfunction defaultDisplay( nodeName ) {\n\tvar doc = document,\n\t\tdisplay = elemdisplay[ nodeName ];\n\n\tif ( !display ) {\n\t\tdisplay = actualDisplay( nodeName, doc );\n\n\t\t// If the simple way fails, read from inside an iframe\n\t\tif ( display === \"none\" || !display ) {\n\n\t\t\t// Use the already-created iframe if possible\n\t\t\tiframe = (iframe || jQuery( \"<iframe frameborder='0' width='0' height='0'/>\" )).appendTo( doc.documentElement );\n\n\t\t\t// Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\n\t\t\tdoc = iframe[ 0 ].contentDocument;\n\n\t\t\t// Support: IE\n\t\t\tdoc.write();\n\t\t\tdoc.close();\n\n\t\t\tdisplay = actualDisplay( nodeName, doc );\n\t\t\tiframe.detach();\n\t\t}\n\n\t\t// Store the correct default display\n\t\telemdisplay[ nodeName ] = display;\n\t}\n\n\treturn display;\n}\nvar rmargin = (/^margin/);\n\nvar rnumnonpx = new RegExp( \"^(\" + pnum + \")(?!px)[a-z%]+$\", \"i\" );\n\nvar getStyles = function( elem ) {\n\t\treturn elem.ownerDocument.defaultView.getComputedStyle( elem, null );\n\t};\n\n\n\nfunction curCSS( elem, name, computed ) {\n\tvar width, minWidth, maxWidth, ret,\n\t\tstyle = elem.style;\n\n\tcomputed = computed || getStyles( elem );\n\n\t// Support: IE9\n\t// getPropertyValue is only needed for .css('filter') in IE9, see #12537\n\tif ( computed ) {\n\t\tret = computed.getPropertyValue( name ) || computed[ name ];\n\t}\n\n\tif ( computed ) {\n\n\t\tif ( ret === \"\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\n\t\t\tret = jQuery.style( elem, name );\n\t\t}\n\n\t\t// Support: iOS < 6\n\t\t// A tribute to the \"awesome hack by Dean Edwards\"\n\t\t// iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\n\t\t// this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\n\t\tif ( rnumnonpx.test( ret ) && rmargin.test( name ) ) {\n\n\t\t\t// Remember the original values\n\t\t\twidth = style.width;\n\t\t\tminWidth = style.minWidth;\n\t\t\tmaxWidth = style.maxWidth;\n\n\t\t\t// Put in the new values to get a computed value out\n\t\t\tstyle.minWidth = style.maxWidth = style.width = ret;\n\t\t\tret = computed.width;\n\n\t\t\t// Revert the changed values\n\t\t\tstyle.width = width;\n\t\t\tstyle.minWidth = minWidth;\n\t\t\tstyle.maxWidth = maxWidth;\n\t\t}\n\t}\n\n\treturn ret !== undefined ?\n\t\t// Support: IE\n\t\t// IE returns zIndex value as an integer.\n\t\tret + \"\" :\n\t\tret;\n}\n\n\nfunction addGetHookIf( conditionFn, hookFn ) {\n\t// Define the hook, we'll check on the first run if it's really needed.\n\treturn {\n\t\tget: function() {\n\t\t\tif ( conditionFn() ) {\n\t\t\t\t// Hook not needed (or it's not possible to use it due to missing dependency),\n\t\t\t\t// remove it.\n\t\t\t\t// Since there are no other hooks for marginRight, remove the whole object.\n\t\t\t\tdelete this.get;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Hook needed; redefine it so that the support test is not executed again.\n\n\t\t\treturn (this.get = hookFn).apply( this, arguments );\n\t\t}\n\t};\n}\n\n\n(function() {\n\tvar pixelPositionVal, boxSizingReliableVal,\n\t\tdocElem = document.documentElement,\n\t\tcontainer = document.createElement( \"div\" ),\n\t\tdiv = document.createElement( \"div\" );\n\n\tif ( !div.style ) {\n\t\treturn;\n\t}\n\n\tdiv.style.backgroundClip = \"content-box\";\n\tdiv.cloneNode( true ).style.backgroundClip = \"\";\n\tsupport.clearCloneStyle = div.style.backgroundClip === \"content-box\";\n\n\tcontainer.style.cssText = \"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\" +\n\t\t\"position:absolute\";\n\tcontainer.appendChild( div );\n\n\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\n\t// so they're executed at the same time to save the second computation.\n\tfunction computePixelPositionAndBoxSizingReliable() {\n\t\tdiv.style.cssText =\n\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t// Vendor-prefix box-sizing\n\t\t\t\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\" +\n\t\t\t\"box-sizing:border-box;display:block;margin-top:1%;top:1%;\" +\n\t\t\t\"border:1px;padding:1px;width:4px;position:absolute\";\n\t\tdiv.innerHTML = \"\";\n\t\tdocElem.appendChild( container );\n\n\t\tvar divStyle = window.getComputedStyle( div, null );\n\t\tpixelPositionVal = divStyle.top !== \"1%\";\n\t\tboxSizingReliableVal = divStyle.width === \"4px\";\n\n\t\tdocElem.removeChild( container );\n\t}\n\n\t// Support: node.js jsdom\n\t// Don't assume that getComputedStyle is a property of the global object\n\tif ( window.getComputedStyle ) {\n\t\tjQuery.extend( support, {\n\t\t\tpixelPosition: function() {\n\t\t\t\t// This test is executed only once but we still do memoizing\n\t\t\t\t// since we can use the boxSizingReliable pre-computing.\n\t\t\t\t// No need to check if the test was already performed, though.\n\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\treturn pixelPositionVal;\n\t\t\t},\n\t\t\tboxSizingReliable: function() {\n\t\t\t\tif ( boxSizingReliableVal == null ) {\n\t\t\t\t\tcomputePixelPositionAndBoxSizingReliable();\n\t\t\t\t}\n\t\t\t\treturn boxSizingReliableVal;\n\t\t\t},\n\t\t\treliableMarginRight: function() {\n\t\t\t\t// Support: Android 2.3\n\t\t\t\t// Check if div with explicit width and no margin-right incorrectly\n\t\t\t\t// gets computed margin-right based on width of container. (#3333)\n\t\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t\t// This support function is only executed once so no memoizing is needed.\n\t\t\t\tvar ret,\n\t\t\t\t\tmarginDiv = div.appendChild( document.createElement( \"div\" ) );\n\n\t\t\t\t// Reset CSS: box-sizing; display; margin; border; padding\n\t\t\t\tmarginDiv.style.cssText = div.style.cssText =\n\t\t\t\t\t// Support: Firefox<29, Android 2.3\n\t\t\t\t\t// Vendor-prefix box-sizing\n\t\t\t\t\t\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\" +\n\t\t\t\t\t\"box-sizing:content-box;display:block;margin:0;border:0;padding:0\";\n\t\t\t\tmarginDiv.style.marginRight = marginDiv.style.width = \"0\";\n\t\t\t\tdiv.style.width = \"1px\";\n\t\t\t\tdocElem.appendChild( container );\n\n\t\t\t\tret = !parseFloat( window.getComputedStyle( marginDiv, null ).marginRight );\n\n\t\t\t\tdocElem.removeChild( container );\n\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t});\n\t}\n})();\n\n\n// A method for quickly swapping in/out CSS properties to get correct calculations.\njQuery.swap = function( elem, options, callback, args ) {\n\tvar ret, name,\n\t\told = {};\n\n\t// Remember the old values, and insert the new ones\n\tfor ( name in options ) {\n\t\told[ name ] = elem.style[ name ];\n\t\telem.style[ name ] = options[ name ];\n\t}\n\n\tret = callback.apply( elem, args || [] );\n\n\t// Revert the old values\n\tfor ( name in options ) {\n\t\telem.style[ name ] = old[ name ];\n\t}\n\n\treturn ret;\n};\n\n\nvar\n\t// swappable if display is none or starts with table except \"table\", \"table-cell\", or \"table-caption\"\n\t// see here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\n\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\n\trnumsplit = new RegExp( \"^(\" + pnum + \")(.*)$\", \"i\" ),\n\trrelNum = new RegExp( \"^([+-])=(\" + pnum + \")\", \"i\" ),\n\n\tcssShow = { position: \"absolute\", visibility: \"hidden\", display: \"block\" },\n\tcssNormalTransform = {\n\t\tletterSpacing: \"0\",\n\t\tfontWeight: \"400\"\n\t},\n\n\tcssPrefixes = [ \"Webkit\", \"O\", \"Moz\", \"ms\" ];\n\n// return a css property mapped to a potentially vendor prefixed property\nfunction vendorPropName( style, name ) {\n\n\t// shortcut for names that are not vendor prefixed\n\tif ( name in style ) {\n\t\treturn name;\n\t}\n\n\t// check for vendor prefixed names\n\tvar capName = name[0].toUpperCase() + name.slice(1),\n\t\torigName = name,\n\t\ti = cssPrefixes.length;\n\n\twhile ( i-- ) {\n\t\tname = cssPrefixes[ i ] + capName;\n\t\tif ( name in style ) {\n\t\t\treturn name;\n\t\t}\n\t}\n\n\treturn origName;\n}\n\nfunction setPositiveNumber( elem, value, subtract ) {\n\tvar matches = rnumsplit.exec( value );\n\treturn matches ?\n\t\t// Guard against undefined \"subtract\", e.g., when used as in cssHooks\n\t\tMath.max( 0, matches[ 1 ] - ( subtract || 0 ) ) + ( matches[ 2 ] || \"px\" ) :\n\t\tvalue;\n}\n\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\n\tvar i = extra === ( isBorderBox ? \"border\" : \"content\" ) ?\n\t\t// If we already have the right measurement, avoid augmentation\n\t\t4 :\n\t\t// Otherwise initialize for horizontal or vertical properties\n\t\tname === \"width\" ? 1 : 0,\n\n\t\tval = 0;\n\n\tfor ( ; i < 4; i += 2 ) {\n\t\t// both box models exclude margin, so add it if we want it\n\t\tif ( extra === \"margin\" ) {\n\t\t\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\n\t\t}\n\n\t\tif ( isBorderBox ) {\n\t\t\t// border-box includes padding, so remove it if we want content\n\t\t\tif ( extra === \"content\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\t\t\t}\n\n\t\t\t// at this point, extra isn't border nor margin, so remove border\n\t\t\tif ( extra !== \"margin\" ) {\n\t\t\t\tval -= jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t} else {\n\t\t\t// at this point, extra isn't content, so add padding\n\t\t\tval += jQuery.css( elem, \"padding\" + cssExpand[ i ], true, styles );\n\n\t\t\t// at this point, extra isn't content nor padding, so add border\n\t\t\tif ( extra !== \"padding\" ) {\n\t\t\t\tval += jQuery.css( elem, \"border\" + cssExpand[ i ] + \"Width\", true, styles );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn val;\n}\n\nfunction getWidthOrHeight( elem, name, extra ) {\n\n\t// Start with offset property, which is equivalent to the border-box value\n\tvar valueIsBorderBox = true,\n\t\tval = name === \"width\" ? elem.offsetWidth : elem.offsetHeight,\n\t\tstyles = getStyles( elem ),\n\t\tisBorderBox = jQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\";\n\n\t// some non-html elements return undefined for offsetWidth, so check for null/undefined\n\t// svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\n\t// MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\n\tif ( val <= 0 || val == null ) {\n\t\t// Fall back to computed then uncomputed css if necessary\n\t\tval = curCSS( elem, name, styles );\n\t\tif ( val < 0 || val == null ) {\n\t\t\tval = elem.style[ name ];\n\t\t}\n\n\t\t// Computed unit is not pixels. Stop here and return.\n\t\tif ( rnumnonpx.test(val) ) {\n\t\t\treturn val;\n\t\t}\n\n\t\t// we need the check for style in case a browser which returns unreliable values\n\t\t// for getComputedStyle silently falls back to the reliable elem.style\n\t\tvalueIsBorderBox = isBorderBox &&\n\t\t\t( support.boxSizingReliable() || val === elem.style[ name ] );\n\n\t\t// Normalize \"\", auto, and prepare for extra\n\t\tval = parseFloat( val ) || 0;\n\t}\n\n\t// use the active box-sizing model to add/subtract irrelevant styles\n\treturn ( val +\n\t\taugmentWidthOrHeight(\n\t\t\telem,\n\t\t\tname,\n\t\t\textra || ( isBorderBox ? \"border\" : \"content\" ),\n\t\t\tvalueIsBorderBox,\n\t\t\tstyles\n\t\t)\n\t) + \"px\";\n}\n\nfunction showHide( elements, show ) {\n\tvar display, elem, hidden,\n\t\tvalues = [],\n\t\tindex = 0,\n\t\tlength = elements.length;\n\n\tfor ( ; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tvalues[ index ] = data_priv.get( elem, \"olddisplay\" );\n\t\tdisplay = elem.style.display;\n\t\tif ( show ) {\n\t\t\t// Reset the inline display of this element to learn if it is\n\t\t\t// being hidden by cascaded rules or not\n\t\t\tif ( !values[ index ] && display === \"none\" ) {\n\t\t\t\telem.style.display = \"\";\n\t\t\t}\n\n\t\t\t// Set elements which have been overridden with display: none\n\t\t\t// in a stylesheet to whatever the default browser style is\n\t\t\t// for such an element\n\t\t\tif ( elem.style.display === \"\" && isHidden( elem ) ) {\n\t\t\t\tvalues[ index ] = data_priv.access( elem, \"olddisplay\", defaultDisplay(elem.nodeName) );\n\t\t\t}\n\t\t} else {\n\t\t\thidden = isHidden( elem );\n\n\t\t\tif ( display !== \"none\" || !hidden ) {\n\t\t\t\tdata_priv.set( elem, \"olddisplay\", hidden ? display : jQuery.css( elem, \"display\" ) );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Set the display of most of the elements in a second loop\n\t// to avoid the constant reflow\n\tfor ( index = 0; index < length; index++ ) {\n\t\telem = elements[ index ];\n\t\tif ( !elem.style ) {\n\t\t\tcontinue;\n\t\t}\n\t\tif ( !show || elem.style.display === \"none\" || elem.style.display === \"\" ) {\n\t\t\telem.style.display = show ? values[ index ] || \"\" : \"none\";\n\t\t}\n\t}\n\n\treturn elements;\n}\n\njQuery.extend({\n\t// Add in style property hooks for overriding the default\n\t// behavior of getting and setting a style property\n\tcssHooks: {\n\t\topacity: {\n\t\t\tget: function( elem, computed ) {\n\t\t\t\tif ( computed ) {\n\t\t\t\t\t// We should always get a number back from opacity\n\t\t\t\t\tvar ret = curCSS( elem, \"opacity\" );\n\t\t\t\t\treturn ret === \"\" ? \"1\" : ret;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\t// Don't automatically add \"px\" to these possibly-unitless properties\n\tcssNumber: {\n\t\t\"columnCount\": true,\n\t\t\"fillOpacity\": true,\n\t\t\"flexGrow\": true,\n\t\t\"flexShrink\": true,\n\t\t\"fontWeight\": true,\n\t\t\"lineHeight\": true,\n\t\t\"opacity\": true,\n\t\t\"order\": true,\n\t\t\"orphans\": true,\n\t\t\"widows\": true,\n\t\t\"zIndex\": true,\n\t\t\"zoom\": true\n\t},\n\n\t// Add in properties whose names you wish to fix before\n\t// setting or getting the value\n\tcssProps: {\n\t\t// normalize float css property\n\t\t\"float\": \"cssFloat\"\n\t},\n\n\t// Get and set the style property on a DOM Node\n\tstyle: function( elem, name, value, extra ) {\n\t\t// Don't set styles on text and comment nodes\n\t\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Make sure that we're working with the right name\n\t\tvar ret, type, hooks,\n\t\t\torigName = jQuery.camelCase( name ),\n\t\t\tstyle = elem.style;\n\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// Check if we're setting a value\n\t\tif ( value !== undefined ) {\n\t\t\ttype = typeof value;\n\n\t\t\t// convert relative number strings (+= or -=) to relative numbers. #7345\n\t\t\tif ( type === \"string\" && (ret = rrelNum.exec( value )) ) {\n\t\t\t\tvalue = ( ret[1] + 1 ) * ret[2] + parseFloat( jQuery.css( elem, name ) );\n\t\t\t\t// Fixes bug #9237\n\t\t\t\ttype = \"number\";\n\t\t\t}\n\n\t\t\t// Make sure that null and NaN values aren't set. See: #7116\n\t\t\tif ( value == null || value !== value ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If a number was passed in, add 'px' to the (except for certain CSS properties)\n\t\t\tif ( type === \"number\" && !jQuery.cssNumber[ origName ] ) {\n\t\t\t\tvalue += \"px\";\n\t\t\t}\n\n\t\t\t// Fixes #8908, it can be done more correctly by specifying setters in cssHooks,\n\t\t\t// but it would mean to define eight (for every problematic property) identical functions\n\t\t\tif ( !support.clearCloneStyle && value === \"\" && name.indexOf( \"background\" ) === 0 ) {\n\t\t\t\tstyle[ name ] = \"inherit\";\n\t\t\t}\n\n\t\t\t// If a hook was provided, use that value, otherwise just set the specified value\n\t\t\tif ( !hooks || !(\"set\" in hooks) || (value = hooks.set( elem, value, extra )) !== undefined ) {\n\t\t\t\tstyle[ name ] = value;\n\t\t\t}\n\n\t\t} else {\n\t\t\t// If a hook was provided get the non-computed value from there\n\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, false, extra )) !== undefined ) {\n\t\t\t\treturn ret;\n\t\t\t}\n\n\t\t\t// Otherwise just get the value from the style object\n\t\t\treturn style[ name ];\n\t\t}\n\t},\n\n\tcss: function( elem, name, extra, styles ) {\n\t\tvar val, num, hooks,\n\t\t\torigName = jQuery.camelCase( name );\n\n\t\t// Make sure that we're working with the right name\n\t\tname = jQuery.cssProps[ origName ] || ( jQuery.cssProps[ origName ] = vendorPropName( elem.style, origName ) );\n\n\t\t// gets hook for the prefixed version\n\t\t// followed by the unprefixed version\n\t\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\n\n\t\t// If a hook was provided get the computed value from there\n\t\tif ( hooks && \"get\" in hooks ) {\n\t\t\tval = hooks.get( elem, true, extra );\n\t\t}\n\n\t\t// Otherwise, if a way to get the computed value exists, use that\n\t\tif ( val === undefined ) {\n\t\t\tval = curCSS( elem, name, styles );\n\t\t}\n\n\t\t//convert \"normal\" to computed value\n\t\tif ( val === \"normal\" && name in cssNormalTransform ) {\n\t\t\tval = cssNormalTransform[ name ];\n\t\t}\n\n\t\t// Return, converting to number if forced or a qualifier was provided and val looks numeric\n\t\tif ( extra === \"\" || extra ) {\n\t\t\tnum = parseFloat( val );\n\t\t\treturn extra === true || jQuery.isNumeric( num ) ? num || 0 : val;\n\t\t}\n\t\treturn val;\n\t}\n});\n\njQuery.each([ \"height\", \"width\" ], function( i, name ) {\n\tjQuery.cssHooks[ name ] = {\n\t\tget: function( elem, computed, extra ) {\n\t\t\tif ( computed ) {\n\t\t\t\t// certain elements can have dimension info if we invisibly show them\n\t\t\t\t// however, it must have a current display style that would benefit from this\n\t\t\t\treturn rdisplayswap.test( jQuery.css( elem, \"display\" ) ) && elem.offsetWidth === 0 ?\n\t\t\t\t\tjQuery.swap( elem, cssShow, function() {\n\t\t\t\t\t\treturn getWidthOrHeight( elem, name, extra );\n\t\t\t\t\t}) :\n\t\t\t\t\tgetWidthOrHeight( elem, name, extra );\n\t\t\t}\n\t\t},\n\n\t\tset: function( elem, value, extra ) {\n\t\t\tvar styles = extra && getStyles( elem );\n\t\t\treturn setPositiveNumber( elem, value, extra ?\n\t\t\t\taugmentWidthOrHeight(\n\t\t\t\t\telem,\n\t\t\t\t\tname,\n\t\t\t\t\textra,\n\t\t\t\t\tjQuery.css( elem, \"boxSizing\", false, styles ) === \"border-box\",\n\t\t\t\t\tstyles\n\t\t\t\t) : 0\n\t\t\t);\n\t\t}\n\t};\n});\n\n// Support: Android 2.3\njQuery.cssHooks.marginRight = addGetHookIf( support.reliableMarginRight,\n\tfunction( elem, computed ) {\n\t\tif ( computed ) {\n\t\t\t// WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\n\t\t\t// Work around by temporarily setting element display to inline-block\n\t\t\treturn jQuery.swap( elem, { \"display\": \"inline-block\" },\n\t\t\t\tcurCSS, [ elem, \"marginRight\" ] );\n\t\t}\n\t}\n);\n\n// These hooks are used by animate to expand properties\njQuery.each({\n\tmargin: \"\",\n\tpadding: \"\",\n\tborder: \"Width\"\n}, function( prefix, suffix ) {\n\tjQuery.cssHooks[ prefix + suffix ] = {\n\t\texpand: function( value ) {\n\t\t\tvar i = 0,\n\t\t\t\texpanded = {},\n\n\t\t\t\t// assumes a single number if not a string\n\t\t\t\tparts = typeof value === \"string\" ? value.split(\" \") : [ value ];\n\n\t\t\tfor ( ; i < 4; i++ ) {\n\t\t\t\texpanded[ prefix + cssExpand[ i ] + suffix ] =\n\t\t\t\t\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\n\t\t\t}\n\n\t\t\treturn expanded;\n\t\t}\n\t};\n\n\tif ( !rmargin.test( prefix ) ) {\n\t\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\n\t}\n});\n\njQuery.fn.extend({\n\tcss: function( name, value ) {\n\t\treturn access( this, function( elem, name, value ) {\n\t\t\tvar styles, len,\n\t\t\t\tmap = {},\n\t\t\t\ti = 0;\n\n\t\t\tif ( jQuery.isArray( name ) ) {\n\t\t\t\tstyles = getStyles( elem );\n\t\t\t\tlen = name.length;\n\n\t\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\t\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\n\t\t\t\t}\n\n\t\t\t\treturn map;\n\t\t\t}\n\n\t\t\treturn value !== undefined ?\n\t\t\t\tjQuery.style( elem, name, value ) :\n\t\t\t\tjQuery.css( elem, name );\n\t\t}, name, value, arguments.length > 1 );\n\t},\n\tshow: function() {\n\t\treturn showHide( this, true );\n\t},\n\thide: function() {\n\t\treturn showHide( this );\n\t},\n\ttoggle: function( state ) {\n\t\tif ( typeof state === \"boolean\" ) {\n\t\t\treturn state ? this.show() : this.hide();\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( isHidden( this ) ) {\n\t\t\t\tjQuery( this ).show();\n\t\t\t} else {\n\t\t\t\tjQuery( this ).hide();\n\t\t\t}\n\t\t});\n\t}\n});\n\n\nfunction Tween( elem, options, prop, end, easing ) {\n\treturn new Tween.prototype.init( elem, options, prop, end, easing );\n}\njQuery.Tween = Tween;\n\nTween.prototype = {\n\tconstructor: Tween,\n\tinit: function( elem, options, prop, end, easing, unit ) {\n\t\tthis.elem = elem;\n\t\tthis.prop = prop;\n\t\tthis.easing = easing || \"swing\";\n\t\tthis.options = options;\n\t\tthis.start = this.now = this.cur();\n\t\tthis.end = end;\n\t\tthis.unit = unit || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" );\n\t},\n\tcur: function() {\n\t\tvar hooks = Tween.propHooks[ this.prop ];\n\n\t\treturn hooks && hooks.get ?\n\t\t\thooks.get( this ) :\n\t\t\tTween.propHooks._default.get( this );\n\t},\n\trun: function( percent ) {\n\t\tvar eased,\n\t\t\thooks = Tween.propHooks[ this.prop ];\n\n\t\tif ( this.options.duration ) {\n\t\t\tthis.pos = eased = jQuery.easing[ this.easing ](\n\t\t\t\tpercent, this.options.duration * percent, 0, 1, this.options.duration\n\t\t\t);\n\t\t} else {\n\t\t\tthis.pos = eased = percent;\n\t\t}\n\t\tthis.now = ( this.end - this.start ) * eased + this.start;\n\n\t\tif ( this.options.step ) {\n\t\t\tthis.options.step.call( this.elem, this.now, this );\n\t\t}\n\n\t\tif ( hooks && hooks.set ) {\n\t\t\thooks.set( this );\n\t\t} else {\n\t\t\tTween.propHooks._default.set( this );\n\t\t}\n\t\treturn this;\n\t}\n};\n\nTween.prototype.init.prototype = Tween.prototype;\n\nTween.propHooks = {\n\t_default: {\n\t\tget: function( tween ) {\n\t\t\tvar result;\n\n\t\t\tif ( tween.elem[ tween.prop ] != null &&\n\t\t\t\t(!tween.elem.style || tween.elem.style[ tween.prop ] == null) ) {\n\t\t\t\treturn tween.elem[ tween.prop ];\n\t\t\t}\n\n\t\t\t// passing an empty string as a 3rd parameter to .css will automatically\n\t\t\t// attempt a parseFloat and fallback to a string if the parse fails\n\t\t\t// so, simple values such as \"10px\" are parsed to Float.\n\t\t\t// complex values such as \"rotate(1rad)\" are returned as is.\n\t\t\tresult = jQuery.css( tween.elem, tween.prop, \"\" );\n\t\t\t// Empty strings, null, undefined and \"auto\" are converted to 0.\n\t\t\treturn !result || result === \"auto\" ? 0 : result;\n\t\t},\n\t\tset: function( tween ) {\n\t\t\t// use step hook for back compat - use cssHook if its there - use .style if its\n\t\t\t// available and use plain properties where available\n\t\t\tif ( jQuery.fx.step[ tween.prop ] ) {\n\t\t\t\tjQuery.fx.step[ tween.prop ]( tween );\n\t\t\t} else if ( tween.elem.style && ( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null || jQuery.cssHooks[ tween.prop ] ) ) {\n\t\t\t\tjQuery.style( tween.elem, tween.prop, tween.now + tween.unit );\n\t\t\t} else {\n\t\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t\t}\n\t\t}\n\t}\n};\n\n// Support: IE9\n// Panic based approach to setting things on disconnected nodes\n\nTween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\n\tset: function( tween ) {\n\t\tif ( tween.elem.nodeType && tween.elem.parentNode ) {\n\t\t\ttween.elem[ tween.prop ] = tween.now;\n\t\t}\n\t}\n};\n\njQuery.easing = {\n\tlinear: function( p ) {\n\t\treturn p;\n\t},\n\tswing: function( p ) {\n\t\treturn 0.5 - Math.cos( p * Math.PI ) / 2;\n\t}\n};\n\njQuery.fx = Tween.prototype.init;\n\n// Back Compat <1.8 extension point\njQuery.fx.step = {};\n\n\n\n\nvar\n\tfxNow, timerId,\n\trfxtypes = /^(?:toggle|show|hide)$/,\n\trfxnum = new RegExp( \"^(?:([+-])=|)(\" + pnum + \")([a-z%]*)$\", \"i\" ),\n\trrun = /queueHooks$/,\n\tanimationPrefilters = [ defaultPrefilter ],\n\ttweeners = {\n\t\t\"*\": [ function( prop, value ) {\n\t\t\tvar tween = this.createTween( prop, value ),\n\t\t\t\ttarget = tween.cur(),\n\t\t\t\tparts = rfxnum.exec( value ),\n\t\t\t\tunit = parts && parts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \"\" : \"px\" ),\n\n\t\t\t\t// Starting value computation is required for potential unit mismatches\n\t\t\t\tstart = ( jQuery.cssNumber[ prop ] || unit !== \"px\" && +target ) &&\n\t\t\t\t\trfxnum.exec( jQuery.css( tween.elem, prop ) ),\n\t\t\t\tscale = 1,\n\t\t\t\tmaxIterations = 20;\n\n\t\t\tif ( start && start[ 3 ] !== unit ) {\n\t\t\t\t// Trust units reported by jQuery.css\n\t\t\t\tunit = unit || start[ 3 ];\n\n\t\t\t\t// Make sure we update the tween properties later on\n\t\t\t\tparts = parts || [];\n\n\t\t\t\t// Iteratively approximate from a nonzero starting point\n\t\t\t\tstart = +target || 1;\n\n\t\t\t\tdo {\n\t\t\t\t\t// If previous iteration zeroed out, double until we get *something*\n\t\t\t\t\t// Use a string for doubling factor so we don't accidentally see scale as unchanged below\n\t\t\t\t\tscale = scale || \".5\";\n\n\t\t\t\t\t// Adjust and apply\n\t\t\t\t\tstart = start / scale;\n\t\t\t\t\tjQuery.style( tween.elem, prop, start + unit );\n\n\t\t\t\t// Update scale, tolerating zero or NaN from tween.cur()\n\t\t\t\t// And breaking the loop if scale is unchanged or perfect, or if we've just had enough\n\t\t\t\t} while ( scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations );\n\t\t\t}\n\n\t\t\t// Update tween properties\n\t\t\tif ( parts ) {\n\t\t\t\tstart = tween.start = +start || +target || 0;\n\t\t\t\ttween.unit = unit;\n\t\t\t\t// If a +=/-= token was provided, we're doing a relative animation\n\t\t\t\ttween.end = parts[ 1 ] ?\n\t\t\t\t\tstart + ( parts[ 1 ] + 1 ) * parts[ 2 ] :\n\t\t\t\t\t+parts[ 2 ];\n\t\t\t}\n\n\t\t\treturn tween;\n\t\t} ]\n\t};\n\n// Animations created synchronously will run synchronously\nfunction createFxNow() {\n\tsetTimeout(function() {\n\t\tfxNow = undefined;\n\t});\n\treturn ( fxNow = jQuery.now() );\n}\n\n// Generate parameters to create a standard animation\nfunction genFx( type, includeWidth ) {\n\tvar which,\n\t\ti = 0,\n\t\tattrs = { height: type };\n\n\t// if we include width, step value is 1 to do all cssExpand values,\n\t// if we don't include width, step value is 2 to skip over Left and Right\n\tincludeWidth = includeWidth ? 1 : 0;\n\tfor ( ; i < 4 ; i += 2 - includeWidth ) {\n\t\twhich = cssExpand[ i ];\n\t\tattrs[ \"margin\" + which ] = attrs[ \"padding\" + which ] = type;\n\t}\n\n\tif ( includeWidth ) {\n\t\tattrs.opacity = attrs.width = type;\n\t}\n\n\treturn attrs;\n}\n\nfunction createTween( value, prop, animation ) {\n\tvar tween,\n\t\tcollection = ( tweeners[ prop ] || [] ).concat( tweeners[ \"*\" ] ),\n\t\tindex = 0,\n\t\tlength = collection.length;\n\tfor ( ; index < length; index++ ) {\n\t\tif ( (tween = collection[ index ].call( animation, prop, value )) ) {\n\n\t\t\t// we're done with this property\n\t\t\treturn tween;\n\t\t}\n\t}\n}\n\nfunction defaultPrefilter( elem, props, opts ) {\n\t/* jshint validthis: true */\n\tvar prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\n\t\tanim = this,\n\t\torig = {},\n\t\tstyle = elem.style,\n\t\thidden = elem.nodeType && isHidden( elem ),\n\t\tdataShow = data_priv.get( elem, \"fxshow\" );\n\n\t// handle queue: false promises\n\tif ( !opts.queue ) {\n\t\thooks = jQuery._queueHooks( elem, \"fx\" );\n\t\tif ( hooks.unqueued == null ) {\n\t\t\thooks.unqueued = 0;\n\t\t\toldfire = hooks.empty.fire;\n\t\t\thooks.empty.fire = function() {\n\t\t\t\tif ( !hooks.unqueued ) {\n\t\t\t\t\toldfire();\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\thooks.unqueued++;\n\n\t\tanim.always(function() {\n\t\t\t// doing this makes sure that the complete handler will be called\n\t\t\t// before this completes\n\t\t\tanim.always(function() {\n\t\t\t\thooks.unqueued--;\n\t\t\t\tif ( !jQuery.queue( elem, \"fx\" ).length ) {\n\t\t\t\t\thooks.empty.fire();\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t// height/width overflow pass\n\tif ( elem.nodeType === 1 && ( \"height\" in props || \"width\" in props ) ) {\n\t\t// Make sure that nothing sneaks out\n\t\t// Record all 3 overflow attributes because IE9-10 do not\n\t\t// change the overflow attribute when overflowX and\n\t\t// overflowY are set to the same value\n\t\topts.overflow = [ style.overflow, style.overflowX, style.overflowY ];\n\n\t\t// Set display property to inline-block for height/width\n\t\t// animations on inline elements that are having width/height animated\n\t\tdisplay = jQuery.css( elem, \"display\" );\n\n\t\t// Test default display if display is currently \"none\"\n\t\tcheckDisplay = display === \"none\" ?\n\t\t\tdata_priv.get( elem, \"olddisplay\" ) || defaultDisplay( elem.nodeName ) : display;\n\n\t\tif ( checkDisplay === \"inline\" && jQuery.css( elem, \"float\" ) === \"none\" ) {\n\t\t\tstyle.display = \"inline-block\";\n\t\t}\n\t}\n\n\tif ( opts.overflow ) {\n\t\tstyle.overflow = \"hidden\";\n\t\tanim.always(function() {\n\t\t\tstyle.overflow = opts.overflow[ 0 ];\n\t\t\tstyle.overflowX = opts.overflow[ 1 ];\n\t\t\tstyle.overflowY = opts.overflow[ 2 ];\n\t\t});\n\t}\n\n\t// show/hide pass\n\tfor ( prop in props ) {\n\t\tvalue = props[ prop ];\n\t\tif ( rfxtypes.exec( value ) ) {\n\t\t\tdelete props[ prop ];\n\t\t\ttoggle = toggle || value === \"toggle\";\n\t\t\tif ( value === ( hidden ? \"hide\" : \"show\" ) ) {\n\n\t\t\t\t// If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\n\t\t\t\tif ( value === \"show\" && dataShow && dataShow[ prop ] !== undefined ) {\n\t\t\t\t\thidden = true;\n\t\t\t\t} else {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\t\t\torig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );\n\n\t\t// Any non-fx value stops us from restoring the original display value\n\t\t} else {\n\t\t\tdisplay = undefined;\n\t\t}\n\t}\n\n\tif ( !jQuery.isEmptyObject( orig ) ) {\n\t\tif ( dataShow ) {\n\t\t\tif ( \"hidden\" in dataShow ) {\n\t\t\t\thidden = dataShow.hidden;\n\t\t\t}\n\t\t} else {\n\t\t\tdataShow = data_priv.access( elem, \"fxshow\", {} );\n\t\t}\n\n\t\t// store state if its toggle - enables .stop().toggle() to \"reverse\"\n\t\tif ( toggle ) {\n\t\t\tdataShow.hidden = !hidden;\n\t\t}\n\t\tif ( hidden ) {\n\t\t\tjQuery( elem ).show();\n\t\t} else {\n\t\t\tanim.done(function() {\n\t\t\t\tjQuery( elem ).hide();\n\t\t\t});\n\t\t}\n\t\tanim.done(function() {\n\t\t\tvar prop;\n\n\t\t\tdata_priv.remove( elem, \"fxshow\" );\n\t\t\tfor ( prop in orig ) {\n\t\t\t\tjQuery.style( elem, prop, orig[ prop ] );\n\t\t\t}\n\t\t});\n\t\tfor ( prop in orig ) {\n\t\t\ttween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );\n\n\t\t\tif ( !( prop in dataShow ) ) {\n\t\t\t\tdataShow[ prop ] = tween.start;\n\t\t\t\tif ( hidden ) {\n\t\t\t\t\ttween.end = tween.start;\n\t\t\t\t\ttween.start = prop === \"width\" || prop === \"height\" ? 1 : 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t// If this is a noop like .hide().hide(), restore an overwritten display value\n\t} else if ( (display === \"none\" ? defaultDisplay( elem.nodeName ) : display) === \"inline\" ) {\n\t\tstyle.display = display;\n\t}\n}\n\nfunction propFilter( props, specialEasing ) {\n\tvar index, name, easing, value, hooks;\n\n\t// camelCase, specialEasing and expand cssHook pass\n\tfor ( index in props ) {\n\t\tname = jQuery.camelCase( index );\n\t\teasing = specialEasing[ name ];\n\t\tvalue = props[ index ];\n\t\tif ( jQuery.isArray( value ) ) {\n\t\t\teasing = value[ 1 ];\n\t\t\tvalue = props[ index ] = value[ 0 ];\n\t\t}\n\n\t\tif ( index !== name ) {\n\t\t\tprops[ name ] = value;\n\t\t\tdelete props[ index ];\n\t\t}\n\n\t\thooks = jQuery.cssHooks[ name ];\n\t\tif ( hooks && \"expand\" in hooks ) {\n\t\t\tvalue = hooks.expand( value );\n\t\t\tdelete props[ name ];\n\n\t\t\t// not quite $.extend, this wont overwrite keys already present.\n\t\t\t// also - reusing 'index' from above because we have the correct \"name\"\n\t\t\tfor ( index in value ) {\n\t\t\t\tif ( !( index in props ) ) {\n\t\t\t\t\tprops[ index ] = value[ index ];\n\t\t\t\t\tspecialEasing[ index ] = easing;\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tspecialEasing[ name ] = easing;\n\t\t}\n\t}\n}\n\nfunction Animation( elem, properties, options ) {\n\tvar result,\n\t\tstopped,\n\t\tindex = 0,\n\t\tlength = animationPrefilters.length,\n\t\tdeferred = jQuery.Deferred().always( function() {\n\t\t\t// don't match elem in the :animated selector\n\t\t\tdelete tick.elem;\n\t\t}),\n\t\ttick = function() {\n\t\t\tif ( stopped ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tvar currentTime = fxNow || createFxNow(),\n\t\t\t\tremaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),\n\t\t\t\t// archaic crash bug won't allow us to use 1 - ( 0.5 || 0 ) (#12497)\n\t\t\t\ttemp = remaining / animation.duration || 0,\n\t\t\t\tpercent = 1 - temp,\n\t\t\t\tindex = 0,\n\t\t\t\tlength = animation.tweens.length;\n\n\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\tanimation.tweens[ index ].run( percent );\n\t\t\t}\n\n\t\t\tdeferred.notifyWith( elem, [ animation, percent, remaining ]);\n\n\t\t\tif ( percent < 1 && length ) {\n\t\t\t\treturn remaining;\n\t\t\t} else {\n\t\t\t\tdeferred.resolveWith( elem, [ animation ] );\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\tanimation = deferred.promise({\n\t\t\telem: elem,\n\t\t\tprops: jQuery.extend( {}, properties ),\n\t\t\topts: jQuery.extend( true, { specialEasing: {} }, options ),\n\t\t\toriginalProperties: properties,\n\t\t\toriginalOptions: options,\n\t\t\tstartTime: fxNow || createFxNow(),\n\t\t\tduration: options.duration,\n\t\t\ttweens: [],\n\t\t\tcreateTween: function( prop, end ) {\n\t\t\t\tvar tween = jQuery.Tween( elem, animation.opts, prop, end,\n\t\t\t\t\t\tanimation.opts.specialEasing[ prop ] || animation.opts.easing );\n\t\t\t\tanimation.tweens.push( tween );\n\t\t\t\treturn tween;\n\t\t\t},\n\t\t\tstop: function( gotoEnd ) {\n\t\t\t\tvar index = 0,\n\t\t\t\t\t// if we are going to the end, we want to run all the tweens\n\t\t\t\t\t// otherwise we skip this part\n\t\t\t\t\tlength = gotoEnd ? animation.tweens.length : 0;\n\t\t\t\tif ( stopped ) {\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t\tstopped = true;\n\t\t\t\tfor ( ; index < length ; index++ ) {\n\t\t\t\t\tanimation.tweens[ index ].run( 1 );\n\t\t\t\t}\n\n\t\t\t\t// resolve when we played the last frame\n\t\t\t\t// otherwise, reject\n\t\t\t\tif ( gotoEnd ) {\n\t\t\t\t\tdeferred.resolveWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t} else {\n\t\t\t\t\tdeferred.rejectWith( elem, [ animation, gotoEnd ] );\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}),\n\t\tprops = animation.props;\n\n\tpropFilter( props, animation.opts.specialEasing );\n\n\tfor ( ; index < length ; index++ ) {\n\t\tresult = animationPrefilters[ index ].call( animation, elem, props, animation.opts );\n\t\tif ( result ) {\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tjQuery.map( props, createTween, animation );\n\n\tif ( jQuery.isFunction( animation.opts.start ) ) {\n\t\tanimation.opts.start.call( elem, animation );\n\t}\n\n\tjQuery.fx.timer(\n\t\tjQuery.extend( tick, {\n\t\t\telem: elem,\n\t\t\tanim: animation,\n\t\t\tqueue: animation.opts.queue\n\t\t})\n\t);\n\n\t// attach callbacks from options\n\treturn animation.progress( animation.opts.progress )\n\t\t.done( animation.opts.done, animation.opts.complete )\n\t\t.fail( animation.opts.fail )\n\t\t.always( animation.opts.always );\n}\n\njQuery.Animation = jQuery.extend( Animation, {\n\n\ttweener: function( props, callback ) {\n\t\tif ( jQuery.isFunction( props ) ) {\n\t\t\tcallback = props;\n\t\t\tprops = [ \"*\" ];\n\t\t} else {\n\t\t\tprops = props.split(\" \");\n\t\t}\n\n\t\tvar prop,\n\t\t\tindex = 0,\n\t\t\tlength = props.length;\n\n\t\tfor ( ; index < length ; index++ ) {\n\t\t\tprop = props[ index ];\n\t\t\ttweeners[ prop ] = tweeners[ prop ] || [];\n\t\t\ttweeners[ prop ].unshift( callback );\n\t\t}\n\t},\n\n\tprefilter: function( callback, prepend ) {\n\t\tif ( prepend ) {\n\t\t\tanimationPrefilters.unshift( callback );\n\t\t} else {\n\t\t\tanimationPrefilters.push( callback );\n\t\t}\n\t}\n});\n\njQuery.speed = function( speed, easing, fn ) {\n\tvar opt = speed && typeof speed === \"object\" ? jQuery.extend( {}, speed ) : {\n\t\tcomplete: fn || !fn && easing ||\n\t\t\tjQuery.isFunction( speed ) && speed,\n\t\tduration: speed,\n\t\teasing: fn && easing || easing && !jQuery.isFunction( easing ) && easing\n\t};\n\n\topt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \"number\" ? opt.duration :\n\t\topt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[ opt.duration ] : jQuery.fx.speeds._default;\n\n\t// normalize opt.queue - true/undefined/null -> \"fx\"\n\tif ( opt.queue == null || opt.queue === true ) {\n\t\topt.queue = \"fx\";\n\t}\n\n\t// Queueing\n\topt.old = opt.complete;\n\n\topt.complete = function() {\n\t\tif ( jQuery.isFunction( opt.old ) ) {\n\t\t\topt.old.call( this );\n\t\t}\n\n\t\tif ( opt.queue ) {\n\t\t\tjQuery.dequeue( this, opt.queue );\n\t\t}\n\t};\n\n\treturn opt;\n};\n\njQuery.fn.extend({\n\tfadeTo: function( speed, to, easing, callback ) {\n\n\t\t// show any hidden elements after setting opacity to 0\n\t\treturn this.filter( isHidden ).css( \"opacity\", 0 ).show()\n\n\t\t\t// animate to the value specified\n\t\t\t.end().animate({ opacity: to }, speed, easing, callback );\n\t},\n\tanimate: function( prop, speed, easing, callback ) {\n\t\tvar empty = jQuery.isEmptyObject( prop ),\n\t\t\toptall = jQuery.speed( speed, easing, callback ),\n\t\t\tdoAnimation = function() {\n\t\t\t\t// Operate on a copy of prop so per-property easing won't be lost\n\t\t\t\tvar anim = Animation( this, jQuery.extend( {}, prop ), optall );\n\n\t\t\t\t// Empty animations, or finishing resolves immediately\n\t\t\t\tif ( empty || data_priv.get( this, \"finish\" ) ) {\n\t\t\t\t\tanim.stop( true );\n\t\t\t\t}\n\t\t\t};\n\t\t\tdoAnimation.finish = doAnimation;\n\n\t\treturn empty || optall.queue === false ?\n\t\t\tthis.each( doAnimation ) :\n\t\t\tthis.queue( optall.queue, doAnimation );\n\t},\n\tstop: function( type, clearQueue, gotoEnd ) {\n\t\tvar stopQueue = function( hooks ) {\n\t\t\tvar stop = hooks.stop;\n\t\t\tdelete hooks.stop;\n\t\t\tstop( gotoEnd );\n\t\t};\n\n\t\tif ( typeof type !== \"string\" ) {\n\t\t\tgotoEnd = clearQueue;\n\t\t\tclearQueue = type;\n\t\t\ttype = undefined;\n\t\t}\n\t\tif ( clearQueue && type !== false ) {\n\t\t\tthis.queue( type || \"fx\", [] );\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar dequeue = true,\n\t\t\t\tindex = type != null && type + \"queueHooks\",\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tdata = data_priv.get( this );\n\n\t\t\tif ( index ) {\n\t\t\t\tif ( data[ index ] && data[ index ].stop ) {\n\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( index in data ) {\n\t\t\t\t\tif ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {\n\t\t\t\t\t\tstopQueue( data[ index ] );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && (type == null || timers[ index ].queue === type) ) {\n\t\t\t\t\ttimers[ index ].anim.stop( gotoEnd );\n\t\t\t\t\tdequeue = false;\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// start the next in the queue if the last step wasn't forced\n\t\t\t// timers currently will call their complete callbacks, which will dequeue\n\t\t\t// but only if they were gotoEnd\n\t\t\tif ( dequeue || !gotoEnd ) {\n\t\t\t\tjQuery.dequeue( this, type );\n\t\t\t}\n\t\t});\n\t},\n\tfinish: function( type ) {\n\t\tif ( type !== false ) {\n\t\t\ttype = type || \"fx\";\n\t\t}\n\t\treturn this.each(function() {\n\t\t\tvar index,\n\t\t\t\tdata = data_priv.get( this ),\n\t\t\t\tqueue = data[ type + \"queue\" ],\n\t\t\t\thooks = data[ type + \"queueHooks\" ],\n\t\t\t\ttimers = jQuery.timers,\n\t\t\t\tlength = queue ? queue.length : 0;\n\n\t\t\t// enable finishing flag on private data\n\t\t\tdata.finish = true;\n\n\t\t\t// empty the queue first\n\t\t\tjQuery.queue( this, type, [] );\n\n\t\t\tif ( hooks && hooks.stop ) {\n\t\t\t\thooks.stop.call( this, true );\n\t\t\t}\n\n\t\t\t// look for any active animations, and finish them\n\t\t\tfor ( index = timers.length; index--; ) {\n\t\t\t\tif ( timers[ index ].elem === this && timers[ index ].queue === type ) {\n\t\t\t\t\ttimers[ index ].anim.stop( true );\n\t\t\t\t\ttimers.splice( index, 1 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// look for any animations in the old queue and finish them\n\t\t\tfor ( index = 0; index < length; index++ ) {\n\t\t\t\tif ( queue[ index ] && queue[ index ].finish ) {\n\t\t\t\t\tqueue[ index ].finish.call( this );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// turn off finishing flag\n\t\t\tdelete data.finish;\n\t\t});\n\t}\n});\n\njQuery.each([ \"toggle\", \"show\", \"hide\" ], function( i, name ) {\n\tvar cssFn = jQuery.fn[ name ];\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn speed == null || typeof speed === \"boolean\" ?\n\t\t\tcssFn.apply( this, arguments ) :\n\t\t\tthis.animate( genFx( name, true ), speed, easing, callback );\n\t};\n});\n\n// Generate shortcuts for custom animations\njQuery.each({\n\tslideDown: genFx(\"show\"),\n\tslideUp: genFx(\"hide\"),\n\tslideToggle: genFx(\"toggle\"),\n\tfadeIn: { opacity: \"show\" },\n\tfadeOut: { opacity: \"hide\" },\n\tfadeToggle: { opacity: \"toggle\" }\n}, function( name, props ) {\n\tjQuery.fn[ name ] = function( speed, easing, callback ) {\n\t\treturn this.animate( props, speed, easing, callback );\n\t};\n});\n\njQuery.timers = [];\njQuery.fx.tick = function() {\n\tvar timer,\n\t\ti = 0,\n\t\ttimers = jQuery.timers;\n\n\tfxNow = jQuery.now();\n\n\tfor ( ; i < timers.length; i++ ) {\n\t\ttimer = timers[ i ];\n\t\t// Checks the timer has not already been removed\n\t\tif ( !timer() && timers[ i ] === timer ) {\n\t\t\ttimers.splice( i--, 1 );\n\t\t}\n\t}\n\n\tif ( !timers.length ) {\n\t\tjQuery.fx.stop();\n\t}\n\tfxNow = undefined;\n};\n\njQuery.fx.timer = function( timer ) {\n\tjQuery.timers.push( timer );\n\tif ( timer() ) {\n\t\tjQuery.fx.start();\n\t} else {\n\t\tjQuery.timers.pop();\n\t}\n};\n\njQuery.fx.interval = 13;\n\njQuery.fx.start = function() {\n\tif ( !timerId ) {\n\t\ttimerId = setInterval( jQuery.fx.tick, jQuery.fx.interval );\n\t}\n};\n\njQuery.fx.stop = function() {\n\tclearInterval( timerId );\n\ttimerId = null;\n};\n\njQuery.fx.speeds = {\n\tslow: 600,\n\tfast: 200,\n\t// Default speed\n\t_default: 400\n};\n\n\n// Based off of the plugin by Clint Helfers, with permission.\n// http://blindsignals.com/index.php/2009/07/jquery-delay/\njQuery.fn.delay = function( time, type ) {\n\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\n\ttype = type || \"fx\";\n\n\treturn this.queue( type, function( next, hooks ) {\n\t\tvar timeout = setTimeout( next, time );\n\t\thooks.stop = function() {\n\t\t\tclearTimeout( timeout );\n\t\t};\n\t});\n};\n\n\n(function() {\n\tvar input = document.createElement( \"input\" ),\n\t\tselect = document.createElement( \"select\" ),\n\t\topt = select.appendChild( document.createElement( \"option\" ) );\n\n\tinput.type = \"checkbox\";\n\n\t// Support: iOS 5.1, Android 4.x, Android 2.3\n\t// Check the default checkbox/radio value (\"\" on old WebKit; \"on\" elsewhere)\n\tsupport.checkOn = input.value !== \"\";\n\n\t// Must access the parent to make an option select properly\n\t// Support: IE9, IE10\n\tsupport.optSelected = opt.selected;\n\n\t// Make sure that the options inside disabled selects aren't marked as disabled\n\t// (WebKit marks them as disabled)\n\tselect.disabled = true;\n\tsupport.optDisabled = !opt.disabled;\n\n\t// Check if an input maintains its value after becoming a radio\n\t// Support: IE9, IE10\n\tinput = document.createElement( \"input\" );\n\tinput.value = \"t\";\n\tinput.type = \"radio\";\n\tsupport.radioValue = input.value === \"t\";\n})();\n\n\nvar nodeHook, boolHook,\n\tattrHandle = jQuery.expr.attrHandle;\n\njQuery.fn.extend({\n\tattr: function( name, value ) {\n\t\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\n\t},\n\n\tremoveAttr: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tjQuery.removeAttr( this, name );\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tattr: function( elem, name, value ) {\n\t\tvar hooks, ret,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set attributes on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Fallback to prop when attributes are not supported\n\t\tif ( typeof elem.getAttribute === strundefined ) {\n\t\t\treturn jQuery.prop( elem, name, value );\n\t\t}\n\n\t\t// All attributes are lowercase\n\t\t// Grab necessary hook if one is defined\n\t\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\n\t\t\tname = name.toLowerCase();\n\t\t\thooks = jQuery.attrHooks[ name ] ||\n\t\t\t\t( jQuery.expr.match.bool.test( name ) ? boolHook : nodeHook );\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\n\t\t\tif ( value === null ) {\n\t\t\t\tjQuery.removeAttr( elem, name );\n\n\t\t\t} else if ( hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ) {\n\t\t\t\treturn ret;\n\n\t\t\t} else {\n\t\t\t\telem.setAttribute( name, value + \"\" );\n\t\t\t\treturn value;\n\t\t\t}\n\n\t\t} else if ( hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ) {\n\t\t\treturn ret;\n\n\t\t} else {\n\t\t\tret = jQuery.find.attr( elem, name );\n\n\t\t\t// Non-existent attributes return null, we normalize to undefined\n\t\t\treturn ret == null ?\n\t\t\t\tundefined :\n\t\t\t\tret;\n\t\t}\n\t},\n\n\tremoveAttr: function( elem, value ) {\n\t\tvar name, propName,\n\t\t\ti = 0,\n\t\t\tattrNames = value && value.match( rnotwhite );\n\n\t\tif ( attrNames && elem.nodeType === 1 ) {\n\t\t\twhile ( (name = attrNames[i++]) ) {\n\t\t\t\tpropName = jQuery.propFix[ name ] || name;\n\n\t\t\t\t// Boolean attributes get special treatment (#10870)\n\t\t\t\tif ( jQuery.expr.match.bool.test( name ) ) {\n\t\t\t\t\t// Set corresponding property to false\n\t\t\t\t\telem[ propName ] = false;\n\t\t\t\t}\n\n\t\t\t\telem.removeAttribute( name );\n\t\t\t}\n\t\t}\n\t},\n\n\tattrHooks: {\n\t\ttype: {\n\t\t\tset: function( elem, value ) {\n\t\t\t\tif ( !support.radioValue && value === \"radio\" &&\n\t\t\t\t\tjQuery.nodeName( elem, \"input\" ) ) {\n\t\t\t\t\t// Setting the type on a radio button after the value resets the value in IE6-9\n\t\t\t\t\t// Reset value to default in case type is set after value during creation\n\t\t\t\t\tvar val = elem.value;\n\t\t\t\t\telem.setAttribute( \"type\", value );\n\t\t\t\t\tif ( val ) {\n\t\t\t\t\t\telem.value = val;\n\t\t\t\t\t}\n\t\t\t\t\treturn value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Hooks for boolean attributes\nboolHook = {\n\tset: function( elem, value, name ) {\n\t\tif ( value === false ) {\n\t\t\t// Remove boolean attributes when set to false\n\t\t\tjQuery.removeAttr( elem, name );\n\t\t} else {\n\t\t\telem.setAttribute( name, name );\n\t\t}\n\t\treturn name;\n\t}\n};\njQuery.each( jQuery.expr.match.bool.source.match( /\\w+/g ), function( i, name ) {\n\tvar getter = attrHandle[ name ] || jQuery.find.attr;\n\n\tattrHandle[ name ] = function( elem, name, isXML ) {\n\t\tvar ret, handle;\n\t\tif ( !isXML ) {\n\t\t\t// Avoid an infinite loop by temporarily removing this function from the getter\n\t\t\thandle = attrHandle[ name ];\n\t\t\tattrHandle[ name ] = ret;\n\t\t\tret = getter( elem, name, isXML ) != null ?\n\t\t\t\tname.toLowerCase() :\n\t\t\t\tnull;\n\t\t\tattrHandle[ name ] = handle;\n\t\t}\n\t\treturn ret;\n\t};\n});\n\n\n\n\nvar rfocusable = /^(?:input|select|textarea|button)$/i;\n\njQuery.fn.extend({\n\tprop: function( name, value ) {\n\t\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\n\t},\n\n\tremoveProp: function( name ) {\n\t\treturn this.each(function() {\n\t\t\tdelete this[ jQuery.propFix[ name ] || name ];\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tpropFix: {\n\t\t\"for\": \"htmlFor\",\n\t\t\"class\": \"className\"\n\t},\n\n\tprop: function( elem, name, value ) {\n\t\tvar ret, hooks, notxml,\n\t\t\tnType = elem.nodeType;\n\n\t\t// don't get/set properties on text, comment and attribute nodes\n\t\tif ( !elem || nType === 3 || nType === 8 || nType === 2 ) {\n\t\t\treturn;\n\t\t}\n\n\t\tnotxml = nType !== 1 || !jQuery.isXMLDoc( elem );\n\n\t\tif ( notxml ) {\n\t\t\t// Fix name and attach hooks\n\t\t\tname = jQuery.propFix[ name ] || name;\n\t\t\thooks = jQuery.propHooks[ name ];\n\t\t}\n\n\t\tif ( value !== undefined ) {\n\t\t\treturn hooks && \"set\" in hooks && (ret = hooks.set( elem, value, name )) !== undefined ?\n\t\t\t\tret :\n\t\t\t\t( elem[ name ] = value );\n\n\t\t} else {\n\t\t\treturn hooks && \"get\" in hooks && (ret = hooks.get( elem, name )) !== null ?\n\t\t\t\tret :\n\t\t\t\telem[ name ];\n\t\t}\n\t},\n\n\tpropHooks: {\n\t\ttabIndex: {\n\t\t\tget: function( elem ) {\n\t\t\t\treturn elem.hasAttribute( \"tabindex\" ) || rfocusable.test( elem.nodeName ) || elem.href ?\n\t\t\t\t\telem.tabIndex :\n\t\t\t\t\t-1;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Support: IE9+\n// Selectedness for an option in an optgroup can be inaccurate\nif ( !support.optSelected ) {\n\tjQuery.propHooks.selected = {\n\t\tget: function( elem ) {\n\t\t\tvar parent = elem.parentNode;\n\t\t\tif ( parent && parent.parentNode ) {\n\t\t\t\tparent.parentNode.selectedIndex;\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t};\n}\n\njQuery.each([\n\t\"tabIndex\",\n\t\"readOnly\",\n\t\"maxLength\",\n\t\"cellSpacing\",\n\t\"cellPadding\",\n\t\"rowSpan\",\n\t\"colSpan\",\n\t\"useMap\",\n\t\"frameBorder\",\n\t\"contentEditable\"\n], function() {\n\tjQuery.propFix[ this.toLowerCase() ] = this;\n});\n\n\n\n\nvar rclass = /[\\t\\r\\n\\f]/g;\n\njQuery.fn.extend({\n\taddClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).addClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\n\t\tif ( proceed ) {\n\t\t\t// The disjunction here is for better compressibility (see removeClass)\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\" \"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\tif ( cur.indexOf( \" \" + clazz + \" \" ) < 0 ) {\n\t\t\t\t\t\t\tcur += clazz + \" \";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = jQuery.trim( cur );\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\tremoveClass: function( value ) {\n\t\tvar classes, elem, cur, clazz, j, finalValue,\n\t\t\tproceed = arguments.length === 0 || typeof value === \"string\" && value,\n\t\t\ti = 0,\n\t\t\tlen = this.length;\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( j ) {\n\t\t\t\tjQuery( this ).removeClass( value.call( this, j, this.className ) );\n\t\t\t});\n\t\t}\n\t\tif ( proceed ) {\n\t\t\tclasses = ( value || \"\" ).match( rnotwhite ) || [];\n\n\t\t\tfor ( ; i < len; i++ ) {\n\t\t\t\telem = this[ i ];\n\t\t\t\t// This expression is here for better compressibility (see addClass)\n\t\t\t\tcur = elem.nodeType === 1 && ( elem.className ?\n\t\t\t\t\t( \" \" + elem.className + \" \" ).replace( rclass, \" \" ) :\n\t\t\t\t\t\"\"\n\t\t\t\t);\n\n\t\t\t\tif ( cur ) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile ( (clazz = classes[j++]) ) {\n\t\t\t\t\t\t// Remove *all* instances\n\t\t\t\t\t\twhile ( cur.indexOf( \" \" + clazz + \" \" ) >= 0 ) {\n\t\t\t\t\t\t\tcur = cur.replace( \" \" + clazz + \" \", \" \" );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// only assign if different to avoid unneeded rendering.\n\t\t\t\t\tfinalValue = value ? jQuery.trim( cur ) : \"\";\n\t\t\t\t\tif ( elem.className !== finalValue ) {\n\t\t\t\t\t\telem.className = finalValue;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn this;\n\t},\n\n\ttoggleClass: function( value, stateVal ) {\n\t\tvar type = typeof value;\n\n\t\tif ( typeof stateVal === \"boolean\" && type === \"string\" ) {\n\t\t\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\n\t\t}\n\n\t\tif ( jQuery.isFunction( value ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).toggleClass( value.call(this, i, this.className, stateVal), stateVal );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tif ( type === \"string\" ) {\n\t\t\t\t// toggle individual class names\n\t\t\t\tvar className,\n\t\t\t\t\ti = 0,\n\t\t\t\t\tself = jQuery( this ),\n\t\t\t\t\tclassNames = value.match( rnotwhite ) || [];\n\n\t\t\t\twhile ( (className = classNames[ i++ ]) ) {\n\t\t\t\t\t// check each className given, space separated list\n\t\t\t\t\tif ( self.hasClass( className ) ) {\n\t\t\t\t\t\tself.removeClass( className );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tself.addClass( className );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t// Toggle whole class name\n\t\t\t} else if ( type === strundefined || type === \"boolean\" ) {\n\t\t\t\tif ( this.className ) {\n\t\t\t\t\t// store className if set\n\t\t\t\t\tdata_priv.set( this, \"__className__\", this.className );\n\t\t\t\t}\n\n\t\t\t\t// If the element has a class name or if we're passed \"false\",\n\t\t\t\t// then remove the whole classname (if there was one, the above saved it).\n\t\t\t\t// Otherwise bring back whatever was previously saved (if anything),\n\t\t\t\t// falling back to the empty string if nothing was stored.\n\t\t\t\tthis.className = this.className || value === false ? \"\" : data_priv.get( this, \"__className__\" ) || \"\";\n\t\t\t}\n\t\t});\n\t},\n\n\thasClass: function( selector ) {\n\t\tvar className = \" \" + selector + \" \",\n\t\t\ti = 0,\n\t\t\tl = this.length;\n\t\tfor ( ; i < l; i++ ) {\n\t\t\tif ( this[i].nodeType === 1 && (\" \" + this[i].className + \" \").replace(rclass, \" \").indexOf( className ) >= 0 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n});\n\n\n\n\nvar rreturn = /\\r/g;\n\njQuery.fn.extend({\n\tval: function( value ) {\n\t\tvar hooks, ret, isFunction,\n\t\t\telem = this[0];\n\n\t\tif ( !arguments.length ) {\n\t\t\tif ( elem ) {\n\t\t\t\thooks = jQuery.valHooks[ elem.type ] || jQuery.valHooks[ elem.nodeName.toLowerCase() ];\n\n\t\t\t\tif ( hooks && \"get\" in hooks && (ret = hooks.get( elem, \"value\" )) !== undefined ) {\n\t\t\t\t\treturn ret;\n\t\t\t\t}\n\n\t\t\t\tret = elem.value;\n\n\t\t\t\treturn typeof ret === \"string\" ?\n\t\t\t\t\t// handle most common string cases\n\t\t\t\t\tret.replace(rreturn, \"\") :\n\t\t\t\t\t// handle cases where value is null/undef or number\n\t\t\t\t\tret == null ? \"\" : ret;\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tisFunction = jQuery.isFunction( value );\n\n\t\treturn this.each(function( i ) {\n\t\t\tvar val;\n\n\t\t\tif ( this.nodeType !== 1 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( isFunction ) {\n\t\t\t\tval = value.call( this, i, jQuery( this ).val() );\n\t\t\t} else {\n\t\t\t\tval = value;\n\t\t\t}\n\n\t\t\t// Treat null/undefined as \"\"; convert numbers to string\n\t\t\tif ( val == null ) {\n\t\t\t\tval = \"\";\n\n\t\t\t} else if ( typeof val === \"number\" ) {\n\t\t\t\tval += \"\";\n\n\t\t\t} else if ( jQuery.isArray( val ) ) {\n\t\t\t\tval = jQuery.map( val, function( value ) {\n\t\t\t\t\treturn value == null ? \"\" : value + \"\";\n\t\t\t\t});\n\t\t\t}\n\n\t\t\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\n\n\t\t\t// If set returns undefined, fall back to normal setting\n\t\t\tif ( !hooks || !(\"set\" in hooks) || hooks.set( this, val, \"value\" ) === undefined ) {\n\t\t\t\tthis.value = val;\n\t\t\t}\n\t\t});\n\t}\n});\n\njQuery.extend({\n\tvalHooks: {\n\t\toption: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar val = jQuery.find.attr( elem, \"value\" );\n\t\t\t\treturn val != null ?\n\t\t\t\t\tval :\n\t\t\t\t\t// Support: IE10-11+\n\t\t\t\t\t// option.text throws exceptions (#14686, #14858)\n\t\t\t\t\tjQuery.trim( jQuery.text( elem ) );\n\t\t\t}\n\t\t},\n\t\tselect: {\n\t\t\tget: function( elem ) {\n\t\t\t\tvar value, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tindex = elem.selectedIndex,\n\t\t\t\t\tone = elem.type === \"select-one\" || index < 0,\n\t\t\t\t\tvalues = one ? null : [],\n\t\t\t\t\tmax = one ? index + 1 : options.length,\n\t\t\t\t\ti = index < 0 ?\n\t\t\t\t\t\tmax :\n\t\t\t\t\t\tone ? index : 0;\n\n\t\t\t\t// Loop through all the selected options\n\t\t\t\tfor ( ; i < max; i++ ) {\n\t\t\t\t\toption = options[ i ];\n\n\t\t\t\t\t// IE6-9 doesn't update selected after form reset (#2551)\n\t\t\t\t\tif ( ( option.selected || i === index ) &&\n\t\t\t\t\t\t\t// Don't return options that are disabled or in a disabled optgroup\n\t\t\t\t\t\t\t( support.optDisabled ? !option.disabled : option.getAttribute( \"disabled\" ) === null ) &&\n\t\t\t\t\t\t\t( !option.parentNode.disabled || !jQuery.nodeName( option.parentNode, \"optgroup\" ) ) ) {\n\n\t\t\t\t\t\t// Get the specific value for the option\n\t\t\t\t\t\tvalue = jQuery( option ).val();\n\n\t\t\t\t\t\t// We don't need an array for one selects\n\t\t\t\t\t\tif ( one ) {\n\t\t\t\t\t\t\treturn value;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Multi-Selects return an array\n\t\t\t\t\t\tvalues.push( value );\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t},\n\n\t\t\tset: function( elem, value ) {\n\t\t\t\tvar optionSet, option,\n\t\t\t\t\toptions = elem.options,\n\t\t\t\t\tvalues = jQuery.makeArray( value ),\n\t\t\t\t\ti = options.length;\n\n\t\t\t\twhile ( i-- ) {\n\t\t\t\t\toption = options[ i ];\n\t\t\t\t\tif ( (option.selected = jQuery.inArray( option.value, values ) >= 0) ) {\n\t\t\t\t\t\toptionSet = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// force browsers to behave consistently when non-matching value is set\n\t\t\t\tif ( !optionSet ) {\n\t\t\t\t\telem.selectedIndex = -1;\n\t\t\t\t}\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\t}\n});\n\n// Radios and checkboxes getter/setter\njQuery.each([ \"radio\", \"checkbox\" ], function() {\n\tjQuery.valHooks[ this ] = {\n\t\tset: function( elem, value ) {\n\t\t\tif ( jQuery.isArray( value ) ) {\n\t\t\t\treturn ( elem.checked = jQuery.inArray( jQuery(elem).val(), value ) >= 0 );\n\t\t\t}\n\t\t}\n\t};\n\tif ( !support.checkOn ) {\n\t\tjQuery.valHooks[ this ].get = function( elem ) {\n\t\t\t// Support: Webkit\n\t\t\t// \"\" is returned instead of \"on\" if a value isn't specified\n\t\t\treturn elem.getAttribute(\"value\") === null ? \"on\" : elem.value;\n\t\t};\n\t}\n});\n\n\n\n\n// Return jQuery for attributes-only inclusion\n\n\njQuery.each( (\"blur focus focusin focusout load resize scroll unload click dblclick \" +\n\t\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \" +\n\t\"change select submit keydown keypress keyup error contextmenu\").split(\" \"), function( i, name ) {\n\n\t// Handle event binding\n\tjQuery.fn[ name ] = function( data, fn ) {\n\t\treturn arguments.length > 0 ?\n\t\t\tthis.on( name, null, data, fn ) :\n\t\t\tthis.trigger( name );\n\t};\n});\n\njQuery.fn.extend({\n\thover: function( fnOver, fnOut ) {\n\t\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\n\t},\n\n\tbind: function( types, data, fn ) {\n\t\treturn this.on( types, null, data, fn );\n\t},\n\tunbind: function( types, fn ) {\n\t\treturn this.off( types, null, fn );\n\t},\n\n\tdelegate: function( selector, types, data, fn ) {\n\t\treturn this.on( types, selector, data, fn );\n\t},\n\tundelegate: function( selector, types, fn ) {\n\t\t// ( namespace ) or ( selector, types [, fn] )\n\t\treturn arguments.length === 1 ? this.off( selector, \"**\" ) : this.off( types, selector || \"**\", fn );\n\t}\n});\n\n\nvar nonce = jQuery.now();\n\nvar rquery = (/\\?/);\n\n\n\n// Support: Android 2.3\n// Workaround failure to string-cast null input\njQuery.parseJSON = function( data ) {\n\treturn JSON.parse( data + \"\" );\n};\n\n\n// Cross-browser xml parsing\njQuery.parseXML = function( data ) {\n\tvar xml, tmp;\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\n\t// Support: IE9\n\ttry {\n\t\ttmp = new DOMParser();\n\t\txml = tmp.parseFromString( data, \"text/xml\" );\n\t} catch ( e ) {\n\t\txml = undefined;\n\t}\n\n\tif ( !xml || xml.getElementsByTagName( \"parsererror\" ).length ) {\n\t\tjQuery.error( \"Invalid XML: \" + data );\n\t}\n\treturn xml;\n};\n\n\nvar\n\t// Document location\n\tajaxLocParts,\n\tajaxLocation,\n\n\trhash = /#.*$/,\n\trts = /([?&])_=[^&]*/,\n\trheaders = /^(.*?):[ \\t]*([^\\r\\n]*)$/mg,\n\t// #7653, #8125, #8152: local protocol detection\n\trlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\n\trnoContent = /^(?:GET|HEAD)$/,\n\trprotocol = /^\\/\\//,\n\trurl = /^([\\w.+-]+:)(?:\\/\\/(?:[^\\/?#]*@|)([^\\/?#:]*)(?::(\\d+)|)|)/,\n\n\t/* Prefilters\n\t * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\n\t * 2) These are called:\n\t *    - BEFORE asking for a transport\n\t *    - AFTER param serialization (s.data is a string if s.processData is true)\n\t * 3) key is the dataType\n\t * 4) the catchall symbol \"*\" can be used\n\t * 5) execution will start with transport dataType and THEN continue down to \"*\" if needed\n\t */\n\tprefilters = {},\n\n\t/* Transports bindings\n\t * 1) key is the dataType\n\t * 2) the catchall symbol \"*\" can be used\n\t * 3) selection will start with transport dataType and THEN go to \"*\" if needed\n\t */\n\ttransports = {},\n\n\t// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\n\tallTypes = \"*/\".concat(\"*\");\n\n// #8138, IE may throw an exception when accessing\n// a field from window.location if document.domain has been set\ntry {\n\tajaxLocation = location.href;\n} catch( e ) {\n\t// Use the href attribute of an A element\n\t// since IE will modify it given document.location\n\tajaxLocation = document.createElement( \"a\" );\n\tajaxLocation.href = \"\";\n\tajaxLocation = ajaxLocation.href;\n}\n\n// Segment location into parts\najaxLocParts = rurl.exec( ajaxLocation.toLowerCase() ) || [];\n\n// Base \"constructor\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\nfunction addToPrefiltersOrTransports( structure ) {\n\n\t// dataTypeExpression is optional and defaults to \"*\"\n\treturn function( dataTypeExpression, func ) {\n\n\t\tif ( typeof dataTypeExpression !== \"string\" ) {\n\t\t\tfunc = dataTypeExpression;\n\t\t\tdataTypeExpression = \"*\";\n\t\t}\n\n\t\tvar dataType,\n\t\t\ti = 0,\n\t\t\tdataTypes = dataTypeExpression.toLowerCase().match( rnotwhite ) || [];\n\n\t\tif ( jQuery.isFunction( func ) ) {\n\t\t\t// For each dataType in the dataTypeExpression\n\t\t\twhile ( (dataType = dataTypes[i++]) ) {\n\t\t\t\t// Prepend if requested\n\t\t\t\tif ( dataType[0] === \"+\" ) {\n\t\t\t\t\tdataType = dataType.slice( 1 ) || \"*\";\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).unshift( func );\n\n\t\t\t\t// Otherwise append\n\t\t\t\t} else {\n\t\t\t\t\t(structure[ dataType ] = structure[ dataType ] || []).push( func );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n}\n\n// Base inspection function for prefilters and transports\nfunction inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {\n\n\tvar inspected = {},\n\t\tseekingTransport = ( structure === transports );\n\n\tfunction inspect( dataType ) {\n\t\tvar selected;\n\t\tinspected[ dataType ] = true;\n\t\tjQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {\n\t\t\tvar dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );\n\t\t\tif ( typeof dataTypeOrTransport === \"string\" && !seekingTransport && !inspected[ dataTypeOrTransport ] ) {\n\t\t\t\toptions.dataTypes.unshift( dataTypeOrTransport );\n\t\t\t\tinspect( dataTypeOrTransport );\n\t\t\t\treturn false;\n\t\t\t} else if ( seekingTransport ) {\n\t\t\t\treturn !( selected = dataTypeOrTransport );\n\t\t\t}\n\t\t});\n\t\treturn selected;\n\t}\n\n\treturn inspect( options.dataTypes[ 0 ] ) || !inspected[ \"*\" ] && inspect( \"*\" );\n}\n\n// A special extend for ajax options\n// that takes \"flat\" options (not to be deep extended)\n// Fixes #9887\nfunction ajaxExtend( target, src ) {\n\tvar key, deep,\n\t\tflatOptions = jQuery.ajaxSettings.flatOptions || {};\n\n\tfor ( key in src ) {\n\t\tif ( src[ key ] !== undefined ) {\n\t\t\t( flatOptions[ key ] ? target : ( deep || (deep = {}) ) )[ key ] = src[ key ];\n\t\t}\n\t}\n\tif ( deep ) {\n\t\tjQuery.extend( true, target, deep );\n\t}\n\n\treturn target;\n}\n\n/* Handles responses to an ajax request:\n * - finds the right dataType (mediates between content-type and expected dataType)\n * - returns the corresponding response\n */\nfunction ajaxHandleResponses( s, jqXHR, responses ) {\n\n\tvar ct, type, finalDataType, firstDataType,\n\t\tcontents = s.contents,\n\t\tdataTypes = s.dataTypes;\n\n\t// Remove auto dataType and get content-type in the process\n\twhile ( dataTypes[ 0 ] === \"*\" ) {\n\t\tdataTypes.shift();\n\t\tif ( ct === undefined ) {\n\t\t\tct = s.mimeType || jqXHR.getResponseHeader(\"Content-Type\");\n\t\t}\n\t}\n\n\t// Check if we're dealing with a known content-type\n\tif ( ct ) {\n\t\tfor ( type in contents ) {\n\t\t\tif ( contents[ type ] && contents[ type ].test( ct ) ) {\n\t\t\t\tdataTypes.unshift( type );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Check to see if we have a response for the expected dataType\n\tif ( dataTypes[ 0 ] in responses ) {\n\t\tfinalDataType = dataTypes[ 0 ];\n\t} else {\n\t\t// Try convertible dataTypes\n\t\tfor ( type in responses ) {\n\t\t\tif ( !dataTypes[ 0 ] || s.converters[ type + \" \" + dataTypes[0] ] ) {\n\t\t\t\tfinalDataType = type;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif ( !firstDataType ) {\n\t\t\t\tfirstDataType = type;\n\t\t\t}\n\t\t}\n\t\t// Or just use first one\n\t\tfinalDataType = finalDataType || firstDataType;\n\t}\n\n\t// If we found a dataType\n\t// We add the dataType to the list if needed\n\t// and return the corresponding response\n\tif ( finalDataType ) {\n\t\tif ( finalDataType !== dataTypes[ 0 ] ) {\n\t\t\tdataTypes.unshift( finalDataType );\n\t\t}\n\t\treturn responses[ finalDataType ];\n\t}\n}\n\n/* Chain conversions given the request and the original response\n * Also sets the responseXXX fields on the jqXHR instance\n */\nfunction ajaxConvert( s, response, jqXHR, isSuccess ) {\n\tvar conv2, current, conv, tmp, prev,\n\t\tconverters = {},\n\t\t// Work with a copy of dataTypes in case we need to modify it for conversion\n\t\tdataTypes = s.dataTypes.slice();\n\n\t// Create converters map with lowercased keys\n\tif ( dataTypes[ 1 ] ) {\n\t\tfor ( conv in s.converters ) {\n\t\t\tconverters[ conv.toLowerCase() ] = s.converters[ conv ];\n\t\t}\n\t}\n\n\tcurrent = dataTypes.shift();\n\n\t// Convert to each sequential dataType\n\twhile ( current ) {\n\n\t\tif ( s.responseFields[ current ] ) {\n\t\t\tjqXHR[ s.responseFields[ current ] ] = response;\n\t\t}\n\n\t\t// Apply the dataFilter if provided\n\t\tif ( !prev && isSuccess && s.dataFilter ) {\n\t\t\tresponse = s.dataFilter( response, s.dataType );\n\t\t}\n\n\t\tprev = current;\n\t\tcurrent = dataTypes.shift();\n\n\t\tif ( current ) {\n\n\t\t// There's only work to do if current dataType is non-auto\n\t\t\tif ( current === \"*\" ) {\n\n\t\t\t\tcurrent = prev;\n\n\t\t\t// Convert response if prev dataType is non-auto and differs from current\n\t\t\t} else if ( prev !== \"*\" && prev !== current ) {\n\n\t\t\t\t// Seek a direct converter\n\t\t\t\tconv = converters[ prev + \" \" + current ] || converters[ \"* \" + current ];\n\n\t\t\t\t// If none found, seek a pair\n\t\t\t\tif ( !conv ) {\n\t\t\t\t\tfor ( conv2 in converters ) {\n\n\t\t\t\t\t\t// If conv2 outputs current\n\t\t\t\t\t\ttmp = conv2.split( \" \" );\n\t\t\t\t\t\tif ( tmp[ 1 ] === current ) {\n\n\t\t\t\t\t\t\t// If prev can be converted to accepted input\n\t\t\t\t\t\t\tconv = converters[ prev + \" \" + tmp[ 0 ] ] ||\n\t\t\t\t\t\t\t\tconverters[ \"* \" + tmp[ 0 ] ];\n\t\t\t\t\t\t\tif ( conv ) {\n\t\t\t\t\t\t\t\t// Condense equivalence converters\n\t\t\t\t\t\t\t\tif ( conv === true ) {\n\t\t\t\t\t\t\t\t\tconv = converters[ conv2 ];\n\n\t\t\t\t\t\t\t\t// Otherwise, insert the intermediate dataType\n\t\t\t\t\t\t\t\t} else if ( converters[ conv2 ] !== true ) {\n\t\t\t\t\t\t\t\t\tcurrent = tmp[ 0 ];\n\t\t\t\t\t\t\t\t\tdataTypes.unshift( tmp[ 1 ] );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Apply converter (if not an equivalence)\n\t\t\t\tif ( conv !== true ) {\n\n\t\t\t\t\t// Unless errors are allowed to bubble, catch and return them\n\t\t\t\t\tif ( conv && s[ \"throws\" ] ) {\n\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresponse = conv( response );\n\t\t\t\t\t\t} catch ( e ) {\n\t\t\t\t\t\t\treturn { state: \"parsererror\", error: conv ? e : \"No conversion from \" + prev + \" to \" + current };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn { state: \"success\", data: response };\n}\n\njQuery.extend({\n\n\t// Counter for holding the number of active queries\n\tactive: 0,\n\n\t// Last-Modified header cache for next request\n\tlastModified: {},\n\tetag: {},\n\n\tajaxSettings: {\n\t\turl: ajaxLocation,\n\t\ttype: \"GET\",\n\t\tisLocal: rlocalProtocol.test( ajaxLocParts[ 1 ] ),\n\t\tglobal: true,\n\t\tprocessData: true,\n\t\tasync: true,\n\t\tcontentType: \"application/x-www-form-urlencoded; charset=UTF-8\",\n\t\t/*\n\t\ttimeout: 0,\n\t\tdata: null,\n\t\tdataType: null,\n\t\tusername: null,\n\t\tpassword: null,\n\t\tcache: null,\n\t\tthrows: false,\n\t\ttraditional: false,\n\t\theaders: {},\n\t\t*/\n\n\t\taccepts: {\n\t\t\t\"*\": allTypes,\n\t\t\ttext: \"text/plain\",\n\t\t\thtml: \"text/html\",\n\t\t\txml: \"application/xml, text/xml\",\n\t\t\tjson: \"application/json, text/javascript\"\n\t\t},\n\n\t\tcontents: {\n\t\t\txml: /xml/,\n\t\t\thtml: /html/,\n\t\t\tjson: /json/\n\t\t},\n\n\t\tresponseFields: {\n\t\t\txml: \"responseXML\",\n\t\t\ttext: \"responseText\",\n\t\t\tjson: \"responseJSON\"\n\t\t},\n\n\t\t// Data converters\n\t\t// Keys separate source (or catchall \"*\") and destination types with a single space\n\t\tconverters: {\n\n\t\t\t// Convert anything to text\n\t\t\t\"* text\": String,\n\n\t\t\t// Text to html (true = no transformation)\n\t\t\t\"text html\": true,\n\n\t\t\t// Evaluate text as a json expression\n\t\t\t\"text json\": jQuery.parseJSON,\n\n\t\t\t// Parse text as xml\n\t\t\t\"text xml\": jQuery.parseXML\n\t\t},\n\n\t\t// For options that shouldn't be deep extended:\n\t\t// you can add your own custom options here if\n\t\t// and when you create one that shouldn't be\n\t\t// deep extended (see ajaxExtend)\n\t\tflatOptions: {\n\t\t\turl: true,\n\t\t\tcontext: true\n\t\t}\n\t},\n\n\t// Creates a full fledged settings object into target\n\t// with both ajaxSettings and settings fields.\n\t// If target is omitted, writes into ajaxSettings.\n\tajaxSetup: function( target, settings ) {\n\t\treturn settings ?\n\n\t\t\t// Building a settings object\n\t\t\tajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :\n\n\t\t\t// Extending ajaxSettings\n\t\t\tajaxExtend( jQuery.ajaxSettings, target );\n\t},\n\n\tajaxPrefilter: addToPrefiltersOrTransports( prefilters ),\n\tajaxTransport: addToPrefiltersOrTransports( transports ),\n\n\t// Main method\n\tajax: function( url, options ) {\n\n\t\t// If url is an object, simulate pre-1.5 signature\n\t\tif ( typeof url === \"object\" ) {\n\t\t\toptions = url;\n\t\t\turl = undefined;\n\t\t}\n\n\t\t// Force options to be an object\n\t\toptions = options || {};\n\n\t\tvar transport,\n\t\t\t// URL without anti-cache param\n\t\t\tcacheURL,\n\t\t\t// Response headers\n\t\t\tresponseHeadersString,\n\t\t\tresponseHeaders,\n\t\t\t// timeout handle\n\t\t\ttimeoutTimer,\n\t\t\t// Cross-domain detection vars\n\t\t\tparts,\n\t\t\t// To know if global events are to be dispatched\n\t\t\tfireGlobals,\n\t\t\t// Loop variable\n\t\t\ti,\n\t\t\t// Create the final options object\n\t\t\ts = jQuery.ajaxSetup( {}, options ),\n\t\t\t// Callbacks context\n\t\t\tcallbackContext = s.context || s,\n\t\t\t// Context for global events is callbackContext if it is a DOM node or jQuery collection\n\t\t\tglobalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\n\t\t\t\tjQuery( callbackContext ) :\n\t\t\t\tjQuery.event,\n\t\t\t// Deferreds\n\t\t\tdeferred = jQuery.Deferred(),\n\t\t\tcompleteDeferred = jQuery.Callbacks(\"once memory\"),\n\t\t\t// Status-dependent callbacks\n\t\t\tstatusCode = s.statusCode || {},\n\t\t\t// Headers (they are sent all at once)\n\t\t\trequestHeaders = {},\n\t\t\trequestHeadersNames = {},\n\t\t\t// The jqXHR state\n\t\t\tstate = 0,\n\t\t\t// Default abort message\n\t\t\tstrAbort = \"canceled\",\n\t\t\t// Fake xhr\n\t\t\tjqXHR = {\n\t\t\t\treadyState: 0,\n\n\t\t\t\t// Builds headers hashtable if needed\n\t\t\t\tgetResponseHeader: function( key ) {\n\t\t\t\t\tvar match;\n\t\t\t\t\tif ( state === 2 ) {\n\t\t\t\t\t\tif ( !responseHeaders ) {\n\t\t\t\t\t\t\tresponseHeaders = {};\n\t\t\t\t\t\t\twhile ( (match = rheaders.exec( responseHeadersString )) ) {\n\t\t\t\t\t\t\t\tresponseHeaders[ match[1].toLowerCase() ] = match[ 2 ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tmatch = responseHeaders[ key.toLowerCase() ];\n\t\t\t\t\t}\n\t\t\t\t\treturn match == null ? null : match;\n\t\t\t\t},\n\n\t\t\t\t// Raw string\n\t\t\t\tgetAllResponseHeaders: function() {\n\t\t\t\t\treturn state === 2 ? responseHeadersString : null;\n\t\t\t\t},\n\n\t\t\t\t// Caches the header\n\t\t\t\tsetRequestHeader: function( name, value ) {\n\t\t\t\t\tvar lname = name.toLowerCase();\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\tname = requestHeadersNames[ lname ] = requestHeadersNames[ lname ] || name;\n\t\t\t\t\t\trequestHeaders[ name ] = value;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Overrides response content-type header\n\t\t\t\toverrideMimeType: function( type ) {\n\t\t\t\t\tif ( !state ) {\n\t\t\t\t\t\ts.mimeType = type;\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Status-dependent callbacks\n\t\t\t\tstatusCode: function( map ) {\n\t\t\t\t\tvar code;\n\t\t\t\t\tif ( map ) {\n\t\t\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\t\t\tfor ( code in map ) {\n\t\t\t\t\t\t\t\t// Lazy-add the new callback in a way that preserves old ones\n\t\t\t\t\t\t\t\tstatusCode[ code ] = [ statusCode[ code ], map[ code ] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Execute the appropriate callbacks\n\t\t\t\t\t\t\tjqXHR.always( map[ jqXHR.status ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn this;\n\t\t\t\t},\n\n\t\t\t\t// Cancel the request\n\t\t\t\tabort: function( statusText ) {\n\t\t\t\t\tvar finalText = statusText || strAbort;\n\t\t\t\t\tif ( transport ) {\n\t\t\t\t\t\ttransport.abort( finalText );\n\t\t\t\t\t}\n\t\t\t\t\tdone( 0, finalText );\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t};\n\n\t\t// Attach deferreds\n\t\tdeferred.promise( jqXHR ).complete = completeDeferred.add;\n\t\tjqXHR.success = jqXHR.done;\n\t\tjqXHR.error = jqXHR.fail;\n\n\t\t// Remove hash character (#7531: and string promotion)\n\t\t// Add protocol if not provided (prefilters might expect it)\n\t\t// Handle falsy url in the settings object (#10093: consistency with old signature)\n\t\t// We also use the url parameter if available\n\t\ts.url = ( ( url || s.url || ajaxLocation ) + \"\" ).replace( rhash, \"\" )\n\t\t\t.replace( rprotocol, ajaxLocParts[ 1 ] + \"//\" );\n\n\t\t// Alias method option to type as per ticket #12004\n\t\ts.type = options.method || options.type || s.method || s.type;\n\n\t\t// Extract dataTypes list\n\t\ts.dataTypes = jQuery.trim( s.dataType || \"*\" ).toLowerCase().match( rnotwhite ) || [ \"\" ];\n\n\t\t// A cross-domain request is in order when we have a protocol:host:port mismatch\n\t\tif ( s.crossDomain == null ) {\n\t\t\tparts = rurl.exec( s.url.toLowerCase() );\n\t\t\ts.crossDomain = !!( parts &&\n\t\t\t\t( parts[ 1 ] !== ajaxLocParts[ 1 ] || parts[ 2 ] !== ajaxLocParts[ 2 ] ||\n\t\t\t\t\t( parts[ 3 ] || ( parts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) !==\n\t\t\t\t\t\t( ajaxLocParts[ 3 ] || ( ajaxLocParts[ 1 ] === \"http:\" ? \"80\" : \"443\" ) ) )\n\t\t\t);\n\t\t}\n\n\t\t// Convert data if not already a string\n\t\tif ( s.data && s.processData && typeof s.data !== \"string\" ) {\n\t\t\ts.data = jQuery.param( s.data, s.traditional );\n\t\t}\n\n\t\t// Apply prefilters\n\t\tinspectPrefiltersOrTransports( prefilters, s, options, jqXHR );\n\n\t\t// If request was aborted inside a prefilter, stop there\n\t\tif ( state === 2 ) {\n\t\t\treturn jqXHR;\n\t\t}\n\n\t\t// We can fire global events as of now if asked to\n\t\tfireGlobals = s.global;\n\n\t\t// Watch for a new set of requests\n\t\tif ( fireGlobals && jQuery.active++ === 0 ) {\n\t\t\tjQuery.event.trigger(\"ajaxStart\");\n\t\t}\n\n\t\t// Uppercase the type\n\t\ts.type = s.type.toUpperCase();\n\n\t\t// Determine if request has content\n\t\ts.hasContent = !rnoContent.test( s.type );\n\n\t\t// Save the URL in case we're toying with the If-Modified-Since\n\t\t// and/or If-None-Match header later on\n\t\tcacheURL = s.url;\n\n\t\t// More options handling for requests with no content\n\t\tif ( !s.hasContent ) {\n\n\t\t\t// If data is available, append data to url\n\t\t\tif ( s.data ) {\n\t\t\t\tcacheURL = ( s.url += ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + s.data );\n\t\t\t\t// #9682: remove data so that it's not used in an eventual retry\n\t\t\t\tdelete s.data;\n\t\t\t}\n\n\t\t\t// Add anti-cache in url if needed\n\t\t\tif ( s.cache === false ) {\n\t\t\t\ts.url = rts.test( cacheURL ) ?\n\n\t\t\t\t\t// If there is already a '_' parameter, set its value\n\t\t\t\t\tcacheURL.replace( rts, \"$1_=\" + nonce++ ) :\n\n\t\t\t\t\t// Otherwise add one to the end\n\t\t\t\t\tcacheURL + ( rquery.test( cacheURL ) ? \"&\" : \"?\" ) + \"_=\" + nonce++;\n\t\t\t}\n\t\t}\n\n\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\tif ( s.ifModified ) {\n\t\t\tif ( jQuery.lastModified[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-Modified-Since\", jQuery.lastModified[ cacheURL ] );\n\t\t\t}\n\t\t\tif ( jQuery.etag[ cacheURL ] ) {\n\t\t\t\tjqXHR.setRequestHeader( \"If-None-Match\", jQuery.etag[ cacheURL ] );\n\t\t\t}\n\t\t}\n\n\t\t// Set the correct header, if data is being sent\n\t\tif ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {\n\t\t\tjqXHR.setRequestHeader( \"Content-Type\", s.contentType );\n\t\t}\n\n\t\t// Set the Accepts header for the server, depending on the dataType\n\t\tjqXHR.setRequestHeader(\n\t\t\t\"Accept\",\n\t\t\ts.dataTypes[ 0 ] && s.accepts[ s.dataTypes[0] ] ?\n\t\t\t\ts.accepts[ s.dataTypes[0] ] + ( s.dataTypes[ 0 ] !== \"*\" ? \", \" + allTypes + \"; q=0.01\" : \"\" ) :\n\t\t\t\ts.accepts[ \"*\" ]\n\t\t);\n\n\t\t// Check for headers option\n\t\tfor ( i in s.headers ) {\n\t\t\tjqXHR.setRequestHeader( i, s.headers[ i ] );\n\t\t}\n\n\t\t// Allow custom headers/mimetypes and early abort\n\t\tif ( s.beforeSend && ( s.beforeSend.call( callbackContext, jqXHR, s ) === false || state === 2 ) ) {\n\t\t\t// Abort if not done already and return\n\t\t\treturn jqXHR.abort();\n\t\t}\n\n\t\t// aborting is no longer a cancellation\n\t\tstrAbort = \"abort\";\n\n\t\t// Install callbacks on deferreds\n\t\tfor ( i in { success: 1, error: 1, complete: 1 } ) {\n\t\t\tjqXHR[ i ]( s[ i ] );\n\t\t}\n\n\t\t// Get transport\n\t\ttransport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );\n\n\t\t// If no transport, we auto-abort\n\t\tif ( !transport ) {\n\t\t\tdone( -1, \"No Transport\" );\n\t\t} else {\n\t\t\tjqXHR.readyState = 1;\n\n\t\t\t// Send global event\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxSend\", [ jqXHR, s ] );\n\t\t\t}\n\t\t\t// Timeout\n\t\t\tif ( s.async && s.timeout > 0 ) {\n\t\t\t\ttimeoutTimer = setTimeout(function() {\n\t\t\t\t\tjqXHR.abort(\"timeout\");\n\t\t\t\t}, s.timeout );\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\tstate = 1;\n\t\t\t\ttransport.send( requestHeaders, done );\n\t\t\t} catch ( e ) {\n\t\t\t\t// Propagate exception as error if not done\n\t\t\t\tif ( state < 2 ) {\n\t\t\t\t\tdone( -1, e );\n\t\t\t\t// Simply rethrow otherwise\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Callback for when everything is done\n\t\tfunction done( status, nativeStatusText, responses, headers ) {\n\t\t\tvar isSuccess, success, error, response, modified,\n\t\t\t\tstatusText = nativeStatusText;\n\n\t\t\t// Called once\n\t\t\tif ( state === 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// State is \"done\" now\n\t\t\tstate = 2;\n\n\t\t\t// Clear timeout if it exists\n\t\t\tif ( timeoutTimer ) {\n\t\t\t\tclearTimeout( timeoutTimer );\n\t\t\t}\n\n\t\t\t// Dereference transport for early garbage collection\n\t\t\t// (no matter how long the jqXHR object will be used)\n\t\t\ttransport = undefined;\n\n\t\t\t// Cache response headers\n\t\t\tresponseHeadersString = headers || \"\";\n\n\t\t\t// Set readyState\n\t\t\tjqXHR.readyState = status > 0 ? 4 : 0;\n\n\t\t\t// Determine if successful\n\t\t\tisSuccess = status >= 200 && status < 300 || status === 304;\n\n\t\t\t// Get response data\n\t\t\tif ( responses ) {\n\t\t\t\tresponse = ajaxHandleResponses( s, jqXHR, responses );\n\t\t\t}\n\n\t\t\t// Convert no matter what (that way responseXXX fields are always set)\n\t\t\tresponse = ajaxConvert( s, response, jqXHR, isSuccess );\n\n\t\t\t// If successful, handle type chaining\n\t\t\tif ( isSuccess ) {\n\n\t\t\t\t// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\n\t\t\t\tif ( s.ifModified ) {\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"Last-Modified\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.lastModified[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t\tmodified = jqXHR.getResponseHeader(\"etag\");\n\t\t\t\t\tif ( modified ) {\n\t\t\t\t\t\tjQuery.etag[ cacheURL ] = modified;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// if no content\n\t\t\t\tif ( status === 204 || s.type === \"HEAD\" ) {\n\t\t\t\t\tstatusText = \"nocontent\";\n\n\t\t\t\t// if not modified\n\t\t\t\t} else if ( status === 304 ) {\n\t\t\t\t\tstatusText = \"notmodified\";\n\n\t\t\t\t// If we have data, let's convert it\n\t\t\t\t} else {\n\t\t\t\t\tstatusText = response.state;\n\t\t\t\t\tsuccess = response.data;\n\t\t\t\t\terror = response.error;\n\t\t\t\t\tisSuccess = !error;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// We extract error from statusText\n\t\t\t\t// then normalize statusText and status for non-aborts\n\t\t\t\terror = statusText;\n\t\t\t\tif ( status || !statusText ) {\n\t\t\t\t\tstatusText = \"error\";\n\t\t\t\t\tif ( status < 0 ) {\n\t\t\t\t\t\tstatus = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Set data for the fake xhr object\n\t\t\tjqXHR.status = status;\n\t\t\tjqXHR.statusText = ( nativeStatusText || statusText ) + \"\";\n\n\t\t\t// Success/Error\n\t\t\tif ( isSuccess ) {\n\t\t\t\tdeferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );\n\t\t\t} else {\n\t\t\t\tdeferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );\n\t\t\t}\n\n\t\t\t// Status-dependent callbacks\n\t\t\tjqXHR.statusCode( statusCode );\n\t\t\tstatusCode = undefined;\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( isSuccess ? \"ajaxSuccess\" : \"ajaxError\",\n\t\t\t\t\t[ jqXHR, s, isSuccess ? success : error ] );\n\t\t\t}\n\n\t\t\t// Complete\n\t\t\tcompleteDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );\n\n\t\t\tif ( fireGlobals ) {\n\t\t\t\tglobalEventContext.trigger( \"ajaxComplete\", [ jqXHR, s ] );\n\t\t\t\t// Handle the global AJAX counter\n\t\t\t\tif ( !( --jQuery.active ) ) {\n\t\t\t\t\tjQuery.event.trigger(\"ajaxStop\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn jqXHR;\n\t},\n\n\tgetJSON: function( url, data, callback ) {\n\t\treturn jQuery.get( url, data, callback, \"json\" );\n\t},\n\n\tgetScript: function( url, callback ) {\n\t\treturn jQuery.get( url, undefined, callback, \"script\" );\n\t}\n});\n\njQuery.each( [ \"get\", \"post\" ], function( i, method ) {\n\tjQuery[ method ] = function( url, data, callback, type ) {\n\t\t// shift arguments if data argument was omitted\n\t\tif ( jQuery.isFunction( data ) ) {\n\t\t\ttype = type || callback;\n\t\t\tcallback = data;\n\t\t\tdata = undefined;\n\t\t}\n\n\t\treturn jQuery.ajax({\n\t\t\turl: url,\n\t\t\ttype: method,\n\t\t\tdataType: type,\n\t\t\tdata: data,\n\t\t\tsuccess: callback\n\t\t});\n\t};\n});\n\n// Attach a bunch of functions for handling common AJAX events\njQuery.each( [ \"ajaxStart\", \"ajaxStop\", \"ajaxComplete\", \"ajaxError\", \"ajaxSuccess\", \"ajaxSend\" ], function( i, type ) {\n\tjQuery.fn[ type ] = function( fn ) {\n\t\treturn this.on( type, fn );\n\t};\n});\n\n\njQuery._evalUrl = function( url ) {\n\treturn jQuery.ajax({\n\t\turl: url,\n\t\ttype: \"GET\",\n\t\tdataType: \"script\",\n\t\tasync: false,\n\t\tglobal: false,\n\t\t\"throws\": true\n\t});\n};\n\n\njQuery.fn.extend({\n\twrapAll: function( html ) {\n\t\tvar wrap;\n\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapAll( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\tif ( this[ 0 ] ) {\n\n\t\t\t// The elements to wrap the target around\n\t\t\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\n\n\t\t\tif ( this[ 0 ].parentNode ) {\n\t\t\t\twrap.insertBefore( this[ 0 ] );\n\t\t\t}\n\n\t\t\twrap.map(function() {\n\t\t\t\tvar elem = this;\n\n\t\t\t\twhile ( elem.firstElementChild ) {\n\t\t\t\t\telem = elem.firstElementChild;\n\t\t\t\t}\n\n\t\t\t\treturn elem;\n\t\t\t}).append( this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\twrapInner: function( html ) {\n\t\tif ( jQuery.isFunction( html ) ) {\n\t\t\treturn this.each(function( i ) {\n\t\t\t\tjQuery( this ).wrapInner( html.call(this, i) );\n\t\t\t});\n\t\t}\n\n\t\treturn this.each(function() {\n\t\t\tvar self = jQuery( this ),\n\t\t\t\tcontents = self.contents();\n\n\t\t\tif ( contents.length ) {\n\t\t\t\tcontents.wrapAll( html );\n\n\t\t\t} else {\n\t\t\t\tself.append( html );\n\t\t\t}\n\t\t});\n\t},\n\n\twrap: function( html ) {\n\t\tvar isFunction = jQuery.isFunction( html );\n\n\t\treturn this.each(function( i ) {\n\t\t\tjQuery( this ).wrapAll( isFunction ? html.call(this, i) : html );\n\t\t});\n\t},\n\n\tunwrap: function() {\n\t\treturn this.parent().each(function() {\n\t\t\tif ( !jQuery.nodeName( this, \"body\" ) ) {\n\t\t\t\tjQuery( this ).replaceWith( this.childNodes );\n\t\t\t}\n\t\t}).end();\n\t}\n});\n\n\njQuery.expr.filters.hidden = function( elem ) {\n\t// Support: Opera <= 12.12\n\t// Opera reports offsetWidths and offsetHeights less than zero on some elements\n\treturn elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\n};\njQuery.expr.filters.visible = function( elem ) {\n\treturn !jQuery.expr.filters.hidden( elem );\n};\n\n\n\n\nvar r20 = /%20/g,\n\trbracket = /\\[\\]$/,\n\trCRLF = /\\r?\\n/g,\n\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\n\trsubmittable = /^(?:input|select|textarea|keygen)/i;\n\nfunction buildParams( prefix, obj, traditional, add ) {\n\tvar name;\n\n\tif ( jQuery.isArray( obj ) ) {\n\t\t// Serialize array item.\n\t\tjQuery.each( obj, function( i, v ) {\n\t\t\tif ( traditional || rbracket.test( prefix ) ) {\n\t\t\t\t// Treat each array item as a scalar.\n\t\t\t\tadd( prefix, v );\n\n\t\t\t} else {\n\t\t\t\t// Item is non-scalar (array or object), encode its numeric index.\n\t\t\t\tbuildParams( prefix + \"[\" + ( typeof v === \"object\" ? i : \"\" ) + \"]\", v, traditional, add );\n\t\t\t}\n\t\t});\n\n\t} else if ( !traditional && jQuery.type( obj ) === \"object\" ) {\n\t\t// Serialize object item.\n\t\tfor ( name in obj ) {\n\t\t\tbuildParams( prefix + \"[\" + name + \"]\", obj[ name ], traditional, add );\n\t\t}\n\n\t} else {\n\t\t// Serialize scalar item.\n\t\tadd( prefix, obj );\n\t}\n}\n\n// Serialize an array of form elements or a set of\n// key/values into a query string\njQuery.param = function( a, traditional ) {\n\tvar prefix,\n\t\ts = [],\n\t\tadd = function( key, value ) {\n\t\t\t// If value is a function, invoke it and return its value\n\t\t\tvalue = jQuery.isFunction( value ) ? value() : ( value == null ? \"\" : value );\n\t\t\ts[ s.length ] = encodeURIComponent( key ) + \"=\" + encodeURIComponent( value );\n\t\t};\n\n\t// Set traditional to true for jQuery <= 1.3.2 behavior.\n\tif ( traditional === undefined ) {\n\t\ttraditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\n\t}\n\n\t// If an array was passed in, assume that it is an array of form elements.\n\tif ( jQuery.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\n\t\t// Serialize the form elements\n\t\tjQuery.each( a, function() {\n\t\t\tadd( this.name, this.value );\n\t\t});\n\n\t} else {\n\t\t// If traditional, encode the \"old\" way (the way 1.3.2 or older\n\t\t// did it), otherwise encode params recursively.\n\t\tfor ( prefix in a ) {\n\t\t\tbuildParams( prefix, a[ prefix ], traditional, add );\n\t\t}\n\t}\n\n\t// Return the resulting serialization\n\treturn s.join( \"&\" ).replace( r20, \"+\" );\n};\n\njQuery.fn.extend({\n\tserialize: function() {\n\t\treturn jQuery.param( this.serializeArray() );\n\t},\n\tserializeArray: function() {\n\t\treturn this.map(function() {\n\t\t\t// Can add propHook for \"elements\" to filter or add form elements\n\t\t\tvar elements = jQuery.prop( this, \"elements\" );\n\t\t\treturn elements ? jQuery.makeArray( elements ) : this;\n\t\t})\n\t\t.filter(function() {\n\t\t\tvar type = this.type;\n\n\t\t\t// Use .is( \":disabled\" ) so that fieldset[disabled] works\n\t\t\treturn this.name && !jQuery( this ).is( \":disabled\" ) &&\n\t\t\t\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\n\t\t\t\t( this.checked || !rcheckableType.test( type ) );\n\t\t})\n\t\t.map(function( i, elem ) {\n\t\t\tvar val = jQuery( this ).val();\n\n\t\t\treturn val == null ?\n\t\t\t\tnull :\n\t\t\t\tjQuery.isArray( val ) ?\n\t\t\t\t\tjQuery.map( val, function( val ) {\n\t\t\t\t\t\treturn { name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t\t\t\t}) :\n\t\t\t\t\t{ name: elem.name, value: val.replace( rCRLF, \"\\r\\n\" ) };\n\t\t}).get();\n\t}\n});\n\n\njQuery.ajaxSettings.xhr = function() {\n\ttry {\n\t\treturn new XMLHttpRequest();\n\t} catch( e ) {}\n};\n\nvar xhrId = 0,\n\txhrCallbacks = {},\n\txhrSuccessStatus = {\n\t\t// file protocol always yields status code 0, assume 200\n\t\t0: 200,\n\t\t// Support: IE9\n\t\t// #1450: sometimes IE returns 1223 when it should be 204\n\t\t1223: 204\n\t},\n\txhrSupported = jQuery.ajaxSettings.xhr();\n\n// Support: IE9\n// Open requests must be manually aborted on unload (#5280)\nif ( window.ActiveXObject ) {\n\tjQuery( window ).on( \"unload\", function() {\n\t\tfor ( var key in xhrCallbacks ) {\n\t\t\txhrCallbacks[ key ]();\n\t\t}\n\t});\n}\n\nsupport.cors = !!xhrSupported && ( \"withCredentials\" in xhrSupported );\nsupport.ajax = xhrSupported = !!xhrSupported;\n\njQuery.ajaxTransport(function( options ) {\n\tvar callback;\n\n\t// Cross domain only allowed if supported through XMLHttpRequest\n\tif ( support.cors || xhrSupported && !options.crossDomain ) {\n\t\treturn {\n\t\t\tsend: function( headers, complete ) {\n\t\t\t\tvar i,\n\t\t\t\t\txhr = options.xhr(),\n\t\t\t\t\tid = ++xhrId;\n\n\t\t\t\txhr.open( options.type, options.url, options.async, options.username, options.password );\n\n\t\t\t\t// Apply custom fields if provided\n\t\t\t\tif ( options.xhrFields ) {\n\t\t\t\t\tfor ( i in options.xhrFields ) {\n\t\t\t\t\t\txhr[ i ] = options.xhrFields[ i ];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Override mime type if needed\n\t\t\t\tif ( options.mimeType && xhr.overrideMimeType ) {\n\t\t\t\t\txhr.overrideMimeType( options.mimeType );\n\t\t\t\t}\n\n\t\t\t\t// X-Requested-With header\n\t\t\t\t// For cross-domain requests, seeing as conditions for a preflight are\n\t\t\t\t// akin to a jigsaw puzzle, we simply never set it to be sure.\n\t\t\t\t// (it can always be set on a per-request basis or even using ajaxSetup)\n\t\t\t\t// For same-domain requests, won't change header if already provided.\n\t\t\t\tif ( !options.crossDomain && !headers[\"X-Requested-With\"] ) {\n\t\t\t\t\theaders[\"X-Requested-With\"] = \"XMLHttpRequest\";\n\t\t\t\t}\n\n\t\t\t\t// Set headers\n\t\t\t\tfor ( i in headers ) {\n\t\t\t\t\txhr.setRequestHeader( i, headers[ i ] );\n\t\t\t\t}\n\n\t\t\t\t// Callback\n\t\t\t\tcallback = function( type ) {\n\t\t\t\t\treturn function() {\n\t\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\t\tdelete xhrCallbacks[ id ];\n\t\t\t\t\t\t\tcallback = xhr.onload = xhr.onerror = null;\n\n\t\t\t\t\t\t\tif ( type === \"abort\" ) {\n\t\t\t\t\t\t\t\txhr.abort();\n\t\t\t\t\t\t\t} else if ( type === \"error\" ) {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\t// file: protocol always yields status 0; see #8605, #14207\n\t\t\t\t\t\t\t\t\txhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcomplete(\n\t\t\t\t\t\t\t\t\txhrSuccessStatus[ xhr.status ] || xhr.status,\n\t\t\t\t\t\t\t\t\txhr.statusText,\n\t\t\t\t\t\t\t\t\t// Support: IE9\n\t\t\t\t\t\t\t\t\t// Accessing binary-data responseText throws an exception\n\t\t\t\t\t\t\t\t\t// (#11426)\n\t\t\t\t\t\t\t\t\ttypeof xhr.responseText === \"string\" ? {\n\t\t\t\t\t\t\t\t\t\ttext: xhr.responseText\n\t\t\t\t\t\t\t\t\t} : undefined,\n\t\t\t\t\t\t\t\t\txhr.getAllResponseHeaders()\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t\t// Listen to events\n\t\t\t\txhr.onload = callback();\n\t\t\t\txhr.onerror = callback(\"error\");\n\n\t\t\t\t// Create the abort callback\n\t\t\t\tcallback = xhrCallbacks[ id ] = callback(\"abort\");\n\n\t\t\t\ttry {\n\t\t\t\t\t// Do send the request (this may raise an exception)\n\t\t\t\t\txhr.send( options.hasContent && options.data || null );\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\t// #14683: Only rethrow if this hasn't been notified as an error yet\n\t\t\t\t\tif ( callback ) {\n\t\t\t\t\t\tthrow e;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\n// Install script dataType\njQuery.ajaxSetup({\n\taccepts: {\n\t\tscript: \"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\"\n\t},\n\tcontents: {\n\t\tscript: /(?:java|ecma)script/\n\t},\n\tconverters: {\n\t\t\"text script\": function( text ) {\n\t\t\tjQuery.globalEval( text );\n\t\t\treturn text;\n\t\t}\n\t}\n});\n\n// Handle cache's special case and crossDomain\njQuery.ajaxPrefilter( \"script\", function( s ) {\n\tif ( s.cache === undefined ) {\n\t\ts.cache = false;\n\t}\n\tif ( s.crossDomain ) {\n\t\ts.type = \"GET\";\n\t}\n});\n\n// Bind script tag hack transport\njQuery.ajaxTransport( \"script\", function( s ) {\n\t// This transport only deals with cross domain requests\n\tif ( s.crossDomain ) {\n\t\tvar script, callback;\n\t\treturn {\n\t\t\tsend: function( _, complete ) {\n\t\t\t\tscript = jQuery(\"<script>\").prop({\n\t\t\t\t\tasync: true,\n\t\t\t\t\tcharset: s.scriptCharset,\n\t\t\t\t\tsrc: s.url\n\t\t\t\t}).on(\n\t\t\t\t\t\"load error\",\n\t\t\t\t\tcallback = function( evt ) {\n\t\t\t\t\t\tscript.remove();\n\t\t\t\t\t\tcallback = null;\n\t\t\t\t\t\tif ( evt ) {\n\t\t\t\t\t\t\tcomplete( evt.type === \"error\" ? 404 : 200, evt.type );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t\tdocument.head.appendChild( script[ 0 ] );\n\t\t\t},\n\t\t\tabort: function() {\n\t\t\t\tif ( callback ) {\n\t\t\t\t\tcallback();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t}\n});\n\n\n\n\nvar oldCallbacks = [],\n\trjsonp = /(=)\\?(?=&|$)|\\?\\?/;\n\n// Default jsonp settings\njQuery.ajaxSetup({\n\tjsonp: \"callback\",\n\tjsonpCallback: function() {\n\t\tvar callback = oldCallbacks.pop() || ( jQuery.expando + \"_\" + ( nonce++ ) );\n\t\tthis[ callback ] = true;\n\t\treturn callback;\n\t}\n});\n\n// Detect, normalize options and install callbacks for jsonp requests\njQuery.ajaxPrefilter( \"json jsonp\", function( s, originalSettings, jqXHR ) {\n\n\tvar callbackName, overwritten, responseContainer,\n\t\tjsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?\n\t\t\t\"url\" :\n\t\t\ttypeof s.data === \"string\" && !( s.contentType || \"\" ).indexOf(\"application/x-www-form-urlencoded\") && rjsonp.test( s.data ) && \"data\"\n\t\t);\n\n\t// Handle iff the expected data type is \"jsonp\" or we have a parameter to set\n\tif ( jsonProp || s.dataTypes[ 0 ] === \"jsonp\" ) {\n\n\t\t// Get callback name, remembering preexisting value associated with it\n\t\tcallbackName = s.jsonpCallback = jQuery.isFunction( s.jsonpCallback ) ?\n\t\t\ts.jsonpCallback() :\n\t\t\ts.jsonpCallback;\n\n\t\t// Insert callback into url or form data\n\t\tif ( jsonProp ) {\n\t\t\ts[ jsonProp ] = s[ jsonProp ].replace( rjsonp, \"$1\" + callbackName );\n\t\t} else if ( s.jsonp !== false ) {\n\t\t\ts.url += ( rquery.test( s.url ) ? \"&\" : \"?\" ) + s.jsonp + \"=\" + callbackName;\n\t\t}\n\n\t\t// Use data converter to retrieve json after script execution\n\t\ts.converters[\"script json\"] = function() {\n\t\t\tif ( !responseContainer ) {\n\t\t\t\tjQuery.error( callbackName + \" was not called\" );\n\t\t\t}\n\t\t\treturn responseContainer[ 0 ];\n\t\t};\n\n\t\t// force json dataType\n\t\ts.dataTypes[ 0 ] = \"json\";\n\n\t\t// Install callback\n\t\toverwritten = window[ callbackName ];\n\t\twindow[ callbackName ] = function() {\n\t\t\tresponseContainer = arguments;\n\t\t};\n\n\t\t// Clean-up function (fires after converters)\n\t\tjqXHR.always(function() {\n\t\t\t// Restore preexisting value\n\t\t\twindow[ callbackName ] = overwritten;\n\n\t\t\t// Save back as free\n\t\t\tif ( s[ callbackName ] ) {\n\t\t\t\t// make sure that re-using the options doesn't screw things around\n\t\t\t\ts.jsonpCallback = originalSettings.jsonpCallback;\n\n\t\t\t\t// save the callback name for future use\n\t\t\t\toldCallbacks.push( callbackName );\n\t\t\t}\n\n\t\t\t// Call if it was a function and we have a response\n\t\t\tif ( responseContainer && jQuery.isFunction( overwritten ) ) {\n\t\t\t\toverwritten( responseContainer[ 0 ] );\n\t\t\t}\n\n\t\t\tresponseContainer = overwritten = undefined;\n\t\t});\n\n\t\t// Delegate to script\n\t\treturn \"script\";\n\t}\n});\n\n\n\n\n// data: string of html\n// context (optional): If specified, the fragment will be created in this context, defaults to document\n// keepScripts (optional): If true, will include scripts passed in the html string\njQuery.parseHTML = function( data, context, keepScripts ) {\n\tif ( !data || typeof data !== \"string\" ) {\n\t\treturn null;\n\t}\n\tif ( typeof context === \"boolean\" ) {\n\t\tkeepScripts = context;\n\t\tcontext = false;\n\t}\n\tcontext = context || document;\n\n\tvar parsed = rsingleTag.exec( data ),\n\t\tscripts = !keepScripts && [];\n\n\t// Single tag\n\tif ( parsed ) {\n\t\treturn [ context.createElement( parsed[1] ) ];\n\t}\n\n\tparsed = jQuery.buildFragment( [ data ], context, scripts );\n\n\tif ( scripts && scripts.length ) {\n\t\tjQuery( scripts ).remove();\n\t}\n\n\treturn jQuery.merge( [], parsed.childNodes );\n};\n\n\n// Keep a copy of the old load method\nvar _load = jQuery.fn.load;\n\n/**\n * Load a url into a page\n */\njQuery.fn.load = function( url, params, callback ) {\n\tif ( typeof url !== \"string\" && _load ) {\n\t\treturn _load.apply( this, arguments );\n\t}\n\n\tvar selector, type, response,\n\t\tself = this,\n\t\toff = url.indexOf(\" \");\n\n\tif ( off >= 0 ) {\n\t\tselector = jQuery.trim( url.slice( off ) );\n\t\turl = url.slice( 0, off );\n\t}\n\n\t// If it's a function\n\tif ( jQuery.isFunction( params ) ) {\n\n\t\t// We assume that it's the callback\n\t\tcallback = params;\n\t\tparams = undefined;\n\n\t// Otherwise, build a param string\n\t} else if ( params && typeof params === \"object\" ) {\n\t\ttype = \"POST\";\n\t}\n\n\t// If we have elements to modify, make the request\n\tif ( self.length > 0 ) {\n\t\tjQuery.ajax({\n\t\t\turl: url,\n\n\t\t\t// if \"type\" variable is undefined, then \"GET\" method will be used\n\t\t\ttype: type,\n\t\t\tdataType: \"html\",\n\t\t\tdata: params\n\t\t}).done(function( responseText ) {\n\n\t\t\t// Save response for use in complete callback\n\t\t\tresponse = arguments;\n\n\t\t\tself.html( selector ?\n\n\t\t\t\t// If a selector was specified, locate the right elements in a dummy div\n\t\t\t\t// Exclude scripts to avoid IE 'Permission Denied' errors\n\t\t\t\tjQuery(\"<div>\").append( jQuery.parseHTML( responseText ) ).find( selector ) :\n\n\t\t\t\t// Otherwise use the full result\n\t\t\t\tresponseText );\n\n\t\t}).complete( callback && function( jqXHR, status ) {\n\t\t\tself.each( callback, response || [ jqXHR.responseText, status, jqXHR ] );\n\t\t});\n\t}\n\n\treturn this;\n};\n\n\n\n\njQuery.expr.filters.animated = function( elem ) {\n\treturn jQuery.grep(jQuery.timers, function( fn ) {\n\t\treturn elem === fn.elem;\n\t}).length;\n};\n\n\n\n\nvar docElem = window.document.documentElement;\n\n/**\n * Gets a window from an element\n */\nfunction getWindow( elem ) {\n\treturn jQuery.isWindow( elem ) ? elem : elem.nodeType === 9 && elem.defaultView;\n}\n\njQuery.offset = {\n\tsetOffset: function( elem, options, i ) {\n\t\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\n\t\t\tposition = jQuery.css( elem, \"position\" ),\n\t\t\tcurElem = jQuery( elem ),\n\t\t\tprops = {};\n\n\t\t// Set position first, in-case top/left are set even on static elem\n\t\tif ( position === \"static\" ) {\n\t\t\telem.style.position = \"relative\";\n\t\t}\n\n\t\tcurOffset = curElem.offset();\n\t\tcurCSSTop = jQuery.css( elem, \"top\" );\n\t\tcurCSSLeft = jQuery.css( elem, \"left\" );\n\t\tcalculatePosition = ( position === \"absolute\" || position === \"fixed\" ) &&\n\t\t\t( curCSSTop + curCSSLeft ).indexOf(\"auto\") > -1;\n\n\t\t// Need to be able to calculate position if either top or left is auto and position is either absolute or fixed\n\t\tif ( calculatePosition ) {\n\t\t\tcurPosition = curElem.position();\n\t\t\tcurTop = curPosition.top;\n\t\t\tcurLeft = curPosition.left;\n\n\t\t} else {\n\t\t\tcurTop = parseFloat( curCSSTop ) || 0;\n\t\t\tcurLeft = parseFloat( curCSSLeft ) || 0;\n\t\t}\n\n\t\tif ( jQuery.isFunction( options ) ) {\n\t\t\toptions = options.call( elem, i, curOffset );\n\t\t}\n\n\t\tif ( options.top != null ) {\n\t\t\tprops.top = ( options.top - curOffset.top ) + curTop;\n\t\t}\n\t\tif ( options.left != null ) {\n\t\t\tprops.left = ( options.left - curOffset.left ) + curLeft;\n\t\t}\n\n\t\tif ( \"using\" in options ) {\n\t\t\toptions.using.call( elem, props );\n\n\t\t} else {\n\t\t\tcurElem.css( props );\n\t\t}\n\t}\n};\n\njQuery.fn.extend({\n\toffset: function( options ) {\n\t\tif ( arguments.length ) {\n\t\t\treturn options === undefined ?\n\t\t\t\tthis :\n\t\t\t\tthis.each(function( i ) {\n\t\t\t\t\tjQuery.offset.setOffset( this, options, i );\n\t\t\t\t});\n\t\t}\n\n\t\tvar docElem, win,\n\t\t\telem = this[ 0 ],\n\t\t\tbox = { top: 0, left: 0 },\n\t\t\tdoc = elem && elem.ownerDocument;\n\n\t\tif ( !doc ) {\n\t\t\treturn;\n\t\t}\n\n\t\tdocElem = doc.documentElement;\n\n\t\t// Make sure it's not a disconnected DOM node\n\t\tif ( !jQuery.contains( docElem, elem ) ) {\n\t\t\treturn box;\n\t\t}\n\n\t\t// If we don't have gBCR, just use 0,0 rather than error\n\t\t// BlackBerry 5, iOS 3 (original iPhone)\n\t\tif ( typeof elem.getBoundingClientRect !== strundefined ) {\n\t\t\tbox = elem.getBoundingClientRect();\n\t\t}\n\t\twin = getWindow( doc );\n\t\treturn {\n\t\t\ttop: box.top + win.pageYOffset - docElem.clientTop,\n\t\t\tleft: box.left + win.pageXOffset - docElem.clientLeft\n\t\t};\n\t},\n\n\tposition: function() {\n\t\tif ( !this[ 0 ] ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar offsetParent, offset,\n\t\t\telem = this[ 0 ],\n\t\t\tparentOffset = { top: 0, left: 0 };\n\n\t\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent\n\t\tif ( jQuery.css( elem, \"position\" ) === \"fixed\" ) {\n\t\t\t// We assume that getBoundingClientRect is available when computed position is fixed\n\t\t\toffset = elem.getBoundingClientRect();\n\n\t\t} else {\n\t\t\t// Get *real* offsetParent\n\t\t\toffsetParent = this.offsetParent();\n\n\t\t\t// Get correct offsets\n\t\t\toffset = this.offset();\n\t\t\tif ( !jQuery.nodeName( offsetParent[ 0 ], \"html\" ) ) {\n\t\t\t\tparentOffset = offsetParent.offset();\n\t\t\t}\n\n\t\t\t// Add offsetParent borders\n\t\t\tparentOffset.top += jQuery.css( offsetParent[ 0 ], \"borderTopWidth\", true );\n\t\t\tparentOffset.left += jQuery.css( offsetParent[ 0 ], \"borderLeftWidth\", true );\n\t\t}\n\n\t\t// Subtract parent offsets and element margins\n\t\treturn {\n\t\t\ttop: offset.top - parentOffset.top - jQuery.css( elem, \"marginTop\", true ),\n\t\t\tleft: offset.left - parentOffset.left - jQuery.css( elem, \"marginLeft\", true )\n\t\t};\n\t},\n\n\toffsetParent: function() {\n\t\treturn this.map(function() {\n\t\t\tvar offsetParent = this.offsetParent || docElem;\n\n\t\t\twhile ( offsetParent && ( !jQuery.nodeName( offsetParent, \"html\" ) && jQuery.css( offsetParent, \"position\" ) === \"static\" ) ) {\n\t\t\t\toffsetParent = offsetParent.offsetParent;\n\t\t\t}\n\n\t\t\treturn offsetParent || docElem;\n\t\t});\n\t}\n});\n\n// Create scrollLeft and scrollTop methods\njQuery.each( { scrollLeft: \"pageXOffset\", scrollTop: \"pageYOffset\" }, function( method, prop ) {\n\tvar top = \"pageYOffset\" === prop;\n\n\tjQuery.fn[ method ] = function( val ) {\n\t\treturn access( this, function( elem, method, val ) {\n\t\t\tvar win = getWindow( elem );\n\n\t\t\tif ( val === undefined ) {\n\t\t\t\treturn win ? win[ prop ] : elem[ method ];\n\t\t\t}\n\n\t\t\tif ( win ) {\n\t\t\t\twin.scrollTo(\n\t\t\t\t\t!top ? val : window.pageXOffset,\n\t\t\t\t\ttop ? val : window.pageYOffset\n\t\t\t\t);\n\n\t\t\t} else {\n\t\t\t\telem[ method ] = val;\n\t\t\t}\n\t\t}, method, val, arguments.length, null );\n\t};\n});\n\n// Add the top/left cssHooks using jQuery.fn.position\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\n// getComputedStyle returns percent when specified for top/left/bottom/right\n// rather than make the css module depend on the offset module, we just check for it here\njQuery.each( [ \"top\", \"left\" ], function( i, prop ) {\n\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\n\t\tfunction( elem, computed ) {\n\t\t\tif ( computed ) {\n\t\t\t\tcomputed = curCSS( elem, prop );\n\t\t\t\t// if curCSS returns percentage, fallback to offset\n\t\t\t\treturn rnumnonpx.test( computed ) ?\n\t\t\t\t\tjQuery( elem ).position()[ prop ] + \"px\" :\n\t\t\t\t\tcomputed;\n\t\t\t}\n\t\t}\n\t);\n});\n\n\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\njQuery.each( { Height: \"height\", Width: \"width\" }, function( name, type ) {\n\tjQuery.each( { padding: \"inner\" + name, content: type, \"\": \"outer\" + name }, function( defaultExtra, funcName ) {\n\t\t// margin is only for outerHeight, outerWidth\n\t\tjQuery.fn[ funcName ] = function( margin, value ) {\n\t\t\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \"boolean\" ),\n\t\t\t\textra = defaultExtra || ( margin === true || value === true ? \"margin\" : \"border\" );\n\n\t\t\treturn access( this, function( elem, type, value ) {\n\t\t\t\tvar doc;\n\n\t\t\t\tif ( jQuery.isWindow( elem ) ) {\n\t\t\t\t\t// As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\n\t\t\t\t\t// isn't a whole lot we can do. See pull request at this URL for discussion:\n\t\t\t\t\t// https://github.com/jquery/jquery/pull/764\n\t\t\t\t\treturn elem.document.documentElement[ \"client\" + name ];\n\t\t\t\t}\n\n\t\t\t\t// Get document width or height\n\t\t\t\tif ( elem.nodeType === 9 ) {\n\t\t\t\t\tdoc = elem.documentElement;\n\n\t\t\t\t\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\n\t\t\t\t\t// whichever is greatest\n\t\t\t\t\treturn Math.max(\n\t\t\t\t\t\telem.body[ \"scroll\" + name ], doc[ \"scroll\" + name ],\n\t\t\t\t\t\telem.body[ \"offset\" + name ], doc[ \"offset\" + name ],\n\t\t\t\t\t\tdoc[ \"client\" + name ]\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\treturn value === undefined ?\n\t\t\t\t\t// Get width or height on the element, requesting but not forcing parseFloat\n\t\t\t\t\tjQuery.css( elem, type, extra ) :\n\n\t\t\t\t\t// Set width or height on the element\n\t\t\t\t\tjQuery.style( elem, type, value, extra );\n\t\t\t}, type, chainable ? margin : undefined, chainable, null );\n\t\t};\n\t});\n});\n\n\n// The number of elements contained in the matched element set\njQuery.fn.size = function() {\n\treturn this.length;\n};\n\njQuery.fn.andSelf = jQuery.fn.addBack;\n\n\n\n\n// Register as a named AMD module, since jQuery can be concatenated with other\n// files that may use define, but not via a proper concatenation script that\n// understands anonymous AMD modules. A named AMD is safest and most robust\n// way to register. Lowercase jquery is used because AMD module names are\n// derived from file names, and jQuery is normally delivered in a lowercase\n// file name. Do this after creating the global so that if an AMD module wants\n// to call noConflict to hide this version of jQuery, it will work.\n\n// Note that for maximum portability, libraries that are not jQuery should\n// declare themselves as anonymous modules, and avoid setting a global if an\n// AMD loader is present. jQuery is a special case. For more information, see\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( \"jquery\", [], function() {\n\t\treturn jQuery;\n\t});\n}\n\n\n\n\nvar\n\t// Map over jQuery in case of overwrite\n\t_jQuery = window.jQuery,\n\n\t// Map over the $ in case of overwrite\n\t_$ = window.$;\n\njQuery.noConflict = function( deep ) {\n\tif ( window.$ === jQuery ) {\n\t\twindow.$ = _$;\n\t}\n\n\tif ( deep && window.jQuery === jQuery ) {\n\t\twindow.jQuery = _jQuery;\n\t}\n\n\treturn jQuery;\n};\n\n// Expose jQuery and $ identifiers, even in\n// AMD (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\n// and CommonJS for browser emulators (#13566)\nif ( typeof noGlobal === strundefined ) {\n\twindow.jQuery = window.$ = jQuery;\n}\n\n\n\n\nreturn jQuery;\n\n}));\n\n},{}],6:[function(require,module,exports){\n//     Underscore.js 1.7.0\n//     http://underscorejs.org\n//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n//     Underscore may be freely distributed under the MIT license.\n\n(function() {\n\n  // Baseline setup\n  // --------------\n\n  // Establish the root object, `window` in the browser, or `exports` on the server.\n  var root = this;\n\n  // Save the previous value of the `_` variable.\n  var previousUnderscore = root._;\n\n  // Save bytes in the minified (but not gzipped) version:\n  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;\n\n  // Create quick reference variables for speed access to core prototypes.\n  var\n    push             = ArrayProto.push,\n    slice            = ArrayProto.slice,\n    concat           = ArrayProto.concat,\n    toString         = ObjProto.toString,\n    hasOwnProperty   = ObjProto.hasOwnProperty;\n\n  // All **ECMAScript 5** native function implementations that we hope to use\n  // are declared here.\n  var\n    nativeIsArray      = Array.isArray,\n    nativeKeys         = Object.keys,\n    nativeBind         = FuncProto.bind;\n\n  // Create a safe reference to the Underscore object for use below.\n  var _ = function(obj) {\n    if (obj instanceof _) return obj;\n    if (!(this instanceof _)) return new _(obj);\n    this._wrapped = obj;\n  };\n\n  // Export the Underscore object for **Node.js**, with\n  // backwards-compatibility for the old `require()` API. If we're in\n  // the browser, add `_` as a global object.\n  if (typeof exports !== 'undefined') {\n    if (typeof module !== 'undefined' && module.exports) {\n      exports = module.exports = _;\n    }\n    exports._ = _;\n  } else {\n    root._ = _;\n  }\n\n  // Current version.\n  _.VERSION = '1.7.0';\n\n  // Internal function that returns an efficient (for current engines) version\n  // of the passed-in callback, to be repeatedly applied in other Underscore\n  // functions.\n  var createCallback = function(func, context, argCount) {\n    if (context === void 0) return func;\n    switch (argCount == null ? 3 : argCount) {\n      case 1: return function(value) {\n        return func.call(context, value);\n      };\n      case 2: return function(value, other) {\n        return func.call(context, value, other);\n      };\n      case 3: return function(value, index, collection) {\n        return func.call(context, value, index, collection);\n      };\n      case 4: return function(accumulator, value, index, collection) {\n        return func.call(context, accumulator, value, index, collection);\n      };\n    }\n    return function() {\n      return func.apply(context, arguments);\n    };\n  };\n\n  // A mostly-internal function to generate callbacks that can be applied\n  // to each element in a collection, returning the desired result — either\n  // identity, an arbitrary callback, a property matcher, or a property accessor.\n  _.iteratee = function(value, context, argCount) {\n    if (value == null) return _.identity;\n    if (_.isFunction(value)) return createCallback(value, context, argCount);\n    if (_.isObject(value)) return _.matches(value);\n    return _.property(value);\n  };\n\n  // Collection Functions\n  // --------------------\n\n  // The cornerstone, an `each` implementation, aka `forEach`.\n  // Handles raw objects in addition to array-likes. Treats all\n  // sparse array-likes as if they were dense.\n  _.each = _.forEach = function(obj, iteratee, context) {\n    if (obj == null) return obj;\n    iteratee = createCallback(iteratee, context);\n    var i, length = obj.length;\n    if (length === +length) {\n      for (i = 0; i < length; i++) {\n        iteratee(obj[i], i, obj);\n      }\n    } else {\n      var keys = _.keys(obj);\n      for (i = 0, length = keys.length; i < length; i++) {\n        iteratee(obj[keys[i]], keys[i], obj);\n      }\n    }\n    return obj;\n  };\n\n  // Return the results of applying the iteratee to each element.\n  _.map = _.collect = function(obj, iteratee, context) {\n    if (obj == null) return [];\n    iteratee = _.iteratee(iteratee, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        results = Array(length),\n        currentKey;\n    for (var index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      results[index] = iteratee(obj[currentKey], currentKey, obj);\n    }\n    return results;\n  };\n\n  var reduceError = 'Reduce of empty array with no initial value';\n\n  // **Reduce** builds up a single result from a list of values, aka `inject`,\n  // or `foldl`.\n  _.reduce = _.foldl = _.inject = function(obj, iteratee, memo, context) {\n    if (obj == null) obj = [];\n    iteratee = createCallback(iteratee, context, 4);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index = 0, currentKey;\n    if (arguments.length < 3) {\n      if (!length) throw new TypeError(reduceError);\n      memo = obj[keys ? keys[index++] : index++];\n    }\n    for (; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  // The right-associative version of reduce, also known as `foldr`.\n  _.reduceRight = _.foldr = function(obj, iteratee, memo, context) {\n    if (obj == null) obj = [];\n    iteratee = createCallback(iteratee, context, 4);\n    var keys = obj.length !== + obj.length && _.keys(obj),\n        index = (keys || obj).length,\n        currentKey;\n    if (arguments.length < 3) {\n      if (!index) throw new TypeError(reduceError);\n      memo = obj[keys ? keys[--index] : --index];\n    }\n    while (index--) {\n      currentKey = keys ? keys[index] : index;\n      memo = iteratee(memo, obj[currentKey], currentKey, obj);\n    }\n    return memo;\n  };\n\n  // Return the first value which passes a truth test. Aliased as `detect`.\n  _.find = _.detect = function(obj, predicate, context) {\n    var result;\n    predicate = _.iteratee(predicate, context);\n    _.some(obj, function(value, index, list) {\n      if (predicate(value, index, list)) {\n        result = value;\n        return true;\n      }\n    });\n    return result;\n  };\n\n  // Return all the elements that pass a truth test.\n  // Aliased as `select`.\n  _.filter = _.select = function(obj, predicate, context) {\n    var results = [];\n    if (obj == null) return results;\n    predicate = _.iteratee(predicate, context);\n    _.each(obj, function(value, index, list) {\n      if (predicate(value, index, list)) results.push(value);\n    });\n    return results;\n  };\n\n  // Return all the elements for which a truth test fails.\n  _.reject = function(obj, predicate, context) {\n    return _.filter(obj, _.negate(_.iteratee(predicate)), context);\n  };\n\n  // Determine whether all of the elements match a truth test.\n  // Aliased as `all`.\n  _.every = _.all = function(obj, predicate, context) {\n    if (obj == null) return true;\n    predicate = _.iteratee(predicate, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index, currentKey;\n    for (index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      if (!predicate(obj[currentKey], currentKey, obj)) return false;\n    }\n    return true;\n  };\n\n  // Determine if at least one element in the object matches a truth test.\n  // Aliased as `any`.\n  _.some = _.any = function(obj, predicate, context) {\n    if (obj == null) return false;\n    predicate = _.iteratee(predicate, context);\n    var keys = obj.length !== +obj.length && _.keys(obj),\n        length = (keys || obj).length,\n        index, currentKey;\n    for (index = 0; index < length; index++) {\n      currentKey = keys ? keys[index] : index;\n      if (predicate(obj[currentKey], currentKey, obj)) return true;\n    }\n    return false;\n  };\n\n  // Determine if the array or object contains a given value (using `===`).\n  // Aliased as `include`.\n  _.contains = _.include = function(obj, target) {\n    if (obj == null) return false;\n    if (obj.length !== +obj.length) obj = _.values(obj);\n    return _.indexOf(obj, target) >= 0;\n  };\n\n  // Invoke a method (with arguments) on every item in a collection.\n  _.invoke = function(obj, method) {\n    var args = slice.call(arguments, 2);\n    var isFunc = _.isFunction(method);\n    return _.map(obj, function(value) {\n      return (isFunc ? method : value[method]).apply(value, args);\n    });\n  };\n\n  // Convenience version of a common use case of `map`: fetching a property.\n  _.pluck = function(obj, key) {\n    return _.map(obj, _.property(key));\n  };\n\n  // Convenience version of a common use case of `filter`: selecting only objects\n  // containing specific `key:value` pairs.\n  _.where = function(obj, attrs) {\n    return _.filter(obj, _.matches(attrs));\n  };\n\n  // Convenience version of a common use case of `find`: getting the first object\n  // containing specific `key:value` pairs.\n  _.findWhere = function(obj, attrs) {\n    return _.find(obj, _.matches(attrs));\n  };\n\n  // Return the maximum element (or element-based computation).\n  _.max = function(obj, iteratee, context) {\n    var result = -Infinity, lastComputed = -Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = obj.length === +obj.length ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value > result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Return the minimum element (or element-based computation).\n  _.min = function(obj, iteratee, context) {\n    var result = Infinity, lastComputed = Infinity,\n        value, computed;\n    if (iteratee == null && obj != null) {\n      obj = obj.length === +obj.length ? obj : _.values(obj);\n      for (var i = 0, length = obj.length; i < length; i++) {\n        value = obj[i];\n        if (value < result) {\n          result = value;\n        }\n      }\n    } else {\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index, list) {\n        computed = iteratee(value, index, list);\n        if (computed < lastComputed || computed === Infinity && result === Infinity) {\n          result = value;\n          lastComputed = computed;\n        }\n      });\n    }\n    return result;\n  };\n\n  // Shuffle a collection, using the modern version of the\n  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisher–Yates_shuffle).\n  _.shuffle = function(obj) {\n    var set = obj && obj.length === +obj.length ? obj : _.values(obj);\n    var length = set.length;\n    var shuffled = Array(length);\n    for (var index = 0, rand; index < length; index++) {\n      rand = _.random(0, index);\n      if (rand !== index) shuffled[index] = shuffled[rand];\n      shuffled[rand] = set[index];\n    }\n    return shuffled;\n  };\n\n  // Sample **n** random values from a collection.\n  // If **n** is not specified, returns a single random element.\n  // The internal `guard` argument allows it to work with `map`.\n  _.sample = function(obj, n, guard) {\n    if (n == null || guard) {\n      if (obj.length !== +obj.length) obj = _.values(obj);\n      return obj[_.random(obj.length - 1)];\n    }\n    return _.shuffle(obj).slice(0, Math.max(0, n));\n  };\n\n  // Sort the object's values by a criterion produced by an iteratee.\n  _.sortBy = function(obj, iteratee, context) {\n    iteratee = _.iteratee(iteratee, context);\n    return _.pluck(_.map(obj, function(value, index, list) {\n      return {\n        value: value,\n        index: index,\n        criteria: iteratee(value, index, list)\n      };\n    }).sort(function(left, right) {\n      var a = left.criteria;\n      var b = right.criteria;\n      if (a !== b) {\n        if (a > b || a === void 0) return 1;\n        if (a < b || b === void 0) return -1;\n      }\n      return left.index - right.index;\n    }), 'value');\n  };\n\n  // An internal function used for aggregate \"group by\" operations.\n  var group = function(behavior) {\n    return function(obj, iteratee, context) {\n      var result = {};\n      iteratee = _.iteratee(iteratee, context);\n      _.each(obj, function(value, index) {\n        var key = iteratee(value, index, obj);\n        behavior(result, value, key);\n      });\n      return result;\n    };\n  };\n\n  // Groups the object's values by a criterion. Pass either a string attribute\n  // to group by, or a function that returns the criterion.\n  _.groupBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key].push(value); else result[key] = [value];\n  });\n\n  // Indexes the object's values by a criterion, similar to `groupBy`, but for\n  // when you know that your index values will be unique.\n  _.indexBy = group(function(result, value, key) {\n    result[key] = value;\n  });\n\n  // Counts instances of an object that group by a certain criterion. Pass\n  // either a string attribute to count by, or a function that returns the\n  // criterion.\n  _.countBy = group(function(result, value, key) {\n    if (_.has(result, key)) result[key]++; else result[key] = 1;\n  });\n\n  // Use a comparator function to figure out the smallest index at which\n  // an object should be inserted so as to maintain order. Uses binary search.\n  _.sortedIndex = function(array, obj, iteratee, context) {\n    iteratee = _.iteratee(iteratee, context, 1);\n    var value = iteratee(obj);\n    var low = 0, high = array.length;\n    while (low < high) {\n      var mid = low + high >>> 1;\n      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;\n    }\n    return low;\n  };\n\n  // Safely create a real, live array from anything iterable.\n  _.toArray = function(obj) {\n    if (!obj) return [];\n    if (_.isArray(obj)) return slice.call(obj);\n    if (obj.length === +obj.length) return _.map(obj, _.identity);\n    return _.values(obj);\n  };\n\n  // Return the number of elements in an object.\n  _.size = function(obj) {\n    if (obj == null) return 0;\n    return obj.length === +obj.length ? obj.length : _.keys(obj).length;\n  };\n\n  // Split a collection into two arrays: one whose elements all satisfy the given\n  // predicate, and one whose elements all do not satisfy the predicate.\n  _.partition = function(obj, predicate, context) {\n    predicate = _.iteratee(predicate, context);\n    var pass = [], fail = [];\n    _.each(obj, function(value, key, obj) {\n      (predicate(value, key, obj) ? pass : fail).push(value);\n    });\n    return [pass, fail];\n  };\n\n  // Array Functions\n  // ---------------\n\n  // Get the first element of an array. Passing **n** will return the first N\n  // values in the array. Aliased as `head` and `take`. The **guard** check\n  // allows it to work with `_.map`.\n  _.first = _.head = _.take = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[0];\n    if (n < 0) return [];\n    return slice.call(array, 0, n);\n  };\n\n  // Returns everything but the last entry of the array. Especially useful on\n  // the arguments object. Passing **n** will return all the values in\n  // the array, excluding the last N. The **guard** check allows it to work with\n  // `_.map`.\n  _.initial = function(array, n, guard) {\n    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));\n  };\n\n  // Get the last element of an array. Passing **n** will return the last N\n  // values in the array. The **guard** check allows it to work with `_.map`.\n  _.last = function(array, n, guard) {\n    if (array == null) return void 0;\n    if (n == null || guard) return array[array.length - 1];\n    return slice.call(array, Math.max(array.length - n, 0));\n  };\n\n  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.\n  // Especially useful on the arguments object. Passing an **n** will return\n  // the rest N values in the array. The **guard**\n  // check allows it to work with `_.map`.\n  _.rest = _.tail = _.drop = function(array, n, guard) {\n    return slice.call(array, n == null || guard ? 1 : n);\n  };\n\n  // Trim out all falsy values from an array.\n  _.compact = function(array) {\n    return _.filter(array, _.identity);\n  };\n\n  // Internal implementation of a recursive `flatten` function.\n  var flatten = function(input, shallow, strict, output) {\n    if (shallow && _.every(input, _.isArray)) {\n      return concat.apply(output, input);\n    }\n    for (var i = 0, length = input.length; i < length; i++) {\n      var value = input[i];\n      if (!_.isArray(value) && !_.isArguments(value)) {\n        if (!strict) output.push(value);\n      } else if (shallow) {\n        push.apply(output, value);\n      } else {\n        flatten(value, shallow, strict, output);\n      }\n    }\n    return output;\n  };\n\n  // Flatten out an array, either recursively (by default), or just one level.\n  _.flatten = function(array, shallow) {\n    return flatten(array, shallow, false, []);\n  };\n\n  // Return a version of the array that does not contain the specified value(s).\n  _.without = function(array) {\n    return _.difference(array, slice.call(arguments, 1));\n  };\n\n  // Produce a duplicate-free version of the array. If the array has already\n  // been sorted, you have the option of using a faster algorithm.\n  // Aliased as `unique`.\n  _.uniq = _.unique = function(array, isSorted, iteratee, context) {\n    if (array == null) return [];\n    if (!_.isBoolean(isSorted)) {\n      context = iteratee;\n      iteratee = isSorted;\n      isSorted = false;\n    }\n    if (iteratee != null) iteratee = _.iteratee(iteratee, context);\n    var result = [];\n    var seen = [];\n    for (var i = 0, length = array.length; i < length; i++) {\n      var value = array[i];\n      if (isSorted) {\n        if (!i || seen !== value) result.push(value);\n        seen = value;\n      } else if (iteratee) {\n        var computed = iteratee(value, i, array);\n        if (_.indexOf(seen, computed) < 0) {\n          seen.push(computed);\n          result.push(value);\n        }\n      } else if (_.indexOf(result, value) < 0) {\n        result.push(value);\n      }\n    }\n    return result;\n  };\n\n  // Produce an array that contains the union: each distinct element from all of\n  // the passed-in arrays.\n  _.union = function() {\n    return _.uniq(flatten(arguments, true, true, []));\n  };\n\n  // Produce an array that contains every item shared between all the\n  // passed-in arrays.\n  _.intersection = function(array) {\n    if (array == null) return [];\n    var result = [];\n    var argsLength = arguments.length;\n    for (var i = 0, length = array.length; i < length; i++) {\n      var item = array[i];\n      if (_.contains(result, item)) continue;\n      for (var j = 1; j < argsLength; j++) {\n        if (!_.contains(arguments[j], item)) break;\n      }\n      if (j === argsLength) result.push(item);\n    }\n    return result;\n  };\n\n  // Take the difference between one array and a number of other arrays.\n  // Only the elements present in just the first array will remain.\n  _.difference = function(array) {\n    var rest = flatten(slice.call(arguments, 1), true, true, []);\n    return _.filter(array, function(value){\n      return !_.contains(rest, value);\n    });\n  };\n\n  // Zip together multiple lists into a single array -- elements that share\n  // an index go together.\n  _.zip = function(array) {\n    if (array == null) return [];\n    var length = _.max(arguments, 'length').length;\n    var results = Array(length);\n    for (var i = 0; i < length; i++) {\n      results[i] = _.pluck(arguments, i);\n    }\n    return results;\n  };\n\n  // Converts lists into objects. Pass either a single array of `[key, value]`\n  // pairs, or two parallel arrays of the same length -- one of keys, and one of\n  // the corresponding values.\n  _.object = function(list, values) {\n    if (list == null) return {};\n    var result = {};\n    for (var i = 0, length = list.length; i < length; i++) {\n      if (values) {\n        result[list[i]] = values[i];\n      } else {\n        result[list[i][0]] = list[i][1];\n      }\n    }\n    return result;\n  };\n\n  // Return the position of the first occurrence of an item in an array,\n  // or -1 if the item is not included in the array.\n  // If the array is large and already in sort order, pass `true`\n  // for **isSorted** to use binary search.\n  _.indexOf = function(array, item, isSorted) {\n    if (array == null) return -1;\n    var i = 0, length = array.length;\n    if (isSorted) {\n      if (typeof isSorted == 'number') {\n        i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;\n      } else {\n        i = _.sortedIndex(array, item);\n        return array[i] === item ? i : -1;\n      }\n    }\n    for (; i < length; i++) if (array[i] === item) return i;\n    return -1;\n  };\n\n  _.lastIndexOf = function(array, item, from) {\n    if (array == null) return -1;\n    var idx = array.length;\n    if (typeof from == 'number') {\n      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);\n    }\n    while (--idx >= 0) if (array[idx] === item) return idx;\n    return -1;\n  };\n\n  // Generate an integer Array containing an arithmetic progression. A port of\n  // the native Python `range()` function. See\n  // [the Python documentation](http://docs.python.org/library/functions.html#range).\n  _.range = function(start, stop, step) {\n    if (arguments.length <= 1) {\n      stop = start || 0;\n      start = 0;\n    }\n    step = step || 1;\n\n    var length = Math.max(Math.ceil((stop - start) / step), 0);\n    var range = Array(length);\n\n    for (var idx = 0; idx < length; idx++, start += step) {\n      range[idx] = start;\n    }\n\n    return range;\n  };\n\n  // Function (ahem) Functions\n  // ------------------\n\n  // Reusable constructor function for prototype setting.\n  var Ctor = function(){};\n\n  // Create a function bound to a given object (assigning `this`, and arguments,\n  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if\n  // available.\n  _.bind = function(func, context) {\n    var args, bound;\n    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));\n    if (!_.isFunction(func)) throw new TypeError('Bind must be called on a function');\n    args = slice.call(arguments, 2);\n    bound = function() {\n      if (!(this instanceof bound)) return func.apply(context, args.concat(slice.call(arguments)));\n      Ctor.prototype = func.prototype;\n      var self = new Ctor;\n      Ctor.prototype = null;\n      var result = func.apply(self, args.concat(slice.call(arguments)));\n      if (_.isObject(result)) return result;\n      return self;\n    };\n    return bound;\n  };\n\n  // Partially apply a function by creating a version that has had some of its\n  // arguments pre-filled, without changing its dynamic `this` context. _ acts\n  // as a placeholder, allowing any combination of arguments to be pre-filled.\n  _.partial = function(func) {\n    var boundArgs = slice.call(arguments, 1);\n    return function() {\n      var position = 0;\n      var args = boundArgs.slice();\n      for (var i = 0, length = args.length; i < length; i++) {\n        if (args[i] === _) args[i] = arguments[position++];\n      }\n      while (position < arguments.length) args.push(arguments[position++]);\n      return func.apply(this, args);\n    };\n  };\n\n  // Bind a number of an object's methods to that object. Remaining arguments\n  // are the method names to be bound. Useful for ensuring that all callbacks\n  // defined on an object belong to it.\n  _.bindAll = function(obj) {\n    var i, length = arguments.length, key;\n    if (length <= 1) throw new Error('bindAll must be passed function names');\n    for (i = 1; i < length; i++) {\n      key = arguments[i];\n      obj[key] = _.bind(obj[key], obj);\n    }\n    return obj;\n  };\n\n  // Memoize an expensive function by storing its results.\n  _.memoize = function(func, hasher) {\n    var memoize = function(key) {\n      var cache = memoize.cache;\n      var address = hasher ? hasher.apply(this, arguments) : key;\n      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);\n      return cache[address];\n    };\n    memoize.cache = {};\n    return memoize;\n  };\n\n  // Delays a function for the given number of milliseconds, and then calls\n  // it with the arguments supplied.\n  _.delay = function(func, wait) {\n    var args = slice.call(arguments, 2);\n    return setTimeout(function(){\n      return func.apply(null, args);\n    }, wait);\n  };\n\n  // Defers a function, scheduling it to run after the current call stack has\n  // cleared.\n  _.defer = function(func) {\n    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));\n  };\n\n  // Returns a function, that, when invoked, will only be triggered at most once\n  // during a given window of time. Normally, the throttled function will run\n  // as much as it can, without ever going more than once per `wait` duration;\n  // but if you'd like to disable the execution on the leading edge, pass\n  // `{leading: false}`. To disable execution on the trailing edge, ditto.\n  _.throttle = function(func, wait, options) {\n    var context, args, result;\n    var timeout = null;\n    var previous = 0;\n    if (!options) options = {};\n    var later = function() {\n      previous = options.leading === false ? 0 : _.now();\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    };\n    return function() {\n      var now = _.now();\n      if (!previous && options.leading === false) previous = now;\n      var remaining = wait - (now - previous);\n      context = this;\n      args = arguments;\n      if (remaining <= 0 || remaining > wait) {\n        clearTimeout(timeout);\n        timeout = null;\n        previous = now;\n        result = func.apply(context, args);\n        if (!timeout) context = args = null;\n      } else if (!timeout && options.trailing !== false) {\n        timeout = setTimeout(later, remaining);\n      }\n      return result;\n    };\n  };\n\n  // Returns a function, that, as long as it continues to be invoked, will not\n  // be triggered. The function will be called after it stops being called for\n  // N milliseconds. If `immediate` is passed, trigger the function on the\n  // leading edge, instead of the trailing.\n  _.debounce = function(func, wait, immediate) {\n    var timeout, args, context, timestamp, result;\n\n    var later = function() {\n      var last = _.now() - timestamp;\n\n      if (last < wait && last > 0) {\n        timeout = setTimeout(later, wait - last);\n      } else {\n        timeout = null;\n        if (!immediate) {\n          result = func.apply(context, args);\n          if (!timeout) context = args = null;\n        }\n      }\n    };\n\n    return function() {\n      context = this;\n      args = arguments;\n      timestamp = _.now();\n      var callNow = immediate && !timeout;\n      if (!timeout) timeout = setTimeout(later, wait);\n      if (callNow) {\n        result = func.apply(context, args);\n        context = args = null;\n      }\n\n      return result;\n    };\n  };\n\n  // Returns the first function passed as an argument to the second,\n  // allowing you to adjust arguments, run code before and after, and\n  // conditionally execute the original function.\n  _.wrap = function(func, wrapper) {\n    return _.partial(wrapper, func);\n  };\n\n  // Returns a negated version of the passed-in predicate.\n  _.negate = function(predicate) {\n    return function() {\n      return !predicate.apply(this, arguments);\n    };\n  };\n\n  // Returns a function that is the composition of a list of functions, each\n  // consuming the return value of the function that follows.\n  _.compose = function() {\n    var args = arguments;\n    var start = args.length - 1;\n    return function() {\n      var i = start;\n      var result = args[start].apply(this, arguments);\n      while (i--) result = args[i].call(this, result);\n      return result;\n    };\n  };\n\n  // Returns a function that will only be executed after being called N times.\n  _.after = function(times, func) {\n    return function() {\n      if (--times < 1) {\n        return func.apply(this, arguments);\n      }\n    };\n  };\n\n  // Returns a function that will only be executed before being called N times.\n  _.before = function(times, func) {\n    var memo;\n    return function() {\n      if (--times > 0) {\n        memo = func.apply(this, arguments);\n      } else {\n        func = null;\n      }\n      return memo;\n    };\n  };\n\n  // Returns a function that will be executed at most one time, no matter how\n  // often you call it. Useful for lazy initialization.\n  _.once = _.partial(_.before, 2);\n\n  // Object Functions\n  // ----------------\n\n  // Retrieve the names of an object's properties.\n  // Delegates to **ECMAScript 5**'s native `Object.keys`\n  _.keys = function(obj) {\n    if (!_.isObject(obj)) return [];\n    if (nativeKeys) return nativeKeys(obj);\n    var keys = [];\n    for (var key in obj) if (_.has(obj, key)) keys.push(key);\n    return keys;\n  };\n\n  // Retrieve the values of an object's properties.\n  _.values = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var values = Array(length);\n    for (var i = 0; i < length; i++) {\n      values[i] = obj[keys[i]];\n    }\n    return values;\n  };\n\n  // Convert an object into a list of `[key, value]` pairs.\n  _.pairs = function(obj) {\n    var keys = _.keys(obj);\n    var length = keys.length;\n    var pairs = Array(length);\n    for (var i = 0; i < length; i++) {\n      pairs[i] = [keys[i], obj[keys[i]]];\n    }\n    return pairs;\n  };\n\n  // Invert the keys and values of an object. The values must be serializable.\n  _.invert = function(obj) {\n    var result = {};\n    var keys = _.keys(obj);\n    for (var i = 0, length = keys.length; i < length; i++) {\n      result[obj[keys[i]]] = keys[i];\n    }\n    return result;\n  };\n\n  // Return a sorted list of the function names available on the object.\n  // Aliased as `methods`\n  _.functions = _.methods = function(obj) {\n    var names = [];\n    for (var key in obj) {\n      if (_.isFunction(obj[key])) names.push(key);\n    }\n    return names.sort();\n  };\n\n  // Extend a given object with all the properties in passed-in object(s).\n  _.extend = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    var source, prop;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      source = arguments[i];\n      for (prop in source) {\n        if (hasOwnProperty.call(source, prop)) {\n            obj[prop] = source[prop];\n        }\n      }\n    }\n    return obj;\n  };\n\n  // Return a copy of the object only containing the whitelisted properties.\n  _.pick = function(obj, iteratee, context) {\n    var result = {}, key;\n    if (obj == null) return result;\n    if (_.isFunction(iteratee)) {\n      iteratee = createCallback(iteratee, context);\n      for (key in obj) {\n        var value = obj[key];\n        if (iteratee(value, key, obj)) result[key] = value;\n      }\n    } else {\n      var keys = concat.apply([], slice.call(arguments, 1));\n      obj = new Object(obj);\n      for (var i = 0, length = keys.length; i < length; i++) {\n        key = keys[i];\n        if (key in obj) result[key] = obj[key];\n      }\n    }\n    return result;\n  };\n\n   // Return a copy of the object without the blacklisted properties.\n  _.omit = function(obj, iteratee, context) {\n    if (_.isFunction(iteratee)) {\n      iteratee = _.negate(iteratee);\n    } else {\n      var keys = _.map(concat.apply([], slice.call(arguments, 1)), String);\n      iteratee = function(value, key) {\n        return !_.contains(keys, key);\n      };\n    }\n    return _.pick(obj, iteratee, context);\n  };\n\n  // Fill in a given object with default properties.\n  _.defaults = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    for (var i = 1, length = arguments.length; i < length; i++) {\n      var source = arguments[i];\n      for (var prop in source) {\n        if (obj[prop] === void 0) obj[prop] = source[prop];\n      }\n    }\n    return obj;\n  };\n\n  // Create a (shallow-cloned) duplicate of an object.\n  _.clone = function(obj) {\n    if (!_.isObject(obj)) return obj;\n    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);\n  };\n\n  // Invokes interceptor with the obj, and then returns obj.\n  // The primary purpose of this method is to \"tap into\" a method chain, in\n  // order to perform operations on intermediate results within the chain.\n  _.tap = function(obj, interceptor) {\n    interceptor(obj);\n    return obj;\n  };\n\n  // Internal recursive comparison function for `isEqual`.\n  var eq = function(a, b, aStack, bStack) {\n    // Identical objects are equal. `0 === -0`, but they aren't identical.\n    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\n    if (a === b) return a !== 0 || 1 / a === 1 / b;\n    // A strict comparison is necessary because `null == undefined`.\n    if (a == null || b == null) return a === b;\n    // Unwrap any wrapped objects.\n    if (a instanceof _) a = a._wrapped;\n    if (b instanceof _) b = b._wrapped;\n    // Compare `[[Class]]` names.\n    var className = toString.call(a);\n    if (className !== toString.call(b)) return false;\n    switch (className) {\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\n      case '[object RegExp]':\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\n      case '[object String]':\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\n        // equivalent to `new String(\"5\")`.\n        return '' + a === '' + b;\n      case '[object Number]':\n        // `NaN`s are equivalent, but non-reflexive.\n        // Object(NaN) is equivalent to NaN\n        if (+a !== +a) return +b !== +b;\n        // An `egal` comparison is performed for other numeric values.\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\n      case '[object Date]':\n      case '[object Boolean]':\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\n        // millisecond representations. Note that invalid dates with millisecond representations\n        // of `NaN` are not equivalent.\n        return +a === +b;\n    }\n    if (typeof a != 'object' || typeof b != 'object') return false;\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\n    var length = aStack.length;\n    while (length--) {\n      // Linear search. Performance is inversely proportional to the number of\n      // unique nested structures.\n      if (aStack[length] === a) return bStack[length] === b;\n    }\n    // Objects with different constructors are not equivalent, but `Object`s\n    // from different frames are.\n    var aCtor = a.constructor, bCtor = b.constructor;\n    if (\n      aCtor !== bCtor &&\n      // Handle Object.create(x) cases\n      'constructor' in a && 'constructor' in b &&\n      !(_.isFunction(aCtor) && aCtor instanceof aCtor &&\n        _.isFunction(bCtor) && bCtor instanceof bCtor)\n    ) {\n      return false;\n    }\n    // Add the first object to the stack of traversed objects.\n    aStack.push(a);\n    bStack.push(b);\n    var size, result;\n    // Recursively compare objects and arrays.\n    if (className === '[object Array]') {\n      // Compare array lengths to determine if a deep comparison is necessary.\n      size = a.length;\n      result = size === b.length;\n      if (result) {\n        // Deep compare the contents, ignoring non-numeric properties.\n        while (size--) {\n          if (!(result = eq(a[size], b[size], aStack, bStack))) break;\n        }\n      }\n    } else {\n      // Deep compare objects.\n      var keys = _.keys(a), key;\n      size = keys.length;\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\n      result = _.keys(b).length === size;\n      if (result) {\n        while (size--) {\n          // Deep compare each member\n          key = keys[size];\n          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;\n        }\n      }\n    }\n    // Remove the first object from the stack of traversed objects.\n    aStack.pop();\n    bStack.pop();\n    return result;\n  };\n\n  // Perform a deep comparison to check if two objects are equal.\n  _.isEqual = function(a, b) {\n    return eq(a, b, [], []);\n  };\n\n  // Is a given array, string, or object empty?\n  // An \"empty\" object has no enumerable own-properties.\n  _.isEmpty = function(obj) {\n    if (obj == null) return true;\n    if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return obj.length === 0;\n    for (var key in obj) if (_.has(obj, key)) return false;\n    return true;\n  };\n\n  // Is a given value a DOM element?\n  _.isElement = function(obj) {\n    return !!(obj && obj.nodeType === 1);\n  };\n\n  // Is a given value an array?\n  // Delegates to ECMA5's native Array.isArray\n  _.isArray = nativeIsArray || function(obj) {\n    return toString.call(obj) === '[object Array]';\n  };\n\n  // Is a given variable an object?\n  _.isObject = function(obj) {\n    var type = typeof obj;\n    return type === 'function' || type === 'object' && !!obj;\n  };\n\n  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp.\n  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp'], function(name) {\n    _['is' + name] = function(obj) {\n      return toString.call(obj) === '[object ' + name + ']';\n    };\n  });\n\n  // Define a fallback version of the method in browsers (ahem, IE), where\n  // there isn't any inspectable \"Arguments\" type.\n  if (!_.isArguments(arguments)) {\n    _.isArguments = function(obj) {\n      return _.has(obj, 'callee');\n    };\n  }\n\n  // Optimize `isFunction` if appropriate. Work around an IE 11 bug.\n  if (typeof /./ !== 'function') {\n    _.isFunction = function(obj) {\n      return typeof obj == 'function' || false;\n    };\n  }\n\n  // Is a given object a finite number?\n  _.isFinite = function(obj) {\n    return isFinite(obj) && !isNaN(parseFloat(obj));\n  };\n\n  // Is the given value `NaN`? (NaN is the only number which does not equal itself).\n  _.isNaN = function(obj) {\n    return _.isNumber(obj) && obj !== +obj;\n  };\n\n  // Is a given value a boolean?\n  _.isBoolean = function(obj) {\n    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';\n  };\n\n  // Is a given value equal to null?\n  _.isNull = function(obj) {\n    return obj === null;\n  };\n\n  // Is a given variable undefined?\n  _.isUndefined = function(obj) {\n    return obj === void 0;\n  };\n\n  // Shortcut function for checking if an object has a given property directly\n  // on itself (in other words, not on a prototype).\n  _.has = function(obj, key) {\n    return obj != null && hasOwnProperty.call(obj, key);\n  };\n\n  // Utility Functions\n  // -----------------\n\n  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its\n  // previous owner. Returns a reference to the Underscore object.\n  _.noConflict = function() {\n    root._ = previousUnderscore;\n    return this;\n  };\n\n  // Keep the identity function around for default iteratees.\n  _.identity = function(value) {\n    return value;\n  };\n\n  _.constant = function(value) {\n    return function() {\n      return value;\n    };\n  };\n\n  _.noop = function(){};\n\n  _.property = function(key) {\n    return function(obj) {\n      return obj[key];\n    };\n  };\n\n  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.\n  _.matches = function(attrs) {\n    var pairs = _.pairs(attrs), length = pairs.length;\n    return function(obj) {\n      if (obj == null) return !length;\n      obj = new Object(obj);\n      for (var i = 0; i < length; i++) {\n        var pair = pairs[i], key = pair[0];\n        if (pair[1] !== obj[key] || !(key in obj)) return false;\n      }\n      return true;\n    };\n  };\n\n  // Run a function **n** times.\n  _.times = function(n, iteratee, context) {\n    var accum = Array(Math.max(0, n));\n    iteratee = createCallback(iteratee, context, 1);\n    for (var i = 0; i < n; i++) accum[i] = iteratee(i);\n    return accum;\n  };\n\n  // Return a random integer between min and max (inclusive).\n  _.random = function(min, max) {\n    if (max == null) {\n      max = min;\n      min = 0;\n    }\n    return min + Math.floor(Math.random() * (max - min + 1));\n  };\n\n  // A (possibly faster) way to get the current timestamp as an integer.\n  _.now = Date.now || function() {\n    return new Date().getTime();\n  };\n\n   // List of HTML entities for escaping.\n  var escapeMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#x27;',\n    '`': '&#x60;'\n  };\n  var unescapeMap = _.invert(escapeMap);\n\n  // Functions for escaping and unescaping strings to/from HTML interpolation.\n  var createEscaper = function(map) {\n    var escaper = function(match) {\n      return map[match];\n    };\n    // Regexes for identifying a key that needs to be escaped\n    var source = '(?:' + _.keys(map).join('|') + ')';\n    var testRegexp = RegExp(source);\n    var replaceRegexp = RegExp(source, 'g');\n    return function(string) {\n      string = string == null ? '' : '' + string;\n      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;\n    };\n  };\n  _.escape = createEscaper(escapeMap);\n  _.unescape = createEscaper(unescapeMap);\n\n  // If the value of the named `property` is a function then invoke it with the\n  // `object` as context; otherwise, return it.\n  _.result = function(object, property) {\n    if (object == null) return void 0;\n    var value = object[property];\n    return _.isFunction(value) ? object[property]() : value;\n  };\n\n  // Generate a unique integer id (unique within the entire client session).\n  // Useful for temporary DOM ids.\n  var idCounter = 0;\n  _.uniqueId = function(prefix) {\n    var id = ++idCounter + '';\n    return prefix ? prefix + id : id;\n  };\n\n  // By default, Underscore uses ERB-style template delimiters, change the\n  // following template settings to use alternative delimiters.\n  _.templateSettings = {\n    evaluate    : /<%([\\s\\S]+?)%>/g,\n    interpolate : /<%=([\\s\\S]+?)%>/g,\n    escape      : /<%-([\\s\\S]+?)%>/g\n  };\n\n  // When customizing `templateSettings`, if you don't want to define an\n  // interpolation, evaluation or escaping regex, we need one that is\n  // guaranteed not to match.\n  var noMatch = /(.)^/;\n\n  // Certain characters need to be escaped so that they can be put into a\n  // string literal.\n  var escapes = {\n    \"'\":      \"'\",\n    '\\\\':     '\\\\',\n    '\\r':     'r',\n    '\\n':     'n',\n    '\\u2028': 'u2028',\n    '\\u2029': 'u2029'\n  };\n\n  var escaper = /\\\\|'|\\r|\\n|\\u2028|\\u2029/g;\n\n  var escapeChar = function(match) {\n    return '\\\\' + escapes[match];\n  };\n\n  // JavaScript micro-templating, similar to John Resig's implementation.\n  // Underscore templating handles arbitrary delimiters, preserves whitespace,\n  // and correctly escapes quotes within interpolated code.\n  // NB: `oldSettings` only exists for backwards compatibility.\n  _.template = function(text, settings, oldSettings) {\n    if (!settings && oldSettings) settings = oldSettings;\n    settings = _.defaults({}, settings, _.templateSettings);\n\n    // Combine delimiters into one regular expression via alternation.\n    var matcher = RegExp([\n      (settings.escape || noMatch).source,\n      (settings.interpolate || noMatch).source,\n      (settings.evaluate || noMatch).source\n    ].join('|') + '|$', 'g');\n\n    // Compile the template source, escaping string literals appropriately.\n    var index = 0;\n    var source = \"__p+='\";\n    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {\n      source += text.slice(index, offset).replace(escaper, escapeChar);\n      index = offset + match.length;\n\n      if (escape) {\n        source += \"'+\\n((__t=(\" + escape + \"))==null?'':_.escape(__t))+\\n'\";\n      } else if (interpolate) {\n        source += \"'+\\n((__t=(\" + interpolate + \"))==null?'':__t)+\\n'\";\n      } else if (evaluate) {\n        source += \"';\\n\" + evaluate + \"\\n__p+='\";\n      }\n\n      // Adobe VMs need the match returned to produce the correct offest.\n      return match;\n    });\n    source += \"';\\n\";\n\n    // If a variable is not specified, place data values in local scope.\n    if (!settings.variable) source = 'with(obj||{}){\\n' + source + '}\\n';\n\n    source = \"var __t,__p='',__j=Array.prototype.join,\" +\n      \"print=function(){__p+=__j.call(arguments,'');};\\n\" +\n      source + 'return __p;\\n';\n\n    try {\n      var render = new Function(settings.variable || 'obj', '_', source);\n    } catch (e) {\n      e.source = source;\n      throw e;\n    }\n\n    var template = function(data) {\n      return render.call(this, data, _);\n    };\n\n    // Provide the compiled source as a convenience for precompilation.\n    var argument = settings.variable || 'obj';\n    template.source = 'function(' + argument + '){\\n' + source + '}';\n\n    return template;\n  };\n\n  // Add a \"chain\" function. Start chaining a wrapped Underscore object.\n  _.chain = function(obj) {\n    var instance = _(obj);\n    instance._chain = true;\n    return instance;\n  };\n\n  // OOP\n  // ---------------\n  // If Underscore is called as a function, it returns a wrapped object that\n  // can be used OO-style. This wrapper holds altered versions of all the\n  // underscore functions. Wrapped objects may be chained.\n\n  // Helper function to continue chaining intermediate results.\n  var result = function(obj) {\n    return this._chain ? _(obj).chain() : obj;\n  };\n\n  // Add your own custom functions to the Underscore object.\n  _.mixin = function(obj) {\n    _.each(_.functions(obj), function(name) {\n      var func = _[name] = obj[name];\n      _.prototype[name] = function() {\n        var args = [this._wrapped];\n        push.apply(args, arguments);\n        return result.call(this, func.apply(_, args));\n      };\n    });\n  };\n\n  // Add all of the Underscore functions to the wrapper object.\n  _.mixin(_);\n\n  // Add all mutator Array functions to the wrapper.\n  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      var obj = this._wrapped;\n      method.apply(obj, arguments);\n      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];\n      return result.call(this, obj);\n    };\n  });\n\n  // Add all accessor Array functions to the wrapper.\n  _.each(['concat', 'join', 'slice'], function(name) {\n    var method = ArrayProto[name];\n    _.prototype[name] = function() {\n      return result.call(this, method.apply(this._wrapped, arguments));\n    };\n  });\n\n  // Extracts the result from a wrapped and chained object.\n  _.prototype.value = function() {\n    return this._wrapped;\n  };\n\n  // AMD registration happens at the end for compatibility with AMD loaders\n  // that may not enforce next-turn semantics on modules. Even though general\n  // practice for AMD registration is to be anonymous, underscore registers\n  // as a named module because, like jQuery, it is a base library that is\n  // popular enough to be bundled in a third party lib, but not be part of\n  // an AMD load request. Those cases could generate an error when an\n  // anonymous define() is called outside of a loader request.\n  if (typeof define === 'function' && define.amd) {\n    define('underscore', [], function() {\n      return _;\n    });\n  }\n}.call(this));\n\n},{}],7:[function(require,module,exports){\n/**\n * VexFlow 1.2.25 built on 2014-11-28.\n * Copyright (c) 2010 Mohit Muthanna Cheppudira <mohit@muthanna.com>\n *\n * http://www.vexflow.com  http://github.com/0xfe/vexflow\n */\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements utility methods used by the rest of the VexFlow\n// codebase.\n//\n// ## JSHint Settings\n//\n/* global window: false */\n/* global document: false */\n\nif (typeof Vex === 'undefined') {\n  /* global Vex: true */\n  Vex = function() {};\n}\n\n// Default log function sends all arguments to console.\nVex.L = function(block, args) {\n  if (!args) return;\n  var line = Array.prototype.slice.call(args).join(\" \");\n  window.console.log(block + \": \" + line);\n};\n\n// Default runtime exception.\nVex.RuntimeError = function(code, message) {\n  this.code = code;\n  this.message = message;\n};\nVex.RuntimeError.prototype.toString = function() {\n  return \"RuntimeError: \" + this.message;\n};\n\n// Shortcut method for `RuntimeError`.\nVex.RERR = Vex.RuntimeError;\n\n// Merge `destination` hash with `source` hash, overwriting like keys\n// in `source` if necessary.\nVex.Merge = function(destination, source) {\n  for (var property in source)\n    destination[property] = source[property];\n  return destination;\n};\n\n// DEPRECATED. Use `Math.min`.\nVex.Min = function(a, b) {\n  return (a > b) ? b : a;\n};\n\n// DEPRECATED. Use `Math.max`.\nVex.Max = function(a, b) {\n  return (a > b) ? a : b;\n};\n\n// Round number to nearest fractional value (`.5`, `.25`, etc.)\nVex.RoundN = function(x, n) {\n  return (x % n) >= (n/2) ?\n    parseInt(x / n, 10) * n + n : parseInt(x / n, 10) * n;\n};\n\n// Locate the mid point between stave lines. Returns a fractional line if a space.\nVex.MidLine = function(a, b) {\n  var mid_line = b + (a - b) / 2;\n  if (mid_line % 2 > 0) {\n    mid_line = Vex.RoundN(mid_line * 10, 5) / 10;\n  }\n  return mid_line;\n};\n\n// Take `arr` and return a new list consisting of the sorted, unique,\n// contents of arr. Does not modify `arr`.\nVex.SortAndUnique = function(arr, cmp, eq) {\n  if (arr.length > 1) {\n    var newArr = [];\n    var last;\n    arr.sort(cmp);\n\n    for (var i = 0; i < arr.length; ++i) {\n      if (i === 0 || !eq(arr[i], last)) {\n        newArr.push(arr[i]);\n      }\n      last = arr[i];\n    }\n\n    return newArr;\n  } else {\n    return arr;\n  }\n};\n\n// Check if array `a` contains `obj`.\nVex.Contains = function(a, obj) {\n  var i = a.length;\n  while (i--) {\n    if (a[i] === obj) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Get the 2D Canvas context from DOM element `canvas_sel`.\nVex.getCanvasContext = function(canvas_sel) {\n  if (!canvas_sel)\n    throw new Vex.RERR(\"BadArgument\", \"Invalid canvas selector: \" + canvas_sel);\n\n  var canvas = document.getElementById(canvas_sel);\n  if (!(canvas && canvas.getContext)) {\n    throw new Vex.RERR(\"UnsupportedBrowserError\",\n        \"This browser does not support HTML5 Canvas\");\n  }\n\n  return canvas.getContext('2d');\n};\n\n// Draw a tiny dot marker on the specified canvas. A great debugging aid.\n//\n// `ctx`: Canvas context.\n// `x`, `y`: Dot coordinates.\nVex.drawDot = function(ctx, x, y, color) {\n  var c = color || \"#f55\";\n  ctx.save();\n  ctx.fillStyle = c;\n\n  //draw a circle\n  ctx.beginPath();\n  ctx.arc(x, y, 3, 0, Math.PI*2, true);\n  ctx.closePath();\n  ctx.fill();\n  ctx.restore();\n};\n\n// Benchmark. Run function `f` once and report time elapsed shifted by `s` milliseconds.\nVex.BM = function(s, f) {\n  var start_time = new Date().getTime();\n  f();\n  var elapsed = new Date().getTime() - start_time;\n  Vex.L(s + elapsed + \"ms\");\n};\n\n// Basic classical inheritance helper. Usage:\n// ```\n// // Vex.Inherit(Child, Parent, {\n// //   getName: function() {return this.name;},\n// //   setName: function(name) {this.name = name}\n// // });\n// //\n// // Returns 'Child'.\n// ```\nVex.Inherit = (function () {\n  var F = function () {};\n  // `C` is Child. `P` is parent. `O` is an object to\n  // to extend `C` with.\n  return function (C, P, O) {\n    F.prototype = P.prototype;\n    C.prototype = new F();\n    C.superclass = P.prototype;\n    C.prototype.constructor = C;\n    Vex.Merge(C.prototype, O);\n    return C;\n  };\n}());\n\n// UMD to export Vex.\n//\n/* global require: false */\n/* global define: false */\n/* global module: false */\nif (typeof require == \"function\") {\n  try {\n    module.exports = Vex;\n  } catch (e) {}\n} else if (typeof define == \"function\" && define.amd) {\n  define(\"Vex\", [], function(){ return Vex; });\n} else {\n  (this || window)[\"Vex\"] = Vex;\n}\n\n/**\n * Vex Flow - Mohit Muthanna <mohit@muthanna.com>\n */\n\n/**\n * New namespace.\n */\n\nif (typeof Vex.Flow === 'undefined') {\n  Vex.Flow = {\n    /**\n     * The resolution used for all the rhythm timing in this\n     * library.\n     *\n     * @const\n     * @type {number}\n     */\n    RESOLUTION: 16384,\n\n    /* Kerning (DEPRECATED) */\n    IsKerned: true\n  };\n}\n\n// Fraction class that represents a rational number\n// @author zz85\n// @author incompleteopus (modifications)\n\nVex.Flow.Fraction = (function() {\n  function Fraction(numerator, denominator) {\n    this.set(numerator, denominator);\n  }\n\n  /**\n   * GCD: Find greatest common divisor using Euclidean algorithm\n   */\n  Fraction.GCD = function(a, b) {\n    if (typeof a !== \"number\" || typeof b !== \"number\") {\n      throw new Vex.RERR(\"BadArgument\", \"Invalid numbers: \" + a + \", \" + b);\n    }\n\n    var t;\n\n    while (b !== 0) {\n      t = b;\n      b = a % b;\n      a = t;\n    }\n\n    return a;\n  };\n\n  /**\n   * LCM: Lowest common multiple\n   */\n  Fraction.LCM = function(a, b) {\n    return ((a * b) / Fraction.GCD(a, b));\n  };\n\n  /**\n   * LCMM: Lowest common multiple for more than two numbers\n   */\n  Fraction.LCMM = function(args) {\n    if (args.length === 0) {\n      return 0;\n    } else if (args.length == 1) {\n      return args[0];\n    } else if (args.length == 2) {\n      return Vex.Flow.Fraction.LCM(args[0], args[1]);\n    } else {\n      var arg0 = args[0];\n      args.shift();\n      return Fraction.LCM(arg0, Vex.Flow.Fraction.LCMM(args));\n    }\n  };\n\n  Fraction.prototype = {\n    set: function(numerator, denominator) {\n      this.numerator = numerator === undefined ? 1 : numerator;\n      this.denominator = denominator === undefined ? 1 : denominator;\n      return this;\n    },\n\n    value: function() {\n      return this.numerator / this.denominator;\n    },\n\n    simplify: function() {\n      var u = this.numerator;\n      var d = this.denominator;\n\n      var gcd = Vex.Flow.Fraction.GCD(u, d);\n      u /= gcd;\n      d /= gcd;\n\n      if (d < 0) {\n        d = -d;\n        u = -u;\n      }\n      return this.set(u, d);\n    },\n\n    add: function(param1, param2) {\n      var otherNumerator;\n      var otherDenominator;\n\n      if (param1 instanceof Vex.Flow.Fraction) {\n        otherNumerator = param1.numerator;\n        otherDenominator = param1.denominator;\n      } else {\n        if (param1 !== undefined) {\n          otherNumerator = param1;\n        } else {\n          otherNumerator = 0;\n        }\n\n        if (param2 !== undefined) {\n          otherDenominator = param2;\n        } else {\n          otherDenominator = 1;\n        }\n      }\n\n      var lcm = Vex.Flow.Fraction.LCM(this.denominator, otherDenominator);\n      var a = lcm / this.denominator;\n      var b = lcm / otherDenominator;\n\n      var u = this.numerator * a + otherNumerator * b;\n      return this.set(u, lcm);\n    },\n\n    subtract: function(param1, param2) {\n      var otherNumerator;\n      var otherDenominator;\n\n      if (param1 instanceof Vex.Flow.Fraction) {\n        otherNumerator = param1.numerator;\n        otherDenominator = param1.denominator;\n      } else {\n        if (param1 !== undefined) {\n          otherNumerator = param1;\n        } else {\n          otherNumerator = 0;\n        }\n\n        if (param2 !== undefined) {\n          otherDenominator = param2;\n        } else {\n          otherDenominator = 1;\n        }\n      }\n\n      var lcm = Vex.Flow.Fraction.LCM(this.denominator, otherDenominator);\n      var a = lcm / this.denominator;\n      var b = lcm / otherDenominator;\n\n      var u = this.numerator * a - otherNumerator * b;\n      return this.set(u, lcm);\n    },\n\n    multiply: function(param1, param2) {\n      var otherNumerator;\n      var otherDenominator;\n\n      if (param1 instanceof Vex.Flow.Fraction) {\n        otherNumerator = param1.numerator;\n        otherDenominator = param1.denominator;\n      } else {\n        if (param1 !== undefined) {\n          otherNumerator = param1;\n        } else {\n          otherNumerator = 1;\n        }\n\n        if (param2 !== undefined) {\n          otherDenominator = param2;\n        } else {\n          otherDenominator = 1;\n        }\n      }\n\n      return this.set(this.numerator * otherNumerator, this.denominator * otherDenominator);\n    },\n\n    divide: function(param1, param2) {\n      var otherNumerator;\n      var otherDenominator;\n\n      if (param1 instanceof Vex.Flow.Fraction) {\n        otherNumerator = param1.numerator;\n        otherDenominator = param1.denominator;\n      } else {\n        if (param1 !== undefined) {\n          otherNumerator = param1;\n        } else {\n          otherNumerator = 1;\n        }\n\n        if (param2 !== undefined) {\n          otherDenominator = param2;\n        } else {\n          otherDenominator = 1;\n        }\n      }\n\n      return this.set(this.numerator * otherDenominator, this.denominator * otherNumerator);\n    },\n\n\n    // Simplifies both sides and checks if they are equal.\n    equals: function(compare) {\n      var a = Vex.Flow.Fraction.__compareA.copy(compare).simplify();\n      var b = Vex.Flow.Fraction.__compareB.copy(this).simplify();\n\n      return (a.numerator === b.numerator) && (a.denominator === b.denominator);\n    },\n    \n    // Greater than operator.\n    greaterThan: function(compare) {\n      var a = Vex.Flow.Fraction.__compareB.copy(this);\n      a.subtract(compare);\n      return (a.numerator > 0);\n    },\n    \n    // Greater than or equals operator.\n    greaterThanEquals: function(compare) {\n      var a = Vex.Flow.Fraction.__compareB.copy(this);\n      a.subtract(compare);\n      return (a.numerator >= 0);\n    },\n\n    // Less than operator.\n    lessThan: function(compare) {\n      return !(this.greaterThanEquals(compare));  \n    },\n\n    // Less than or equals operator.\n    lessThanEquals: function(compare) {\n      return !(this.greaterThan(compare));  \n    },\n\n    // Creates a new copy with this current values.\n    clone: function() {\n      return new Vex.Flow.Fraction(this.numerator, this.denominator);\n    },\n\n    // Copies value of another Fraction into itself.\n    copy: function(copy) {\n      return this.set(copy.numerator, copy.denominator);\n    },\n\n    // Returns the integer component eg. (4/2) == 2\n    quotient: function() {\n      return Math.floor(this.numerator / this.denominator);\n    },\n\n    // Returns the fraction component when reduced to a mixed number\n    fraction: function() {\n      return this.numerator % this.denominator;\n    },\n\n    // Returns the absolute value\n    abs: function() {\n      this.denominator = Math.abs(this.denominator);\n      this.numerator = Math.abs(this.numerator);\n      return this;\n    },\n\n    // Returns a raw string representation\n    toString: function() {\n      return this.numerator + '/' + this.denominator;\n    },\n\n    // Returns a simplified string respresentation\n    toSimplifiedString: function() {\n      return Vex.Flow.Fraction.__tmp.copy(this).simplify().toString();\n    },\n\n    // Returns string representation in mixed form\n    toMixedString: function() {\n      var s = '';\n      var q = this.quotient();\n      var f = Vex.Flow.Fraction.__tmp.copy(this);\n\n      if (q < 0) {\n        f.abs().fraction();\n      } else {\n        f.fraction();\n      }\n\n      if (q !== 0) {\n        s += q;\n\n        if (f.numerator !== 0) {\n          s += ' ' + f.toSimplifiedString();\n        }\n      } else {\n        if (f.numerator === 0) {\n          s = '0';\n        } else {\n          s = f.toSimplifiedString();\n        }\n      }\n\n      return s;\n    },\n\n    // Parses a fraction string\n    parse: function(str) {\n      var i = str.split('/');\n      var n = parseInt(i[0], 10);\n      var d = (i[1]) ? parseInt(i[1], 10) : 1;\n\n      return this.set(n, d);\n    }\n  };\n\n  // Temporary cached objects\n  Fraction.__compareA = new Fraction();\n  Fraction.__compareB = new Fraction();\n  Fraction.__tmp = new Fraction();\n\n  return Fraction;\n}());\n\n\n// Vex Flow Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n//\n// Requires vex.js.\n\nVex.Flow.STEM_WIDTH = 1.5;\nVex.Flow.STEM_HEIGHT = 32;\nVex.Flow.STAVE_LINE_THICKNESS = 2;\n\nVex.Flow.clefProperties = function(clef) {\n  if (!clef) throw new Vex.RERR(\"BadArgument\", \"Invalid clef: \" + clef);\n\n  var props = Vex.Flow.clefProperties.values[clef];\n  if (!props) throw new Vex.RERR(\"BadArgument\", \"Invalid clef: \" + clef);\n\n  return props;\n};\n\nVex.Flow.clefProperties.values = {\n  'treble':  { line_shift: 0 },\n  'bass':    { line_shift: 6 },\n  'tenor':   { line_shift: 4 },\n  'alto':    { line_shift: 3 },\n  'soprano': { line_shift: 1 },\n  'percussion': { line_shift: 0 },\n  'mezzo-soprano': { line_shift: 2 },\n  'baritone-c': { line_shift: 5 },\n  'baritone-f': { line_shift: 5 },\n  'subbass': { line_shift: 7 },\n  'french': { line_shift: -1 }\n};\n\n/*\n  Take a note in the format \"Key/Octave\" (e.g., \"C/5\") and return properties.\n\n  The last argument, params, is a struct the currently can contain one option, \n  octave_shift for clef ottavation (0 = default; 1 = 8va; -1 = 8vb, etc.).\n*/\nVex.Flow.keyProperties = function(key, clef, params) {\n  if (clef === undefined) {\n    clef = 'treble';\n  }\n  var options = {\n    octave_shift: 0\n  };\n  if (typeof params == \"object\") {\n    Vex.Merge(options, params);\n  }\n\n  var pieces = key.split(\"/\");\n\n  if (pieces.length < 2) {\n    throw new Vex.RERR(\"BadArguments\",\n        \"Key must have note + octave and an optional glyph: \" + key);\n  }\n\n  var k = pieces[0].toUpperCase();\n  var value = Vex.Flow.keyProperties.note_values[k];\n  if (!value) throw new Vex.RERR(\"BadArguments\", \"Invalid key name: \" + k);\n  if (value.octave) pieces[1] = value.octave;\n\n  var o = parseInt(pieces[1]);\n\n  // Octave_shift is the shift to compensate for clef 8va/8vb.\n  o += -1 * options.octave_shift;\n\n  var base_index = (o * 7) - (4 * 7);\n  var line = (base_index + value.index) / 2;\n  line += Vex.Flow.clefProperties(clef).line_shift;\n\n  var stroke = 0;\n\n  if (line <= 0 && (((line * 2) % 2) === 0)) stroke = 1;  // stroke up\n  if (line >= 6 && (((line * 2) % 2) === 0)) stroke = -1; // stroke down\n\n  // Integer value for note arithmetic.\n  var int_value = (typeof(value.int_val)!='undefined') ? (o * 12) +\n    value.int_val : null;\n\n  /* Check if the user specified a glyph. */\n  var code = value.code;\n  var shift_right = value.shift_right;\n  if ((pieces.length > 2) && (pieces[2])) {\n    var glyph_name = pieces[2].toUpperCase();\n    var note_glyph = Vex.Flow.keyProperties.note_glyph[glyph_name];\n    if (note_glyph) {\n      code = note_glyph.code;\n      shift_right = note_glyph.shift_right;\n    }\n  }\n\n  return {\n    key: k,\n    octave: o,\n    line: line,\n    int_value: int_value,\n    accidental: value.accidental,\n    code: code,\n    stroke: stroke,\n    shift_right: shift_right,\n    displaced: false\n  };\n};\n\nVex.Flow.keyProperties.note_values = {\n  'C':  { index: 0, int_val: 0, accidental: null },\n  'CN': { index: 0, int_val: 0, accidental: \"n\" },\n  'C#': { index: 0, int_val: 1, accidental: \"#\" },\n  'C##': { index: 0, int_val: 2, accidental: \"##\" },\n  'CB': { index: 0, int_val: -1, accidental: \"b\" },\n  'CBB': { index: 0, int_val: -2, accidental: \"bb\" },\n  'D':  { index: 1, int_val: 2, accidental: null },\n  'DN': { index: 1, int_val: 2, accidental: \"n\" },\n  'D#': { index: 1, int_val: 3, accidental: \"#\" },\n  'D##': { index: 1, int_val: 4, accidental: \"##\" },\n  'DB': { index: 1, int_val: 1, accidental: \"b\" },\n  'DBB': { index: 1, int_val: 0, accidental: \"bb\" },\n  'E':  { index: 2, int_val: 4, accidental: null },\n  'EN': { index: 2, int_val: 4, accidental: \"n\" },\n  'E#': { index: 2, int_val: 5, accidental: \"#\" },\n  'E##': { index: 2, int_val: 6, accidental: \"##\" },\n  'EB': { index: 2, int_val: 3, accidental: \"b\" },\n  'EBB': { index: 2, int_val: 2, accidental: \"bb\" },\n  'F':  { index: 3, int_val: 5, accidental: null },\n  'FN': { index: 3, int_val: 5, accidental: \"n\" },\n  'F#': { index: 3, int_val: 6, accidental: \"#\" },\n  'F##': { index: 3, int_val: 7, accidental: \"##\" },\n  'FB': { index: 3, int_val: 4, accidental: \"b\" },\n  'FBB': { index: 3, int_val: 3, accidental: \"bb\" },\n  'G':  { index: 4, int_val: 7, accidental: null },\n  'GN': { index: 4, int_val: 7, accidental: \"n\" },\n  'G#': { index: 4, int_val: 8, accidental: \"#\" },\n  'G##': { index: 4, int_val: 9, accidental: \"##\" },\n  'GB': { index: 4, int_val: 6, accidental: \"b\" },\n  'GBB': { index: 4, int_val: 5, accidental: \"bb\" },\n  'A':  { index: 5, int_val: 9, accidental: null },\n  'AN': { index: 5, int_val: 9, accidental: \"n\" },\n  'A#': { index: 5, int_val: 10, accidental: \"#\" },\n  'A##': { index: 5, int_val: 11, accidental: \"##\" },\n  'AB': { index: 5, int_val: 8, accidental: \"b\" },\n  'ABB': { index: 5, int_val: 7, accidental: \"bb\" },\n  'B':  { index: 6, int_val: 11, accidental: null },\n  'BN': { index: 6, int_val: 11, accidental: \"n\" },\n  'B#': { index: 6, int_val: 12, accidental: \"#\" },\n  'B##': { index: 6, int_val: 13, accidental: \"##\" },\n  'BB': { index: 6, int_val: 10, accidental: \"b\" },\n  'BBB': { index: 6, int_val: 9, accidental: \"bb\" },\n  'R': { index: 6, int_val: 9, rest: true }, // Rest\n  'X':  {\n    index: 6,\n    accidental: \"\",\n    octave: 4,\n    code: \"v3e\",\n    shift_right: 5.5\n  }\n};\n\nVex.Flow.keyProperties.note_glyph = {\n  /* Diamond */\n  'D0':  { code: \"v27\", shift_right: -0.5 },\n  'D1':  { code: \"v2d\", shift_right: -0.5 },\n  'D2':  { code: \"v22\", shift_right: -0.5 },\n  'D3':  { code: \"v70\", shift_right: -0.5 },\n\n  /* Triangle */\n  'T0':  { code: \"v49\", shift_right: -2 },\n  'T1':  { code: \"v93\", shift_right: 0.5 },\n  'T2':  { code: \"v40\", shift_right: 0.5 },\n  'T3':  { code: \"v7d\", shift_right: 0.5 },\n\n  /* Cross */\n  'X0':  { code: \"v92\", shift_right: -2 },\n  'X1':  { code: \"v95\", shift_right: -0.5 },\n  'X2':  { code: \"v7f\", shift_right: 0.5 },\n  'X3':  { code: \"v3b\", shift_right: -2 }\n};\n\nVex.Flow.integerToNote = function(integer) {\n  if (typeof(integer) == \"undefined\")\n    throw new Vex.RERR(\"BadArguments\", \"Undefined integer for integerToNote\");\n\n  if (integer < -2)\n    throw new Vex.RERR(\"BadArguments\",\n        \"integerToNote requires integer > -2: \" + integer);\n\n  var noteValue = Vex.Flow.integerToNote.table[integer];\n  if (!noteValue)\n    throw new Vex.RERR(\"BadArguments\", \"Unknown note value for integer: \" +\n        integer);\n\n  return noteValue;\n};\n\nVex.Flow.integerToNote.table = {\n  0: \"C\",\n  1: \"C#\",\n  2: \"D\",\n  3: \"D#\",\n  4: \"E\",\n  5: \"F\",\n  6: \"F#\",\n  7: \"G\",\n  8: \"G#\",\n  9: \"A\",\n  10: \"A#\",\n  11: \"B\"\n};\n\n\nVex.Flow.tabToGlyph = function(fret) {\n  var glyph = null;\n  var width = 0;\n  var shift_y = 0;\n\n  if (fret.toString().toUpperCase() == \"X\") {\n    glyph = \"v7f\";\n    width = 7;\n    shift_y = -4.5;\n  } else {\n    width = Vex.Flow.textWidth(fret.toString());\n  }\n\n  return {\n    text: fret,\n    code: glyph,\n    width: width,\n    shift_y: shift_y\n  };\n};\n\nVex.Flow.textWidth = function(text) {\n  return 6 * text.toString().length;\n};\n\nVex.Flow.articulationCodes = function(artic) {\n  return Vex.Flow.articulationCodes.articulations[artic];\n};\n\nVex.Flow.articulationCodes.articulations = {\n  \"a.\": {   // Staccato\n    code: \"v23\",\n    width: 4,\n    shift_right: -2,\n    shift_up: 8,\n    shift_down: 0,\n    between_lines: true\n  },\n  \"av\": {   // Staccatissimo\n    code: \"v28\",\n    width: 4,\n    shift_right: 0,\n    shift_up: 11,\n    shift_down: 5,\n    between_lines: true\n  },\n  \"a>\": {   // Accent\n    code: \"v42\",\n    width: 10,\n    shift_right: 5,\n    shift_up: 8,\n    shift_down: 1,\n    between_lines: true\n  },\n  \"a-\": {   // Tenuto\n    code: \"v25\",\n    width: 9,\n    shift_right: -4,\n    shift_up: 17,\n    shift_down: 10,\n    between_lines: true\n  },\n  \"a^\": {   // Marcato\n    code: \"va\",\n    width: 8,\n    shift_right: 0,\n    shift_up: -4,\n    shift_down: -2,\n    between_lines: false\n  },\n  \"a+\": {   // Left hand pizzicato\n    code: \"v8b\",\n    width: 9,\n    shift_right: -4,\n    shift_up: 12,\n    shift_down: 12,\n    between_lines: false\n  },\n  \"ao\": {   // Snap pizzicato\n    code: \"v94\",\n    width: 8,\n    shift_right: 0,\n    shift_up: -4,\n    shift_down: 6,\n    between_lines: false\n  },\n  \"ah\": {   // Natural harmonic or open note\n    code: \"vb9\",\n    width: 7,\n    shift_right: 0,\n    shift_up: -4,\n    shift_down: 4,\n    between_lines: false\n  },\n  \"a@a\": {   // Fermata above staff\n    code: \"v43\",\n    width: 25,\n    shift_right: 0,\n    shift_up: 8,\n    shift_down: 10,\n    between_lines: false\n  },\n  \"a@u\": {   // Fermata below staff\n    code: \"v5b\",\n    width: 25,\n    shift_right: 0,\n    shift_up: 0,\n    shift_down: -4,\n    between_lines: false\n  },\n  \"a|\": {   // Bow up - up stroke\n    code: \"v75\",\n    width: 8,\n    shift_right: 0,\n    shift_up: 8,\n    shift_down: 10,\n    between_lines: false\n  },\n  \"am\": {   // Bow down - down stroke\n    code: \"v97\",\n    width: 13,\n    shift_right: 0,\n    shift_up: 10,\n    shift_down: 12,\n    between_lines: false\n  },\n  \"a,\": {   // Choked\n    code: \"vb3\",\n    width: 6,\n    shift_right: 8,\n    shift_up: -4,\n    shift_down: 4,\n    between_lines: false\n  }\n};\n\nVex.Flow.accidentalCodes = function(acc) {\n  return Vex.Flow.accidentalCodes.accidentals[acc];\n};\n\nVex.Flow.accidentalCodes.accidentals = {\n  \"#\": {\n    code: \"v18\",\n    width: 10,\n    gracenote_width: 4.5,\n    shift_right: 0,\n    shift_down: 0\n  },\n  \"##\": {\n    code: \"v7f\",\n    width: 13,\n    gracenote_width: 6,\n    shift_right: -1,\n    shift_down: 0\n  },\n  \"b\": {\n    code: \"v44\",\n    width: 8,\n    gracenote_width: 4.5,\n    shift_right: 0,\n    shift_down: 0\n  },\n  \"bb\": {\n    code: \"v26\",\n    width: 14,\n    gracenote_width: 8,\n    shift_right: -3,\n    shift_down: 0\n  },\n  \"n\": {\n    code: \"v4e\",\n    width: 8,\n    gracenote_width: 4.5,\n    shift_right: 0,\n    shift_down: 0\n  },\n  \"{\": {   // Left paren for cautionary accidentals\n    code: \"v9c\",\n    width: 5,\n    shift_right: 2,\n    shift_down: 0\n  },\n  \"}\": {   // Right paren for cautionary accidentals\n    code: \"v84\",\n    width: 5,\n    shift_right: 0,\n    shift_down: 0\n  },\n  \"db\": {\n    code: \"v9e\",\n    width: 16,\n    shift_right: 0,\n    shift_down: 0\n  },\n  \"d\": {\n    code: \"vab\",\n    width: 10,\n    shift_right: 0,\n    shift_down: 0\n  },\n  \"bbs\": {\n    code: \"v90\",\n    width: 13,\n    shift_right: 0,\n    shift_down: 0\n  },\n  \"++\": {\n    code: \"v51\",\n    width: 13,\n    shift_right: 0,\n    shift_down: 0\n  },\n  \"+\": {\n    code: \"v78\",\n    width: 8,\n    shift_right: 0,\n    shift_down: 0\n  }\n};\n\nVex.Flow.ornamentCodes = function(acc) {\n  return Vex.Flow.ornamentCodes.ornaments[acc];\n};\n\nVex.Flow.ornamentCodes.ornaments = {\n  \"mordent\": {\n    code: \"v1e\",\n    shift_right: 1,\n    shift_up: 0,\n    shift_down: 5,\n    width: 14,\n  },\n  \"mordent_inverted\": {\n    code: \"v45\",\n    shift_right: 1,\n    shift_up: 0,\n    shift_down: 5,\n    width: 14,\n  },\n  \"turn\": {\n    code: \"v72\",\n    shift_right: 1,\n    shift_up: 0,\n    shift_down: 5,\n    width: 20,\n  },\n  \"turn_inverted\": {\n    code: \"v33\",\n    shift_right: 1,\n    shift_up: 0,\n    shift_down: 6,\n    width: 20,\n  },\n  \"tr\": {\n    code: \"v1f\",\n    shift_right: 0,\n    shift_up: 5,\n    shift_down: 15,\n    width: 10,\n  },\n  \"upprall\": {\n    code: \"v60\",\n    shift_right: 1,\n    shift_up: -3,\n    shift_down: 6,\n    width: 20,\n  },\n  \"downprall\": {\n    code: \"vb4\",\n    shift_right: 1,\n    shift_up: -3,\n    shift_down: 6,\n    width: 20,\n  },\n  \"prallup\": {\n    code: \"v6d\",\n    shift_right: 1,\n    shift_up: -3,\n    shift_down: 6,\n    width: 20,\n  },\n  \"pralldown\": {\n    code: \"v2c\",\n    shift_right: 1,\n    shift_up: -3,\n    shift_down: 6,\n    width: 20,\n  },\n  \"upmordent\": {\n    code: \"v29\",\n    shift_right: 1,\n    shift_up: -3,\n    shift_down: 6,\n    width: 20,\n  },\n  \"downmordent\": {\n    code: \"v68\",\n    shift_right: 1,\n    shift_up: -3,\n    shift_down: 6,\n    width: 20,\n  },\n  \"lineprall\": {\n    code: \"v20\",\n    shift_right: 1,\n    shift_up: -3,\n    shift_down: 6,\n    width: 20,\n  },\n  \"prallprall\": {\n    code: \"v86\",\n    shift_right: 1,\n    shift_up: -3,\n    shift_down: 6,\n    width: 20,\n  }\n};\n\nVex.Flow.keySignature = function(spec) {\n  var keySpec = Vex.Flow.keySignature.keySpecs[spec];\n\n  if (!keySpec) {\n    throw new Vex.RERR(\"BadKeySignature\",\n        \"Bad key signature spec: '\" + spec + \"'\");\n  }\n\n  if (!keySpec.acc) {\n    return [];\n  }\n\n  var notes = Vex.Flow.keySignature.accidentalList(keySpec.acc);\n\n  var acc_list = [];\n  for (var i = 0; i < keySpec.num; ++i) {\n    var line = notes[i];\n    acc_list.push({type: keySpec.acc, line: line});\n  }\n\n  return acc_list;\n};\n\nVex.Flow.keySignature.keySpecs = {\n  \"C\": {acc: null, num: 0},\n  \"Am\": {acc: null, num: 0},\n  \"F\": {acc: \"b\", num: 1},\n  \"Dm\": {acc: \"b\", num: 1},\n  \"Bb\": {acc: \"b\", num: 2},\n  \"Gm\": {acc: \"b\", num: 2},\n  \"Eb\": {acc: \"b\", num: 3},\n  \"Cm\": {acc: \"b\", num: 3},\n  \"Ab\": {acc: \"b\", num: 4},\n  \"Fm\": {acc: \"b\", num: 4},\n  \"Db\": {acc: \"b\", num: 5},\n  \"Bbm\": {acc: \"b\", num: 5},\n  \"Gb\": {acc: \"b\", num: 6},\n  \"Ebm\": {acc: \"b\", num: 6},\n  \"Cb\": {acc: \"b\", num: 7},\n  \"Abm\": {acc: \"b\", num: 7},\n  \"G\": {acc: \"#\", num: 1},\n  \"Em\": {acc: \"#\", num: 1},\n  \"D\": {acc: \"#\", num: 2},\n  \"Bm\": {acc: \"#\", num: 2},\n  \"A\": {acc: \"#\", num: 3},\n  \"F#m\": {acc: \"#\", num: 3},\n  \"E\": {acc: \"#\", num: 4},\n  \"C#m\": {acc: \"#\", num: 4},\n  \"B\": {acc: \"#\", num: 5},\n  \"G#m\": {acc: \"#\", num: 5},\n  \"F#\": {acc: \"#\", num: 6},\n  \"D#m\": {acc: \"#\", num: 6},\n  \"C#\": {acc: \"#\", num: 7},\n  \"A#m\": {acc: \"#\", num: 7}\n};\n\nVex.Flow.unicode = {\n  // Unicode accidentals\n  \"sharp\": String.fromCharCode(parseInt('266F', 16)),\n  \"flat\" : String.fromCharCode(parseInt('266D', 16)),\n  \"natural\": String.fromCharCode(parseInt('266E', 16)),\n  // Major Chord\n  \"triangle\": String.fromCharCode(parseInt('25B3', 16)),\n  // half-diminished\n  \"o-with-slash\": String.fromCharCode(parseInt('00F8', 16)),\n   // Diminished\n  \"degrees\": String.fromCharCode(parseInt('00B0', 16)),\n  \"circle\": String.fromCharCode(parseInt('25CB', 16))\n};\n\nVex.Flow.keySignature.accidentalList = function(acc) {\n  if (acc == \"b\") {\n    return [2, 0.5, 2.5, 1, 3, 1.5, 3.5];\n  }\n  else if (acc == \"#\") {\n    return [0, 1.5, -0.5, 1, 2.5, 0.5, 2]; }\n};\n\nVex.Flow.parseNoteDurationString = function(durationString) {\n  if (typeof(durationString) !== \"string\") {\n    return null;\n  }\n\n  var regexp = /(\\d*\\/?\\d+|[a-z])(d*)([nrhms]|$)/;\n\n  var result = regexp.exec(durationString);\n  if (!result) {\n    return null;\n  }\n\n  var duration = result[1];\n  var dots = result[2].length;\n  var type = result[3];\n\n  if (type.length === 0) {\n    type = \"n\";\n  }\n\n  return {\n    duration: duration,\n    dots: dots,\n    type: type\n  };\n};\n\nVex.Flow.parseNoteData = function(noteData) {\n  var duration = noteData.duration;\n\n  // Preserve backwards-compatibility\n  var durationStringData = Vex.Flow.parseNoteDurationString(duration);\n  if (!durationStringData) {\n    return null;\n  }\n\n  var ticks = Vex.Flow.durationToTicks(durationStringData.duration);\n  if (ticks == null) {\n    return null;\n  }\n\n  var type = noteData.type;\n\n  if (type) {\n    if (!(type === \"n\" || type === \"r\" || type === \"h\" ||\n          type === \"m\" || type === \"s\")) {\n      return null;\n    }\n  } else {\n    type = durationStringData.type;\n    if (!type) {\n      type = \"n\";\n    }\n  }\n\n  var dots = 0;\n  if (noteData.dots) {\n    dots = noteData.dots;\n  } else {\n    dots = durationStringData.dots;\n  }\n\n  if (typeof(dots) !== \"number\") {\n    return null;\n  }\n\n  var currentTicks = ticks;\n\n  for (var i = 0; i < dots; i++) {\n    if (currentTicks <= 1) {\n      return null;\n    }\n\n    currentTicks = currentTicks / 2;\n    ticks += currentTicks;\n  }\n\n  return {\n    duration: durationStringData.duration,\n    type: type,\n    dots: dots,\n    ticks: ticks\n  };\n};\n\n// Used to convert duration aliases to the number based duration.\n// If the input isn't an alias, simply return the input.\n//\n// example: 'q' -> '4', '8' -> '8'\nfunction sanitizeDuration(duration) {\n  var alias = Vex.Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  if (Vex.Flow.durationToTicks.durations[duration] === undefined) {\n    throw new Vex.RERR('BadArguments',\n      'The provided duration is not valid');\n  }\n\n  return duration;\n}\n\n// Convert the `duration` to an fraction\nVex.Flow.durationToFraction = function(duration) {\n  return new Vex.Flow.Fraction().parse(sanitizeDuration(duration));\n};\n\n// Convert the `duration` to an number\nVex.Flow.durationToNumber = function(duration) {\n  return Vex.Flow.durationToFraction(duration).value();\n};\n\n// Convert the `duration` to total ticks\nVex.Flow.durationToTicks = function(duration) {\n  duration = sanitizeDuration(duration);\n\n  var ticks = Vex.Flow.durationToTicks.durations[duration];\n  if (ticks === undefined) {\n    return null;\n  }\n\n  return ticks;\n};\n\nVex.Flow.durationToTicks.durations = {\n  \"1/2\":  Vex.Flow.RESOLUTION * 2,\n  \"1\":    Vex.Flow.RESOLUTION / 1,\n  \"2\":    Vex.Flow.RESOLUTION / 2,\n  \"4\":    Vex.Flow.RESOLUTION / 4,\n  \"8\":    Vex.Flow.RESOLUTION / 8,\n  \"16\":   Vex.Flow.RESOLUTION / 16,\n  \"32\":   Vex.Flow.RESOLUTION / 32,\n  \"64\":   Vex.Flow.RESOLUTION / 64,\n  \"128\":  Vex.Flow.RESOLUTION / 128,\n  \"256\":  Vex.Flow.RESOLUTION / 256\n};\n\nVex.Flow.durationAliases = {\n  \"w\": \"1\",\n  \"h\": \"2\",\n  \"q\": \"4\",\n\n  // This is the default duration used to render bars (BarNote). Bars no longer\n  // consume ticks, so this should be a no-op.\n  //\n  // TODO(0xfe): This needs to be cleaned up.\n  \"b\": \"256\"\n};\n\nVex.Flow.durationToGlyph = function(duration, type) {\n  var alias = Vex.Flow.durationAliases[duration];\n  if (alias !== undefined) {\n    duration = alias;\n  }\n\n  var code = Vex.Flow.durationToGlyph.duration_codes[duration];\n  if (code === undefined) {\n    return null;\n  }\n\n  if (!type) {\n    type = \"n\";\n  }\n\n  var glyphTypeProperties = code.type[type];\n  if (glyphTypeProperties === undefined) {\n    return null;\n  }\n\n  return Vex.Merge(Vex.Merge({}, code.common), glyphTypeProperties);\n};\n\nVex.Flow.durationToGlyph.duration_codes = {\n  \"1/2\": {\n    common: {\n      head_width: 22,\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Vex.Flow.STEM_HEIGHT,\n      stem_down_extension: -Vex.Flow.STEM_HEIGHT,\n      gracenote_stem_up_extension: -Vex.Flow.STEM_HEIGHT,\n      gracenote_stem_down_extension: -Vex.Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Vex.Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Vex.Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0\n    },\n    type: {\n      \"n\": { // Breve note\n        code_head: \"v53\"\n      },\n      \"h\": { // Breve note harmonic\n        code_head: \"v59\"\n      },\n      \"m\": { // Breve note muted -\n        code_head: \"vf\",\n        stem_offset: 0\n      },\n      \"r\": { // Breve rest\n        code_head: \"v31\",\n        head_width: 24,\n        rest: true,\n        position: \"B/5\",\n        dot_shiftY: 0.5\n      },\n      \"s\": { // Breve note slash -\n        // Drawn with canvas primitives\n        head_width: 15,\n        position: \"B/4\"\n      }\n    }\n  },\n  \"1\": {\n    common: {\n      head_width: 16,\n      stem: false,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: -Vex.Flow.STEM_HEIGHT,\n      stem_down_extension: -Vex.Flow.STEM_HEIGHT,\n      gracenote_stem_up_extension: -Vex.Flow.STEM_HEIGHT,\n      gracenote_stem_down_extension: -Vex.Flow.STEM_HEIGHT,\n      tabnote_stem_up_extension: -Vex.Flow.STEM_HEIGHT,\n      tabnote_stem_down_extension: -Vex.Flow.STEM_HEIGHT,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0\n    },\n    type: {\n      \"n\": { // Whole note\n        code_head: \"v1d\"\n      },\n      \"h\": { // Whole note harmonic\n        code_head: \"v46\"\n      },\n      \"m\": { // Whole note muted\n        code_head: \"v92\",\n        stem_offset: -3\n      },\n      \"r\": { // Whole rest\n        code_head: \"v5c\",\n        head_width: 12,\n        rest: true,\n        position: \"D/5\",\n        dot_shiftY: 0.5\n      },\n      \"s\": { // Whole note slash\n        // Drawn with canvas primitives\n        head_width: 15,\n        position: \"B/4\"\n      }\n    }\n  },\n  \"2\": {\n    common: {\n      head_width: 10,\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0\n    },\n    type: {\n      \"n\": { // Half note\n        code_head: \"v81\"\n      },\n      \"h\": { // Half note harmonic\n        code_head: \"v2d\"\n      },\n      \"m\": { // Half note muted\n        code_head: \"v95\",\n        stem_offset: -3\n      },\n      \"r\": { // Half rest\n        code_head: \"vc\",\n        head_width: 12,\n        stem: false,\n        rest: true,\n        position: \"B/4\",\n        dot_shiftY: -0.5\n      },\n      \"s\": { // Half note slash\n        // Drawn with canvas primitives\n        head_width: 15,\n        position: \"B/4\"\n      }\n    }\n  },\n  \"4\": {\n    common: {\n      head_width: 10,\n      stem: true,\n      stem_offset: 0,\n      flag: false,\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0\n    },\n    type: {\n      \"n\": { // Quarter note\n        code_head: \"vb\"\n      },\n      \"h\": { // Quarter harmonic\n        code_head: \"v22\"\n      },\n      \"m\": { // Quarter muted\n        code_head: \"v3e\",\n        stem_offset: -3\n      },\n      \"r\": { // Quarter rest\n        code_head: \"v7c\",\n        head_width: 8,\n        stem: false,\n        rest: true,\n        position: \"B/4\",\n        dot_shiftY: -0.5,\n        line_above: 1.5,\n        line_below: 1.5\n      },\n      \"s\": { // Quarter slash\n         // Drawn with canvas primitives\n         head_width: 15,\n         position: \"B/4\"\n      }\n    }\n  },\n  \"8\": {\n    common: {\n      head_width: 10,\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      beam_count: 1,\n      code_flag_upstem: \"v54\",\n      code_flag_downstem: \"v9a\",\n      stem_up_extension: 0,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0\n    },\n    type: {\n      \"n\": { // Eighth note\n        code_head: \"vb\"\n      },\n      \"h\": { // Eighth note harmonic\n        code_head: \"v22\"\n      },\n      \"m\": { // Eighth note muted\n        code_head: \"v3e\"\n      },\n      \"r\": { // Eighth rest\n        code_head: \"va5\",\n        stem: false,\n        flag: false,\n        rest: true,\n        position: \"B/4\",\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 1.0\n      },\n      \"s\": { // Eight slash\n        // Drawn with canvas primitives\n        head_width: 15,\n        position: \"B/4\"\n      }\n    }\n  },\n  \"16\": {\n    common: {\n      beam_count: 2,\n      head_width: 10,\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: \"v3f\",\n      code_flag_downstem: \"v8f\",\n      stem_up_extension: 4,\n      stem_down_extension: 0,\n      gracenote_stem_up_extension: -14,\n      gracenote_stem_down_extension: -14,\n      tabnote_stem_up_extension: 0,\n      tabnote_stem_down_extension: 0,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0\n    },\n    type: {\n      \"n\": { // Sixteenth note\n        code_head: \"vb\"\n      },\n      \"h\": { // Sixteenth note harmonic\n        code_head: \"v22\"\n      },\n      \"m\": { // Sixteenth note muted\n        code_head: \"v3e\"\n      },\n      \"r\": { // Sixteenth rest\n        code_head: \"v3c\",\n        head_width: 13,\n        stem: false,\n        flag: false,\n        rest: true,\n        position: \"B/4\",\n        dot_shiftY: -0.5,\n        line_above: 1.0,\n        line_below: 2.0\n      },\n      \"s\": { // Sixteenth slash\n        // Drawn with canvas primitives\n        head_width: 15,\n        position: \"B/4\"\n      }\n    }\n  },\n  \"32\": {\n    common: {\n      beam_count: 3,\n      head_width: 10,\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: \"v47\",\n      code_flag_downstem: \"v2a\",\n      stem_up_extension: 13,\n      stem_down_extension: 9,\n      gracenote_stem_up_extension: -12,\n      gracenote_stem_down_extension: -12,\n      tabnote_stem_up_extension: 9,\n      tabnote_stem_down_extension: 5,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0\n    },\n    type: {\n      \"n\": { // Thirty-second note\n        code_head: \"vb\"\n      },\n      \"h\": { // Thirty-second harmonic\n        code_head: \"v22\"\n      },\n      \"m\": { // Thirty-second muted\n        code_head: \"v3e\"\n      },\n      \"r\": { // Thirty-second rest\n        code_head: \"v55\",\n        head_width: 16,\n        stem: false,\n        flag: false,\n        rest: true,\n        position: \"B/4\",\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 2.0\n      },\n      \"s\": { // Thirty-second slash\n        // Drawn with canvas primitives\n        head_width: 15,\n        position: \"B/4\"\n      }\n    }\n  },\n  \"64\": {\n    common: {\n      beam_count: 4,\n      head_width: 10,\n      stem: true,\n      stem_offset: 0,\n      flag: true,\n      code_flag_upstem: \"va9\",\n      code_flag_downstem: \"v58\",\n      stem_up_extension: 17,\n      stem_down_extension: 13,\n      gracenote_stem_up_extension: -10,\n      gracenote_stem_down_extension: -10,\n      tabnote_stem_up_extension: 13,\n      tabnote_stem_down_extension: 9,\n      dot_shiftY: 0,\n      line_above: 0,\n      line_below: 0\n    },\n    type: {\n      \"n\": { // Sixty-fourth note\n        code_head: \"vb\"\n      },\n      \"h\": { // Sixty-fourth harmonic\n        code_head: \"v22\"\n      },\n      \"m\": { // Sixty-fourth muted\n        code_head: \"v3e\"\n      },\n      \"r\": { // Sixty-fourth rest\n        code_head: \"v38\",\n        head_width: 18,\n        stem: false,\n        flag: false,\n        rest: true,\n        position: \"B/4\",\n        dot_shiftY: -1.5,\n        line_above: 2.0,\n        line_below: 3.0\n      },\n      \"s\": { // Sixty-fourth slash\n        // Drawn with canvas primitives\n        head_width: 15,\n        position: \"B/4\"\n      }\n    }\n  },\n  \"128\": {\n      common: {\n          beam_count: 5,\n          head_width: 10,\n          stem: true,\n          stem_offset:0,\n          flag: true,\n          code_flag_upstem: \"v9b\",\n          code_flag_downstem: \"v30\",\n          stem_up_extension: 26,\n          stem_down_extension: 22,\n          gracenote_stem_up_extension: -8,\n          gracenote_stem_down_extension: -8,\n          tabnote_stem_up_extension: 22,\n          tabnote_stem_down_extension: 18,\n          dot_shiftY: 0,\n          line_above: 0,\n          line_below: 0\n      },\n      type: {\n          \"n\": {  // Hundred-twenty-eight note\n              code_head: \"vb\"\n          },\n          \"h\": { // Hundred-twenty-eight harmonic\n              code_head: \"v22\"\n          },\n          \"m\": { // Hundred-twenty-eight muted\n              code_head: \"v3e\"\n          },\n          \"r\": {  // Hundred-twenty-eight rest\n              code_head: \"vaa\",\n              head_width: 20,\n              stem: false,\n              flag: false,\n              rest: true,\n              position: \"B/4\",\n              dot_shiftY: 1.5,\n              line_above: 3.0,\n              line_below: 3.0\n          },\n          \"s\": { // Hundred-twenty-eight rest\n              // Drawn with canvas primitives\n              head_width: 15,\n              position: \"B/4\"\n          }\n      }\n  }\n};\n\n// Some defaults\nVex.Flow.TIME4_4 = {\n  num_beats: 4,\n  beat_value: 4,\n  resolution: Vex.Flow.RESOLUTION\n};\n\nVex.Flow.Font = {\"glyphs\":{\"v0\":{\"x_min\":0,\"x_max\":514.5,\"ha\":525,\"o\":\"m 236 648 b 246 648 238 648 242 648 b 288 646 261 648 283 648 b 472 513 364 634 428 587 b 514 347 502 464 514 413 b 462 163 514 272 499 217 b 257 44 409 83 333 44 b 50 163 181 44 103 83 b 0 347 14 217 0 272 b 40 513 0 413 12 464 b 236 648 87 591 155 638 m 277 614 b 253 616 273 616 261 616 b 242 616 247 616 243 616 b 170 499 193 609 181 589 b 159 348 163 446 159 398 b 166 222 159 308 161 266 b 201 91 174 138 183 106 b 257 76 215 81 235 76 b 311 91 277 76 299 81 b 347 222 330 106 338 138 b 353 348 352 266 353 308 b 344 499 353 398 351 446 b 277 614 333 587 322 606 m 257 -1 l 258 -1 l 255 -1 l 257 -1 m 257 673 l 258 673 l 255 673 l 257 673 \"},\"v1\":{\"x_min\":-1.359375,\"x_max\":344.359375,\"ha\":351,\"o\":\"m 126 637 l 129 638 l 198 638 l 266 638 l 269 635 b 274 631 272 634 273 632 l 277 627 l 277 395 b 279 156 277 230 277 161 b 329 88 281 123 295 106 b 344 69 341 81 344 79 b 337 55 344 62 343 59 l 333 54 l 197 54 l 61 54 l 58 55 b 50 69 53 59 50 62 b 65 88 50 79 53 81 b 80 97 72 91 74 93 b 117 156 103 113 112 129 b 117 345 117 161 117 222 l 117 528 l 100 503 l 38 406 b 14 383 24 384 23 383 b -1 398 5 383 -1 390 b 4 415 -1 403 1 409 b 16 437 5 416 10 426 l 72 539 l 100 596 b 121 632 119 631 119 631 b 126 637 122 634 125 635 m 171 -1 l 172 -1 l 170 -1 l 171 -1 m 171 673 l 172 673 l 170 673 l 171 673 \"},\"v2\":{\"x_min\":-1.359375,\"x_max\":458.6875,\"ha\":468,\"o\":\"m 197 648 b 216 648 201 648 208 648 b 258 646 232 648 253 648 b 419 546 333 637 393 599 b 432 489 428 528 432 509 b 356 342 432 440 405 384 b 235 278 322 313 288 295 b 69 170 166 256 107 217 b 69 169 69 170 69 169 b 69 169 69 169 69 169 b 74 173 69 169 72 170 b 209 222 112 204 163 222 b 310 195 247 222 274 215 b 371 179 332 184 352 179 b 396 181 379 179 387 179 b 428 202 409 184 423 194 b 442 212 431 209 436 212 b 458 197 450 212 458 206 b 441 148 458 190 449 165 b 299 44 409 84 353 44 b 288 45 295 44 292 44 b 250 61 274 45 268 49 b 122 99 212 86 164 99 b 73 91 104 99 88 97 b 28 63 53 84 34 72 b 14 54 25 56 20 54 b 1 62 9 54 4 56 l -1 65 l -1 79 b 0 99 -1 91 0 95 b 2 113 1 102 2 108 b 164 309 20 197 81 272 b 285 470 232 341 277 398 b 287 487 287 476 287 481 b 171 595 287 551 239 595 b 155 595 166 595 160 595 b 142 592 145 594 142 594 b 145 589 142 592 142 591 b 179 527 168 576 179 551 b 132 455 179 496 163 467 b 104 451 122 452 112 451 b 27 530 62 451 27 487 b 29 555 27 538 27 546 b 197 648 44 601 115 639 m 228 -1 l 230 -1 l 227 -1 l 228 -1 m 228 673 l 230 673 l 227 673 l 228 673 \"},\"v3\":{\"x_min\":-1.359375,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 174 648 b 191 648 176 648 183 648 b 225 648 204 648 220 648 b 402 523 317 638 389 588 b 404 503 404 517 404 510 b 402 484 404 495 404 488 b 264 373 389 437 334 394 b 257 370 259 371 257 371 b 257 370 257 370 257 370 b 264 369 258 370 261 369 b 409 202 359 334 409 267 b 318 72 409 152 381 104 b 200 43 281 52 240 43 b 23 113 134 43 69 68 b 0 169 6 129 0 149 b 77 249 0 210 29 249 l 77 249 b 152 174 125 249 152 212 b 103 102 152 145 137 116 b 103 102 103 102 103 102 b 147 94 103 101 132 95 b 153 94 149 94 151 94 b 265 206 219 94 265 141 b 264 226 265 213 265 219 b 147 355 253 299 204 353 b 126 371 133 356 126 362 b 147 388 126 383 132 388 b 254 474 196 391 238 424 b 259 502 258 484 259 494 b 182 592 259 544 228 582 b 156 595 175 595 166 595 b 115 592 142 595 129 594 l 111 591 l 115 588 b 152 524 141 574 152 549 b 92 449 152 491 130 458 b 76 448 87 448 81 448 b -1 530 32 448 -1 488 b 20 581 -1 548 5 566 b 174 648 55 619 108 641 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\"v4\":{\"x_min\":0,\"x_max\":468.21875,\"ha\":478,\"o\":\"m 174 637 b 232 638 175 638 189 638 b 277 638 245 638 259 638 l 378 638 l 381 635 b 389 623 386 632 389 627 b 382 609 389 617 386 613 b 366 589 381 606 372 598 l 313 528 l 245 451 l 209 410 l 155 348 l 84 267 b 59 240 72 252 59 240 b 59 240 59 240 59 240 b 151 238 59 238 68 238 l 242 238 l 242 303 b 243 371 242 369 242 370 b 289 426 245 374 254 385 l 303 441 l 317 456 l 338 483 l 360 506 l 371 520 b 386 527 375 526 381 527 b 400 519 392 527 397 524 b 401 440 401 516 401 514 b 401 377 401 423 401 402 l 401 238 l 426 238 b 453 237 449 238 450 238 b 465 217 461 234 465 226 b 460 202 465 212 464 206 b 426 197 454 197 453 197 l 401 197 l 401 180 b 451 88 402 129 412 109 b 468 69 465 81 468 79 b 461 55 468 62 466 59 l 458 54 l 321 54 l 185 54 l 182 55 b 175 69 176 59 175 62 b 191 88 175 79 176 81 b 240 180 230 109 240 129 l 240 197 l 125 197 b 73 195 104 195 87 195 b 8 197 10 195 9 197 b 0 212 2 199 0 205 b 0 212 0 212 0 212 b 20 242 0 219 0 219 b 163 610 104 344 163 492 b 174 637 163 628 166 634 m 234 -1 l 235 -1 l 232 -1 l 234 -1 m 234 673 l 235 673 l 232 673 l 234 673 \"},\"v5\":{\"x_min\":0,\"x_max\":409.6875,\"ha\":418,\"o\":\"m 47 637 b 53 638 49 638 50 638 b 69 634 55 638 61 637 b 210 610 114 619 161 610 b 363 634 259 610 311 619 b 382 638 372 637 378 638 b 392 634 386 638 389 637 b 397 623 396 630 397 627 b 393 610 397 620 396 616 b 298 505 368 552 338 520 b 212 494 277 498 246 494 b 65 517 163 494 106 502 b 61 517 62 517 61 517 b 61 517 61 517 61 517 b 51 408 61 517 51 412 b 51 408 51 408 51 408 b 51 408 51 408 51 408 b 61 412 53 408 55 409 b 125 434 80 421 103 430 b 185 441 145 440 166 441 b 409 244 310 441 409 353 b 401 191 409 227 406 209 b 197 43 375 105 287 43 b 159 47 183 43 171 44 b 23 123 112 56 61 86 b 0 180 6 140 0 159 b 76 260 0 220 31 260 b 92 259 81 260 87 259 b 152 183 132 251 152 216 b 100 112 152 152 134 122 b 95 111 98 112 95 111 b 95 111 95 111 95 111 b 129 98 95 109 119 101 b 148 97 136 97 141 97 b 264 235 206 97 261 158 b 265 248 265 240 265 244 b 210 398 265 312 243 373 b 179 408 201 406 194 408 b 174 408 178 408 176 408 b 53 369 130 408 88 394 b 34 359 39 359 38 359 b 17 374 24 359 17 365 b 39 628 17 384 38 625 b 47 637 40 631 43 635 m 204 -1 l 205 -1 l 202 -1 l 204 -1 m 204 673 l 205 673 l 202 673 l 204 673 \"},\"v6\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 255 648 b 274 648 259 648 266 648 b 314 646 288 648 307 648 b 450 555 374 637 438 594 b 454 530 453 546 454 538 b 375 451 454 485 416 451 b 328 467 359 451 343 455 b 300 526 310 483 300 503 b 352 598 300 557 319 589 b 356 599 355 598 356 599 b 352 602 356 599 355 601 b 288 616 330 612 308 616 b 210 584 257 616 230 605 b 164 433 189 559 174 508 b 160 374 163 415 160 381 b 160 374 160 374 160 374 b 160 374 160 374 160 374 b 168 377 160 374 164 376 b 258 395 200 390 228 395 b 366 367 294 395 328 387 b 475 223 436 333 475 283 b 472 197 475 215 473 206 b 349 65 462 141 419 95 b 259 43 317 51 288 43 b 167 69 230 43 200 52 b 4 290 80 113 20 195 b 0 349 1 309 0 328 b 20 467 0 391 6 433 b 255 648 58 563 155 637 m 269 363 b 257 363 265 363 261 363 b 210 345 236 363 220 356 b 186 226 196 324 186 272 b 187 198 186 216 186 206 b 213 95 191 151 202 112 b 257 76 221 83 238 76 b 270 77 261 76 266 76 b 321 156 299 81 310 99 b 329 229 326 183 329 206 b 321 301 329 252 326 274 b 269 363 311 342 298 359 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\"v7\":{\"x_min\":0,\"x_max\":442.359375,\"ha\":451,\"o\":\"m 147 648 b 166 649 153 649 160 649 b 313 598 217 649 273 630 b 340 587 323 588 328 587 l 341 587 b 412 628 367 587 390 601 b 427 638 416 635 421 638 b 439 632 431 638 435 637 b 442 623 441 630 442 628 b 430 569 442 616 439 603 b 352 369 408 492 377 410 b 300 259 325 324 313 298 b 273 84 283 205 273 140 b 265 55 273 65 272 59 l 261 54 l 181 54 l 99 54 l 96 55 b 91 61 95 56 92 59 l 89 63 l 89 77 b 147 263 89 133 111 202 b 261 401 176 313 212 355 b 378 541 315 449 349 489 l 382 548 l 375 544 b 240 495 333 512 285 495 b 129 535 198 495 160 509 b 84 560 108 552 95 560 b 76 559 81 560 78 560 b 31 487 59 555 43 530 b 14 470 27 473 24 470 b 1 477 8 470 4 471 l 0 480 l 0 553 l 0 627 l 1 630 b 16 638 4 635 9 638 b 23 635 17 638 20 637 b 49 626 36 626 39 626 b 96 638 59 626 80 630 b 104 639 99 638 102 639 b 117 644 107 641 112 642 b 147 648 125 645 137 648 m 220 -1 l 221 -1 l 219 -1 l 220 -1 m 220 673 l 221 673 l 219 673 l 220 673 \"},\"v8\":{\"x_min\":0,\"x_max\":488.640625,\"ha\":499,\"o\":\"m 217 648 b 245 649 225 648 235 649 b 453 516 343 649 430 595 b 458 478 455 503 458 491 b 412 370 458 440 441 398 b 411 369 412 369 411 369 b 415 365 411 367 412 367 b 488 231 462 331 488 281 b 472 165 488 208 483 186 b 243 43 434 86 338 43 b 63 104 178 43 112 62 b 0 233 20 140 0 186 b 73 365 0 283 24 331 l 77 369 l 72 374 b 29 476 42 406 29 441 b 217 648 29 557 103 635 m 258 605 b 242 606 253 605 247 606 b 157 552 198 606 157 580 b 160 541 157 548 159 544 b 319 413 176 503 242 452 l 337 403 l 338 406 b 359 476 352 428 359 452 b 258 605 359 537 318 595 m 138 326 b 130 330 134 328 130 330 b 130 330 130 330 130 330 b 107 305 127 330 112 313 b 84 231 91 281 84 256 b 243 86 84 156 151 86 b 249 87 245 86 246 87 b 347 156 303 88 347 120 b 344 172 347 162 345 167 b 156 319 325 227 257 281 b 138 326 151 322 144 324 m 243 -1 l 245 -1 l 242 -1 l 243 -1 m 243 673 l 245 673 l 242 673 l 243 673 \"},\"v9\":{\"x_min\":0,\"x_max\":475.03125,\"ha\":485,\"o\":\"m 191 646 b 212 649 198 648 205 649 b 255 644 227 649 243 646 b 458 448 348 616 428 539 b 475 342 469 415 475 378 b 460 244 475 308 469 274 b 193 44 421 124 303 44 b 91 69 157 44 122 51 b 19 161 43 97 19 126 b 21 181 19 167 20 174 b 98 241 32 220 65 241 b 170 186 129 241 160 223 b 172 166 171 179 172 173 b 121 94 172 134 152 102 b 117 93 118 94 117 93 b 121 90 117 93 118 91 b 185 76 142 80 164 76 b 270 119 220 76 251 91 b 308 259 287 145 300 194 b 313 317 310 277 313 310 b 313 317 313 317 313 317 b 313 317 313 317 313 317 b 304 315 313 317 308 316 b 216 295 273 302 245 295 b 145 308 193 295 170 299 b 19 398 88 327 42 360 b 0 469 5 420 0 444 b 24 551 0 496 8 526 b 191 646 54 596 125 637 m 227 614 b 215 616 224 616 220 616 b 202 614 210 616 206 616 b 152 535 174 610 163 592 b 144 463 147 509 144 485 b 152 391 144 440 147 417 b 216 328 163 344 179 328 b 280 391 253 328 269 344 b 288 463 285 417 288 440 b 280 535 288 485 285 509 b 227 614 269 594 258 610 m 236 -1 l 238 -1 l 235 -1 l 236 -1 m 236 673 l 238 673 l 235 673 l 236 673 \"},\"va\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -8 -1 b -1 0 -5 -1 -4 0 b 16 -11 5 0 13 -4 b 83 -186 17 -12 47 -90 l 148 -358 l 148 -363 b 127 -385 148 -376 138 -385 b 112 -378 122 -385 118 -383 b 54 -226 110 -374 114 -385 b 0 -81 24 -147 0 -81 b -55 -226 -1 -81 -25 -147 b -114 -378 -115 -385 -111 -374 b -129 -385 -119 -383 -123 -385 b -149 -363 -140 -385 -149 -376 l -149 -358 l -84 -186 b -19 -11 -49 -90 -19 -12 b -8 -1 -17 -8 -12 -4 \"},\"vb\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 \"},\"vc\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 86 l 0 173 l 223 173 l 447 173 l 447 86 l 447 0 l 223 0 l 0 0 l 0 86 \"},\"vf\":{\"x_min\":0,\"x_max\":370.21875,\"ha\":378,\"o\":\"m 0 0 l 0 277 l 61 277 l 122 277 l 122 0 l 122 -278 l 61 -278 l 0 -278 l 0 0 m 246 -1 l 246 277 l 308 277 l 370 277 l 370 -1 l 370 -278 l 308 -278 l 246 -278 l 246 -1 \"},\"v10\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 5 127 b 14 127 6 127 9 127 b 51 126 25 127 43 127 b 175 98 93 122 138 112 l 186 94 b 279 51 210 86 255 65 b 285 47 280 51 283 48 b 319 27 291 44 311 31 l 326 22 b 359 0 332 19 352 4 l 367 -6 b 371 -9 368 -6 370 -8 l 379 -15 b 387 -22 383 -18 386 -20 l 398 -30 l 411 -40 l 417 -47 l 427 -55 l 434 -61 b 441 -66 436 -62 439 -65 l 446 -72 l 453 -77 l 462 -87 b 558 -188 490 -113 549 -176 b 559 -195 559 -191 559 -194 b 548 -205 559 -201 555 -205 b 541 -204 547 -205 544 -205 b 534 -198 539 -201 536 -199 l 525 -191 b 481 -162 518 -187 490 -167 b 472 -155 477 -159 472 -156 b 468 -152 470 -155 469 -154 b 461 -149 466 -152 464 -151 b 428 -130 454 -145 441 -137 b 371 -99 413 -122 372 -99 b 363 -95 371 -99 367 -98 b 353 -91 357 -94 353 -91 b 348 -90 353 -91 352 -91 b 332 -81 343 -87 341 -86 b 27 -12 230 -37 127 -13 b 0 -5 4 -11 2 -11 b 0 58 0 -2 0 27 b 0 122 0 88 0 120 b 5 127 1 124 4 126 \"},\"v11\":{\"x_min\":-155.171875,\"x_max\":153.8125,\"ha\":157,\"o\":\"m -137 353 b -130 353 -136 353 -133 353 b -112 349 -125 353 -119 352 b -100 342 -110 347 -104 344 b 0 317 -69 326 -35 317 b 111 349 38 317 76 328 b 129 353 117 352 123 353 b 153 327 142 353 153 344 b 144 302 153 320 153 317 b 27 6 93 226 50 113 b 21 -13 24 -11 24 -11 b 0 -26 17 -22 8 -26 b -24 -12 -9 -26 -19 -22 b -28 5 -24 -9 -27 -2 b -145 302 -53 117 -95 224 b -155 327 -155 317 -155 320 b -137 353 -155 340 -148 349 \"},\"v18\":{\"x_min\":0,\"x_max\":323.9375,\"ha\":331,\"o\":\"m 217 535 b 225 537 220 537 221 537 b 245 524 235 537 242 533 l 246 521 l 247 390 l 247 258 l 273 265 b 306 270 288 269 299 270 b 322 259 315 270 319 267 b 323 208 323 256 323 233 b 322 158 323 184 323 159 b 288 140 318 148 315 147 b 247 130 254 131 247 130 b 247 65 247 130 247 104 b 247 20 247 51 247 36 l 247 -88 l 273 -81 b 306 -76 289 -77 299 -76 b 318 -81 311 -76 315 -77 b 323 -123 323 -87 323 -86 l 323 -138 l 323 -154 b 318 -195 323 -191 323 -190 b 269 -210 314 -199 315 -199 b 249 -216 259 -213 250 -216 l 247 -216 l 247 -349 l 246 -483 l 245 -487 b 225 -499 242 -495 234 -499 b 206 -487 219 -499 210 -495 l 205 -483 l 205 -355 l 205 -227 l 204 -227 l 181 -233 l 138 -244 b 117 -249 127 -247 117 -249 b 115 -385 115 -249 115 -256 l 115 -523 l 114 -526 b 95 -538 110 -534 102 -538 b 74 -526 87 -538 78 -534 l 73 -523 l 73 -391 b 72 -260 73 -269 73 -260 b 72 -260 72 -260 72 -260 b 19 -273 61 -263 23 -273 b 0 -260 10 -273 4 -267 b 0 -209 0 -256 0 -256 l 0 -162 l 1 -158 b 61 -134 5 -148 5 -148 l 73 -131 l 73 -22 b 72 86 73 79 73 86 b 72 86 72 86 72 86 b 19 74 61 83 23 74 b 0 86 10 74 4 79 b 0 137 0 90 0 90 l 0 184 l 1 188 b 61 212 5 198 5 198 l 73 215 l 73 348 l 73 481 l 74 485 b 95 498 78 492 87 498 b 103 495 98 498 100 496 b 114 485 107 494 111 489 l 115 481 l 115 353 l 115 226 l 121 226 b 159 235 123 227 141 231 l 198 247 l 205 248 l 205 384 l 205 521 l 206 524 b 217 535 209 528 212 533 m 205 9 b 205 119 205 70 205 119 l 205 119 b 182 113 204 119 194 116 l 138 102 b 117 97 127 99 117 97 b 115 -12 115 97 115 91 l 115 -122 l 121 -120 b 159 -111 123 -119 141 -115 l 198 -101 l 205 -98 l 205 9 \"},\"v1b\":{\"x_min\":0,\"x_max\":559.421875,\"ha\":571,\"o\":\"m 544 204 b 548 204 545 204 547 204 b 559 194 555 204 559 199 b 559 190 559 192 559 191 b 530 156 559 188 556 184 b 462 86 510 134 481 104 b 453 76 458 81 454 77 l 446 70 l 441 65 b 434 59 439 63 436 61 l 427 54 b 409 37 426 51 416 44 b 392 23 398 29 394 26 b 387 19 389 22 387 20 b 379 13 386 19 383 16 l 371 8 l 367 5 l 359 -1 l 337 -16 b 285 -48 319 -29 298 -41 l 279 -52 b 186 -95 255 -66 210 -87 l 175 -99 b 23 -129 127 -117 68 -129 b 17 -129 20 -129 19 -129 b 1 -123 2 -129 2 -129 b 0 -49 0 -122 0 -83 b 0 4 0 -22 0 1 b 27 11 2 9 4 9 b 185 31 78 12 145 20 b 198 34 186 31 193 33 b 314 73 234 44 277 58 b 349 88 328 79 340 84 b 353 90 352 90 353 90 b 363 94 353 90 357 93 b 371 98 367 97 371 98 b 428 129 372 98 413 120 b 461 148 441 136 454 144 b 468 151 464 149 466 151 b 472 154 469 152 470 154 b 481 161 473 155 477 158 b 525 190 490 166 518 186 l 534 197 b 540 201 536 198 539 199 b 544 204 541 202 544 204 \"},\"v1d\":{\"x_min\":0,\"x_max\":619.3125,\"ha\":632,\"o\":\"m 274 184 b 307 186 285 186 296 186 b 616 22 465 186 597 116 b 619 -1 617 13 619 5 b 308 -187 619 -104 483 -187 b 0 -1 133 -187 0 -102 b 5 36 0 11 1 23 b 274 184 29 115 141 176 m 289 161 b 272 162 284 162 277 162 b 171 41 209 162 171 108 b 205 -73 171 5 182 -34 b 345 -163 243 -133 298 -163 b 436 -98 385 -163 420 -142 b 446 -43 443 -80 446 -62 b 289 161 446 47 377 147 \"},\"v1e\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -219 173 b -213 174 -217 174 -215 174 b -202 173 -209 174 -205 173 b -114 86 -200 172 -179 151 b -28 0 -66 37 -28 0 b 40 84 -28 0 2 37 b 117 174 111 173 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b -42 -86 27 0 -4 -38 b -118 -174 -112 -174 -111 -173 b -123 -176 -119 -176 -121 -176 b -133 -174 -126 -176 -130 -174 b -296 -12 -136 -173 -172 -137 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 172 -398 -43 -228 167 b -219 173 -223 172 -220 173 \"},\"v1f\":{\"x_min\":-340.28125,\"x_max\":338.921875,\"ha\":346,\"o\":\"m -32 520 b -29 521 -31 520 -31 521 b -23 519 -27 521 -24 520 b -20 513 -21 517 -20 516 b -21 506 -20 512 -20 509 b -31 474 -23 502 -27 488 l -53 402 l -66 352 l -68 349 l -57 349 b -32 351 -51 349 -40 351 b 123 370 19 352 74 359 b 137 371 127 370 133 371 b 170 356 152 371 164 366 b 171 355 170 355 170 355 b 216 366 174 355 183 358 b 280 378 268 377 266 377 b 287 378 283 378 284 378 b 332 349 307 378 322 369 b 338 319 336 341 338 330 b 332 301 338 310 336 302 b 242 280 329 299 246 280 b 242 280 242 280 242 280 b 235 288 236 280 235 283 b 235 292 235 290 235 291 b 236 302 236 297 236 299 b 220 337 236 316 230 330 l 216 340 l 210 335 b 159 276 189 322 172 301 b 118 149 152 265 156 274 b 81 34 84 36 85 36 b -8 13 78 33 -4 13 b -8 13 -8 13 -8 13 b -14 20 -12 15 -14 15 b -8 44 -14 24 -12 31 b -2 66 -5 55 -2 65 b -2 66 -2 66 -2 66 l -2 66 b -43 41 -2 66 -21 55 b -114 4 -98 8 -98 8 b -144 0 -123 0 -134 0 b -242 99 -197 0 -242 43 b -242 109 -242 102 -242 105 b -212 219 -240 122 -242 116 b -185 312 -197 270 -185 312 l -185 312 b -189 312 -185 312 -186 312 b -259 312 -200 312 -227 312 b -321 310 -291 312 -310 310 b -334 312 -330 310 -334 312 b -340 319 -338 313 -340 316 b -336 326 -340 322 -338 324 b -291 337 -334 326 -314 331 l -247 347 l -210 348 b -172 348 -190 348 -172 348 b -168 363 -172 348 -171 355 b -145 442 -151 424 -145 441 b -133 452 -144 444 -140 446 l -77 489 b -32 520 -53 506 -32 520 m 57 334 b 53 335 55 335 54 335 b 44 334 50 335 49 335 b -70 316 8 326 -28 320 b -78 309 -78 316 -78 316 b -108 202 -80 305 -88 274 b -141 81 -136 112 -141 93 b -140 74 -141 79 -141 77 b -117 49 -137 59 -127 49 b -107 52 -114 49 -110 51 b 16 127 -106 54 14 126 b 42 217 16 127 42 215 b 49 241 42 222 44 229 b 73 320 53 251 73 317 b 57 334 73 327 65 333 \"},\"v20\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -559 351 b -551 352 -556 352 -553 352 b -530 338 -543 352 -533 348 b -529 169 -530 337 -529 291 l -529 1 l -507 27 l -441 112 b -382 174 -394 169 -390 174 b -378 174 -381 174 -379 174 b -281 86 -370 174 -375 179 b -196 0 -234 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 279 172 b 289 174 285 174 288 174 b 300 173 294 174 298 173 b 462 11 303 172 340 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 375 -176 371 -176 b 280 -87 367 -173 347 -152 b 194 0 234 -38 194 0 b 126 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 44 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -140 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -288 -176 b -300 -174 -294 -176 -298 -174 b -464 -11 -303 -173 -374 -102 l -476 0 l -506 -37 b -539 -76 -528 -65 -537 -74 b -551 -80 -543 -79 -547 -80 b -570 -68 -558 -80 -566 -76 l -571 -65 l -571 136 b -570 340 -571 331 -571 337 b -559 351 -568 344 -564 348 \"},\"v22\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 209 186 b 213 187 210 187 212 187 b 216 187 215 187 216 187 b 224 174 216 186 220 180 b 420 -1 269 105 338 43 b 432 -12 431 -8 432 -9 b 421 -23 432 -15 432 -16 b 228 -180 345 -70 264 -137 b 219 -188 221 -188 221 -188 l 219 -188 b 208 -177 215 -188 215 -188 b 10 1 163 -106 93 -44 b 0 11 0 6 0 8 b 10 22 0 13 0 15 b 202 179 87 69 167 136 b 209 186 206 183 209 186 \"},\"v23\":{\"x_min\":0,\"x_max\":133.390625,\"ha\":136,\"o\":\"m 54 66 b 65 68 58 68 61 68 b 122 37 88 68 110 56 b 133 -1 130 26 133 12 b 104 -58 133 -23 123 -44 b 66 -69 92 -65 78 -69 b 10 -38 44 -69 23 -58 b 0 -1 2 -27 0 -13 b 54 66 0 30 20 61 \"},\"v25\":{\"x_min\":0,\"x_max\":318.5,\"ha\":325,\"o\":\"m 20 376 b 167 377 23 377 96 377 b 296 376 231 377 294 377 b 318 347 311 371 318 359 b 296 316 318 333 311 320 b 159 315 294 315 227 315 b 21 316 91 315 24 315 b 0 345 6 320 0 333 b 20 376 0 359 6 371 \"},\"v26\":{\"x_min\":-21.78125,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 179 164 199 187 192 l 210 176 l 210 396 l 210 617 l 212 621 b 231 632 216 628 223 632 b 250 620 239 632 247 628 b 251 383 251 616 251 616 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\"v27\":{\"x_min\":0,\"x_max\":432.828125,\"ha\":442,\"o\":\"m 208 184 b 213 187 209 186 212 187 b 224 176 217 187 221 183 b 245 147 225 172 235 159 b 419 -1 288 90 347 38 b 431 -8 424 -4 431 -8 b 432 -12 432 -9 432 -11 b 430 -18 432 -13 432 -16 b 364 -61 424 -20 383 -47 b 225 -183 307 -102 250 -152 b 223 -187 224 -184 223 -187 b 220 -188 221 -188 220 -188 b 208 -176 216 -188 210 -184 b 187 -148 205 -173 197 -159 b 12 0 144 -90 84 -38 b 0 11 4 5 0 8 b 16 24 0 13 4 18 b 183 158 83 69 141 115 b 208 184 194 169 198 173 m 183 105 b 176 113 181 109 176 113 b 172 109 176 113 175 112 b 92 45 149 90 117 62 l 88 41 l 102 31 b 247 -105 160 -6 210 -55 l 254 -115 l 257 -112 l 269 -102 b 340 -45 287 -87 319 -61 l 344 -43 l 330 -33 b 183 105 272 6 221 54 \"},\"v28\":{\"x_min\":-73.5,\"x_max\":72.140625,\"ha\":74,\"o\":\"m -72 252 l -73 254 l 0 254 l 72 254 l 70 252 b 0 -1 70 248 0 -1 b -72 252 -1 -1 -72 248 \"},\"v29\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 175 273 b 182 274 178 273 181 274 b 202 262 190 274 198 269 b 204 158 204 259 204 259 l 204 56 l 250 112 b 303 174 296 172 298 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 208 -6 213 0 210 -2 l 204 -12 l 204 -147 b 204 -210 204 -173 204 -194 b 198 -292 204 -297 204 -287 b 183 -299 194 -297 189 -299 b 164 -287 175 -299 167 -295 b 163 -174 163 -284 163 -284 l 161 -63 l 119 -117 b 65 -176 76 -170 73 -176 b 61 -176 63 -176 62 -176 b -35 -87 51 -174 57 -180 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -363 174 -374 170 -371 174 b -359 174 -362 174 -360 174 b -262 86 -351 174 -356 179 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 147 11 -13 172 35 123 l 157 -1 l 160 1 l 163 4 l 163 130 b 164 260 163 256 163 258 b 175 273 166 266 170 270 \"},\"v2a\":{\"x_min\":-21.78125,\"x_max\":366.140625,\"ha\":374,\"o\":\"m 276 1378 b 284 1379 279 1379 281 1379 b 306 1360 292 1379 298 1374 b 352 1247 326 1326 343 1286 b 366 1139 362 1213 366 1175 b 347 1009 366 1093 359 1049 l 344 1002 l 347 992 b 352 971 348 986 351 977 b 366 863 362 936 366 899 b 347 732 366 818 359 773 l 344 725 l 347 716 b 352 695 348 710 351 700 b 366 588 362 659 366 623 b 223 262 366 464 314 345 b 189 233 212 252 212 252 b 35 76 126 183 73 129 b -1 16 20 56 2 27 b -19 4 -4 9 -12 4 l -21 4 l -21 137 l -21 270 l -17 270 b 186 344 59 281 134 308 b 319 606 270 399 319 499 b 317 650 319 620 319 635 l 315 659 l 314 655 b 223 537 288 607 258 570 b 189 509 212 528 212 528 b 35 352 126 459 73 405 b -1 292 20 333 2 303 b -19 280 -4 285 -12 280 l -21 280 l -21 413 l -21 546 l -17 546 b 186 620 59 557 134 584 b 319 882 270 675 319 775 b 317 925 319 896 319 911 l 315 935 l 314 931 b 223 813 288 884 258 846 b 189 785 212 805 212 805 b 35 628 126 735 73 681 b -1 569 20 609 2 580 b -19 556 -4 562 -12 556 l -21 556 l -21 689 l -21 823 l -17 823 b 202 907 68 835 152 867 b 319 1157 280 968 319 1061 b 270 1338 319 1218 303 1281 b 262 1358 264 1349 262 1353 b 262 1364 262 1360 262 1363 b 276 1378 265 1371 269 1376 \"},\"v2c\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -413 173 b -408 174 -412 174 -409 174 b -397 173 -404 174 -400 173 b -308 86 -394 172 -374 151 b -223 0 -261 37 -223 0 b -153 84 -223 0 -191 37 b -77 174 -83 173 -84 172 b -72 174 -76 174 -74 174 b -62 173 -68 174 -63 173 b 25 86 -59 172 -39 151 b 112 0 73 37 111 0 b 181 84 112 0 144 37 b 257 174 251 173 251 172 b 262 174 258 174 261 174 b 273 173 266 174 270 173 b 436 9 276 172 347 101 l 447 -1 l 477 36 b 522 79 511 79 513 79 l 522 79 b 552 51 533 79 539 73 b 596 -112 582 6 596 -51 b 567 -262 596 -161 586 -213 b 539 -322 558 -287 544 -316 b 524 -327 534 -326 529 -327 b 504 -315 515 -327 507 -323 b 503 -308 503 -312 503 -309 b 511 -285 503 -302 504 -297 b 555 -113 540 -227 555 -169 b 544 -34 555 -86 551 -59 b 522 19 540 -16 530 8 l 521 22 l 481 -26 l 405 -122 b 353 -176 366 -172 362 -176 b 349 -176 352 -176 351 -176 b 253 -87 341 -176 347 -180 b 167 0 206 -38 167 0 b 99 -86 167 0 136 -38 b 21 -174 27 -174 28 -173 b 17 -176 20 -176 19 -176 b 6 -174 13 -176 9 -174 b -81 -87 4 -173 -14 -152 b -167 0 -129 -38 -167 0 b -236 -86 -167 0 -198 -38 b -313 -174 -307 -174 -306 -173 b -318 -176 -314 -176 -315 -176 b -328 -174 -321 -176 -325 -174 b -491 -12 -330 -173 -367 -137 l -503 0 l -530 -34 b -570 -77 -562 -73 -564 -76 b -577 -79 -571 -79 -574 -79 b -597 -58 -588 -79 -597 -69 b -596 -49 -597 -55 -597 -52 b -417 172 -593 -43 -423 167 b -413 173 -417 172 -415 173 \"},\"v2d\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 190 b 219 191 213 191 216 191 b 236 176 225 191 228 190 b 419 18 277 105 341 49 b 436 5 431 13 434 11 b 438 -1 438 4 438 1 b 424 -16 438 -8 432 -13 b 356 -49 409 -20 379 -36 b 234 -180 306 -83 258 -133 b 219 -192 230 -188 224 -192 b 200 -176 213 -192 206 -187 b 9 -15 157 -102 89 -45 b 0 0 2 -12 0 -6 b 16 18 0 9 2 12 b 200 176 93 48 159 104 b 212 190 205 186 208 188 m 239 113 b 236 117 238 116 238 117 b 230 108 235 117 234 115 b 92 -15 196 58 140 8 b 88 -18 91 -16 88 -18 b 92 -20 88 -18 91 -19 b 198 -116 130 -43 166 -74 b 200 -117 200 -117 200 -117 b 201 -117 200 -117 201 -117 b 264 -43 212 -98 242 -62 b 345 15 288 -19 321 4 b 348 18 347 16 348 16 b 344 20 348 18 347 19 b 239 113 307 41 266 79 \"},\"v2f\":{\"x_min\":-1.359375,\"x_max\":680.5625,\"ha\":694,\"o\":\"m 597 1042 b 604 1042 600 1042 602 1042 b 642 1002 627 1042 642 1022 b 619 966 642 988 635 974 b 439 927 574 942 503 927 l 426 927 l 426 921 b 430 838 428 893 430 866 b 345 480 430 696 398 560 b 179 391 307 423 249 391 b 156 392 171 391 164 392 b 138 394 149 394 142 394 b 103 434 115 396 103 416 b 129 471 103 451 111 466 b 141 474 133 473 137 474 b 172 459 153 474 164 469 b 181 455 175 456 176 455 b 187 456 182 455 185 455 b 253 520 212 460 234 483 b 315 836 294 605 315 714 b 311 928 315 867 314 898 b 302 945 310 943 311 942 b 245 953 283 950 262 953 b 130 891 193 953 149 931 b 84 860 119 870 102 860 b 36 905 61 860 39 877 b 36 910 36 907 36 909 b 80 970 36 931 50 949 b 249 1017 125 1000 187 1017 b 322 1009 273 1017 299 1014 l 341 1003 b 436 991 372 995 406 991 b 577 1031 495 991 545 1004 b 597 1042 583 1038 590 1041 m 416 360 b 424 360 419 360 421 360 b 481 309 454 360 479 338 b 503 145 484 280 495 199 b 585 -185 525 16 555 -106 b 630 -245 596 -213 613 -237 l 634 -247 l 638 -245 b 647 -244 641 -245 645 -244 b 680 -278 666 -244 680 -262 b 664 -308 680 -290 675 -301 b 638 -312 658 -310 650 -312 b 613 -309 631 -312 623 -310 b 477 -201 555 -303 502 -260 b 417 -2 460 -159 434 -72 b 416 5 417 1 416 5 b 416 5 416 5 416 5 b 411 -5 415 5 413 0 b 359 -97 397 -33 377 -70 b 353 -106 355 -102 353 -105 b 359 -112 353 -108 355 -109 b 409 -130 375 -123 390 -129 b 426 -134 420 -130 421 -131 b 431 -147 428 -137 431 -141 b 420 -162 431 -152 427 -159 b 382 -169 409 -166 396 -169 b 323 -155 363 -169 341 -165 l 317 -152 l 314 -155 b 62 -303 240 -240 148 -295 b 36 -305 55 -305 44 -305 b 23 -303 29 -305 24 -305 b -1 -273 6 -299 -1 -287 b 31 -240 -1 -256 10 -240 b 36 -240 32 -240 34 -240 b 42 -241 38 -241 39 -241 b 134 -204 63 -241 99 -226 b 367 288 265 -115 357 81 b 375 330 368 313 370 320 b 416 360 383 347 400 358 m 360 -359 b 379 -359 363 -359 371 -359 b 424 -360 396 -359 416 -359 b 646 -502 536 -373 624 -430 b 649 -527 649 -510 649 -519 b 530 -673 649 -578 604 -635 l 521 -677 l 529 -681 b 653 -811 592 -714 637 -762 b 660 -853 658 -827 660 -839 b 645 -911 660 -873 656 -892 b 426 -1021 608 -981 519 -1021 b 283 -989 377 -1021 328 -1011 b 235 -949 249 -972 239 -964 b 234 -936 234 -946 234 -941 b 234 -928 234 -934 234 -931 l 235 -925 l 234 -927 l 225 -934 b 87 -982 186 -966 138 -982 b 80 -982 85 -982 83 -982 b 55 -981 70 -981 58 -981 b 17 -943 32 -981 17 -964 b 54 -904 17 -921 35 -904 b 78 -914 62 -904 72 -909 l 83 -918 l 88 -918 b 190 -831 122 -918 166 -881 b 269 -506 242 -727 269 -612 b 268 -462 269 -492 269 -477 b 266 -449 266 -458 266 -452 b 265 -444 266 -445 266 -444 b 257 -446 264 -444 261 -445 b 132 -545 196 -470 152 -505 b 88 -573 122 -563 104 -573 b 39 -523 63 -573 39 -553 b 63 -476 39 -505 44 -494 b 360 -359 136 -408 235 -369 m 419 -424 b 393 -423 411 -423 406 -423 l 375 -423 l 377 -426 b 379 -439 377 -427 378 -434 b 383 -510 382 -463 383 -487 b 314 -811 383 -609 360 -710 b 266 -893 296 -850 285 -870 b 264 -898 265 -896 264 -898 l 264 -898 b 264 -898 264 -898 264 -898 b 268 -898 264 -898 266 -898 b 273 -898 270 -898 272 -898 b 300 -909 283 -898 291 -900 b 426 -957 340 -941 385 -957 b 476 -949 443 -957 460 -954 b 547 -853 522 -931 547 -893 b 485 -745 547 -816 526 -775 b 397 -707 460 -727 432 -714 b 366 -675 375 -703 366 -692 b 396 -642 366 -657 377 -645 b 530 -557 455 -637 511 -601 b 536 -527 534 -548 536 -537 b 419 -424 536 -480 490 -437 \"},\"v30\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 276 1900 b 284 1901 279 1900 281 1901 b 306 1883 291 1901 298 1896 b 367 1686 347 1825 367 1757 b 343 1558 367 1643 359 1600 l 338 1549 l 343 1537 b 367 1411 359 1497 367 1454 b 343 1282 367 1367 359 1324 l 338 1272 l 343 1261 b 367 1135 359 1221 367 1178 b 343 1007 367 1090 359 1047 l 338 996 l 343 985 b 367 859 359 945 367 902 b 343 731 367 814 359 771 l 338 720 l 343 709 b 367 582 359 667 367 626 b 289 362 367 503 340 426 b 239 312 276 345 259 330 b 29 77 152 237 76 152 b -1 18 14 54 2 30 b -19 4 -4 11 -12 4 l -21 4 l -21 133 l -20 260 l -13 262 b 98 299 17 269 62 284 b 111 305 103 302 110 305 b 167 334 123 310 156 327 b 319 595 264 391 319 491 b 313 659 319 616 318 638 b 310 667 311 664 311 667 b 307 663 310 667 308 666 b 240 588 289 637 269 614 b 16 331 141 505 62 413 b -1 294 8 316 1 302 b -19 280 -4 287 -12 280 l -21 280 l -21 408 l -20 537 l -13 538 b 98 576 17 545 62 560 b 111 581 103 578 110 581 b 167 610 123 587 156 603 b 319 871 264 667 319 767 b 313 935 319 892 318 913 b 310 942 311 941 311 942 b 307 939 310 942 308 941 b 240 864 289 913 269 889 b 16 607 141 781 62 689 b -1 570 8 592 1 578 b -19 556 -4 563 -12 556 l -21 556 l -21 684 l -20 813 l -13 814 b 98 852 17 821 62 836 b 111 857 103 855 110 857 b 167 886 123 863 156 880 b 319 1147 264 943 319 1043 b 313 1211 319 1168 318 1189 b 310 1218 311 1217 311 1218 b 307 1215 310 1218 308 1217 b 240 1140 289 1188 269 1165 b 16 884 141 1057 62 966 b -1 846 8 868 1 855 b -19 832 -4 839 -12 832 l -21 832 l -21 960 l -20 1089 l -13 1090 b 98 1128 17 1097 62 1111 b 111 1134 103 1131 110 1134 b 167 1163 123 1139 156 1156 b 319 1424 264 1220 319 1320 b 313 1486 319 1444 318 1465 b 310 1494 311 1493 311 1494 b 307 1492 310 1494 308 1493 b 240 1417 289 1464 269 1442 b 16 1160 141 1333 62 1242 b -1 1121 8 1145 1 1131 b -19 1109 -4 1115 -12 1109 l -21 1109 l -21 1236 l -20 1365 l -13 1367 b 98 1404 17 1374 62 1388 b 111 1410 103 1407 110 1410 b 250 1508 172 1437 215 1467 b 319 1701 296 1564 319 1633 b 270 1859 319 1757 303 1814 b 262 1882 265 1868 262 1875 b 276 1900 262 1890 266 1896 \"},\"v31\":{\"x_min\":0,\"x_max\":386.5625,\"ha\":394,\"o\":\"m 0 173 l 0 347 l 193 347 l 386 347 l 386 173 l 386 0 l 193 0 l 0 0 l 0 173 \"},\"v33\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -10 276 b -2 277 -8 277 -5 277 b 17 265 5 277 13 273 b 19 163 19 260 19 260 l 19 68 l 39 45 b 277 -95 122 -34 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -54 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 200 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 137 b 421 22 421 37 421 29 b 257 -198 421 -86 347 -188 b 242 -198 251 -198 247 -198 b 20 -105 181 -198 95 -163 l 19 -104 l 19 -183 b 19 -216 19 -195 19 -206 b 12 -273 19 -272 17 -267 b -2 -278 8 -277 2 -278 b -21 -266 -10 -278 -19 -274 b -23 -165 -23 -263 -23 -262 l -23 -69 l -44 -47 b -250 86 -117 23 -183 66 b -295 94 -270 93 -284 94 b -315 91 -302 94 -308 94 b -381 5 -356 81 -381 43 b -355 -56 -381 -16 -372 -40 b -299 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -168 -77 -196 -58 -179 -65 b -151 -122 -156 -90 -151 -105 b -179 -174 -151 -141 -160 -162 b -239 -195 -194 -184 -217 -192 b -257 -197 -245 -195 -250 -197 b -423 -5 -349 -197 -423 -113 b -423 0 -423 -4 -423 -1 b -277 194 -420 97 -362 173 b -247 197 -268 197 -258 197 b -24 104 -185 197 -100 162 l -23 102 l -23 181 b -21 265 -23 260 -23 260 b -10 276 -20 269 -14 274 \"},\"v34\":{\"x_min\":0,\"x_max\":622.03125,\"ha\":635,\"o\":\"m 398 417 b 406 419 401 419 404 419 b 427 398 417 419 427 409 b 427 391 427 395 427 392 b 34 -274 424 385 38 -272 b 20 -280 29 -278 25 -280 b 0 -259 9 -280 0 -270 b 0 -252 0 -256 0 -254 b 393 413 2 -247 389 410 b 398 417 394 415 397 416 m 592 417 b 600 419 594 419 597 419 b 622 398 611 419 622 409 b 620 391 622 395 620 392 b 227 -274 617 385 231 -272 b 213 -280 223 -278 219 -280 b 193 -259 202 -280 193 -270 b 194 -252 193 -256 193 -254 b 586 413 196 -247 582 410 b 592 417 588 415 590 416 \"},\"v36\":{\"x_min\":-1.359375,\"x_max\":1064.390625,\"ha\":1086,\"o\":\"m 296 692 b 314 694 302 694 307 694 b 386 685 337 694 366 689 b 548 498 480 660 548 580 b 548 481 548 492 548 487 b 455 395 541 426 499 395 b 370 462 420 395 383 417 b 362 496 364 477 362 488 b 377 514 362 509 367 514 b 393 501 386 514 390 510 b 432 474 397 484 413 474 b 470 487 445 474 458 478 b 491 530 484 496 491 510 b 490 544 491 534 491 539 b 333 660 479 606 411 657 l 323 662 l 315 646 b 269 524 285 591 269 556 b 321 431 269 492 287 466 b 349 395 338 413 343 408 b 363 342 359 378 363 362 b 359 312 363 333 362 322 b 285 158 348 266 318 206 b 281 152 283 155 281 152 b 281 152 281 152 281 152 b 287 154 283 152 284 152 b 318 155 298 154 308 155 b 461 98 371 155 419 136 l 464 97 l 483 112 b 503 129 494 120 503 127 b 504 130 503 129 504 129 b 503 138 504 131 503 134 b 500 180 500 152 500 166 b 553 326 500 238 518 288 b 604 366 560 331 592 358 b 649 381 617 376 632 381 b 696 362 665 381 681 374 b 724 302 714 347 724 324 b 695 238 724 278 714 255 b 660 210 691 234 662 212 b 579 148 658 209 582 151 b 579 148 579 148 579 148 b 596 106 579 144 589 119 b 622 77 604 88 609 83 b 657 69 632 72 645 69 b 748 112 688 69 721 84 b 755 123 754 117 755 120 b 755 127 755 124 755 126 b 751 165 752 137 751 151 b 758 219 751 183 754 202 b 894 387 774 290 820 347 b 896 390 896 388 896 388 b 891 398 896 391 895 392 b 622 560 827 477 730 535 b 600 580 605 564 600 569 b 617 596 600 591 607 596 b 628 595 622 596 624 596 b 1057 248 846 552 1020 412 b 1064 191 1061 229 1064 209 b 922 0 1064 94 1005 9 b 902 -1 916 -1 909 -1 b 774 76 847 -1 800 26 b 769 83 770 81 770 83 b 769 81 769 83 769 83 b 627 -1 733 29 677 -1 b 548 27 597 -1 570 8 b 515 88 537 37 525 61 l 513 95 l 510 93 l 453 45 b 390 0 396 0 396 0 b 390 0 390 0 390 0 b 374 15 381 0 377 4 b 268 105 359 69 314 105 b 250 104 262 105 257 105 l 243 102 l 234 90 b 155 1 201 49 159 2 b 147 -1 152 0 149 -1 b 130 15 138 -1 130 6 b 132 20 130 18 132 19 b 136 31 133 22 134 27 b 220 131 149 74 178 109 b 231 137 225 134 230 136 b 302 278 280 202 302 244 b 265 335 302 299 295 309 b 209 442 234 363 213 402 b 209 455 209 446 209 451 b 279 648 209 502 232 564 l 285 659 l 283 659 b 176 627 238 653 210 645 b 57 477 111 594 66 538 b 55 459 55 471 55 464 b 72 409 55 437 61 415 b 93 403 78 405 87 403 b 152 467 123 403 151 431 b 168 488 153 483 157 488 b 185 462 181 488 185 483 l 185 460 b 137 344 183 409 168 369 b 78 322 119 328 98 322 b 13 360 50 322 25 335 b -1 426 4 380 -1 402 b 89 610 -1 488 32 559 b 296 692 147 659 210 685 m 926 348 b 921 353 924 351 922 353 b 914 348 920 353 918 351 b 823 167 857 306 823 237 b 828 124 823 154 826 138 b 890 31 837 79 862 40 b 896 31 892 31 894 31 b 956 104 916 31 940 59 b 970 191 965 129 970 159 b 966 241 970 208 969 224 b 926 348 959 277 945 313 m 627 326 b 619 326 624 326 622 326 b 598 316 611 326 604 323 b 568 215 579 288 568 255 b 568 208 568 213 568 210 b 571 183 570 195 570 184 l 571 183 b 594 201 571 183 582 191 l 634 231 b 660 259 653 247 656 248 b 664 278 662 266 664 272 b 627 326 664 299 649 320 \"},\"v38\":{\"x_min\":-1.359375,\"x_max\":651.96875,\"ha\":665,\"o\":\"m 389 644 b 405 645 394 645 400 645 b 504 566 450 645 492 613 b 507 541 506 557 507 549 b 480 471 507 514 498 489 l 477 467 l 483 470 b 609 591 539 485 586 531 b 613 601 611 595 613 599 b 631 609 619 607 624 609 b 651 588 641 609 651 602 b 200 -946 651 584 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 537 313 478 300 508 b 389 644 300 585 334 635 \"},\"v3b\":{\"x_min\":0,\"x_max\":484.5625,\"ha\":494,\"o\":\"m 228 245 b 239 247 234 247 239 247 b 243 247 240 247 242 247 b 303 238 257 247 287 242 b 484 -2 417 208 484 104 b 412 -177 484 -65 461 -127 b 243 -248 363 -226 303 -248 b 6 -63 138 -248 36 -180 b 0 -1 1 -41 0 -20 b 228 245 0 127 98 240 m 255 181 b 240 183 247 183 245 183 b 232 181 238 183 235 183 b 142 152 200 180 168 170 l 138 149 l 190 97 l 242 44 l 294 97 l 345 149 l 340 152 b 255 181 315 169 284 180 m 147 -54 l 197 -1 l 147 51 l 95 104 l 91 99 b 62 -1 72 70 62 34 b 66 -43 62 -15 63 -29 b 91 -101 72 -63 80 -84 l 95 -106 l 147 -54 m 393 99 b 389 104 390 102 389 104 b 337 51 389 104 366 80 l 285 -1 l 337 -54 l 389 -106 l 393 -101 b 421 -1 412 -72 421 -36 b 393 99 421 34 412 69 m 294 -98 b 242 -45 265 -69 242 -45 b 190 -98 242 -45 219 -69 l 138 -151 l 142 -154 b 242 -184 172 -174 206 -184 b 340 -154 276 -184 311 -174 l 345 -151 l 294 -98 \"},\"v3c\":{\"x_min\":0,\"x_max\":450.53125,\"ha\":460,\"o\":\"m 189 302 b 204 303 193 302 198 303 b 303 224 250 303 292 270 b 306 199 304 216 306 208 b 279 129 306 173 296 147 l 276 126 l 281 127 b 408 249 337 142 385 190 b 412 259 409 254 412 258 b 430 267 417 265 423 267 b 450 247 441 267 450 259 b 200 -605 450 242 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 194 111 136 99 165 b 189 302 99 244 133 292 \"},\"v3e\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 21 183 b 28 183 24 183 25 183 b 42 181 34 183 39 183 b 127 108 47 179 47 179 b 202 41 168 72 202 41 b 279 108 204 41 238 72 b 357 177 321 145 356 176 b 375 183 363 181 370 183 b 406 151 392 183 406 169 b 404 137 406 147 405 141 b 322 62 401 131 398 129 b 251 0 284 27 251 0 b 322 -63 251 -1 284 -29 b 404 -138 398 -130 401 -133 b 406 -152 405 -142 406 -148 b 375 -184 406 -170 392 -184 b 357 -179 370 -184 363 -183 b 279 -109 356 -177 321 -147 b 202 -43 238 -73 204 -43 b 127 -109 202 -43 168 -73 b 49 -179 85 -147 50 -177 b 31 -184 43 -183 36 -184 b 0 -152 13 -184 0 -170 b 2 -138 0 -148 0 -142 b 83 -63 5 -133 8 -130 b 155 0 122 -29 155 -1 b 83 62 155 0 122 27 b 8 129 43 97 10 127 b 0 151 2 136 0 144 b 21 183 0 165 8 177 \"},\"v3f\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -147 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 58 -123 6 -43 31 -86 b 196 -278 93 -173 134 -219 b 317 -570 274 -356 317 -460 b 294 -713 317 -617 308 -666 l 289 -724 l 294 -735 b 317 -873 308 -780 317 -827 b 235 -1132 317 -963 288 -1054 b 209 -1165 228 -1140 224 -1146 b 189 -1177 204 -1172 196 -1177 b 171 -1164 182 -1177 175 -1172 b 168 -1154 170 -1161 168 -1159 b 181 -1132 168 -1149 172 -1142 b 269 -891 238 -1064 269 -975 b 269 -881 269 -886 269 -884 b 262 -814 269 -857 265 -827 b 258 -800 261 -811 259 -806 b 142 -628 240 -731 198 -667 b -8 -589 112 -606 47 -589 b -20 -589 -13 -589 -19 -589 l -24 -589 l -24 -449 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 58 -424 6 -345 31 -388 b 194 -580 93 -476 136 -523 b 259 -660 221 -606 245 -635 b 261 -663 259 -662 261 -663 b 264 -656 262 -663 262 -660 b 269 -587 268 -632 269 -610 b 264 -521 269 -566 268 -544 b 262 -512 264 -517 262 -513 b 258 -498 261 -509 259 -503 b 142 -326 240 -428 198 -365 b -8 -287 112 -303 47 -288 b -20 -287 -13 -287 -19 -287 l -24 -287 l -24 -147 \"},\"v40\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\"v41\":{\"x_min\":-1.359375,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 294 322 b 318 323 299 322 308 323 b 360 320 334 323 352 322 b 526 217 430 310 490 273 b 543 166 537 202 543 184 b 447 70 543 117 503 70 b 445 70 447 70 446 70 b 359 159 394 72 359 113 b 368 201 359 173 362 187 b 442 245 382 229 412 245 b 455 244 446 245 451 245 b 460 244 458 244 460 244 b 460 244 460 244 460 244 b 454 248 460 244 458 245 b 325 291 417 276 372 291 b 285 287 313 291 299 290 b 144 -2 183 269 144 190 b 281 -290 144 -208 179 -280 b 304 -291 289 -291 298 -291 b 524 -105 412 -291 506 -212 b 541 -84 526 -88 530 -84 b 556 -101 551 -84 556 -90 b 549 -138 556 -111 553 -122 b 334 -322 521 -237 435 -310 b 302 -324 323 -323 313 -324 b 13 -101 172 -324 54 -234 b -1 -1 4 -68 -1 -34 b 294 322 -1 161 121 303 \"},\"v42\":{\"x_min\":-348.4375,\"x_max\":24.5,\"ha\":25,\"o\":\"m -330 155 b -322 156 -329 156 -326 156 b -315 156 -319 156 -317 156 b -298 147 -311 155 -308 154 b -19 30 -224 98 -122 55 l 2 26 b 24 -1 17 22 24 13 b 2 -27 24 -15 17 -23 l -19 -31 b -298 -148 -122 -56 -224 -99 b -322 -158 -313 -158 -315 -158 b -348 -131 -338 -158 -348 -145 b -344 -117 -348 -127 -347 -122 b -328 -104 -341 -112 -338 -111 b -127 -8 -269 -65 -202 -33 b -106 0 -115 -4 -106 -1 b -127 6 -106 0 -115 2 b -328 102 -202 31 -269 63 b -344 116 -338 109 -341 111 b -348 130 -347 120 -348 124 b -330 155 -348 141 -341 152 \"},\"v43\":{\"x_min\":-442.359375,\"x_max\":441,\"ha\":450,\"o\":\"m -31 487 b -1 488 -21 488 -10 488 b 434 104 216 488 397 330 b 441 27 438 79 441 47 b 439 12 441 20 439 15 b 419 0 435 4 427 0 b 404 5 413 0 408 1 b 398 30 400 11 398 13 b 0 351 390 213 213 351 b -59 348 -20 351 -39 349 b -400 30 -251 324 -393 191 b -405 5 -400 13 -401 11 b -420 0 -409 1 -415 0 b -441 12 -428 0 -436 4 b -442 27 -441 15 -442 20 b -435 104 -442 47 -439 79 b -31 487 -401 316 -235 474 m -13 131 b -1 133 -9 133 -5 133 b 51 105 19 133 39 123 b 61 70 58 95 61 83 b 51 34 61 58 58 45 b -1 6 39 16 19 6 b -46 27 -17 6 -34 13 b -62 69 -57 38 -62 54 b -13 131 -62 98 -44 124 \"},\"v44\":{\"x_min\":-21.78125,\"x_max\":251.8125,\"ha\":257,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 383 20 616 20 616 l 20 148 l 21 151 b 137 199 59 183 99 199 b 182 191 152 199 167 197 b 251 84 227 176 251 134 b 228 0 251 58 243 29 b 100 -142 206 -40 178 -72 l 23 -215 b 0 -229 9 -229 6 -229 b -20 -216 -9 -229 -17 -224 l -21 -212 l -21 201 l -21 616 l -20 620 b -8 631 -17 624 -13 630 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 \"},\"v45\":{\"x_min\":-402.890625,\"x_max\":401.53125,\"ha\":410,\"o\":\"m -10 273 b -4 274 -9 273 -6 274 b 16 262 4 274 12 269 b 17 158 17 259 17 259 l 17 56 l 62 112 b 117 174 110 172 110 172 b 122 174 118 174 119 174 b 132 173 125 174 129 173 b 295 11 134 172 171 134 l 307 -1 l 336 34 b 374 76 366 72 368 74 b 381 77 375 77 378 77 b 401 56 392 77 401 68 b 400 48 401 54 401 51 b 223 -172 397 41 230 -166 b 210 -176 220 -174 215 -176 b 201 -174 206 -176 204 -176 b 112 -87 198 -173 178 -152 b 27 0 65 -38 27 0 b 21 -6 27 0 24 -2 l 17 -12 l 17 -147 b 17 -210 17 -173 17 -194 b 10 -292 17 -297 16 -287 b -2 -299 6 -297 2 -299 b -21 -287 -10 -299 -19 -295 b -24 -174 -23 -284 -23 -284 l -24 -63 l -66 -117 b -121 -176 -110 -170 -114 -176 b -125 -176 -122 -176 -123 -176 b -296 -12 -134 -174 -125 -184 l -308 0 l -337 -34 b -375 -77 -367 -73 -370 -76 b -382 -79 -377 -79 -379 -79 b -402 -58 -393 -79 -402 -69 b -401 -49 -402 -55 -402 -52 b -224 170 -398 -43 -231 165 b -212 174 -221 173 -216 174 b -202 173 -208 174 -205 174 b -39 11 -200 172 -151 122 l -28 -1 l -25 1 l -24 4 l -24 130 b -23 260 -24 256 -24 258 b -10 273 -20 266 -16 270 \"},\"v46\":{\"x_min\":0,\"x_max\":627.46875,\"ha\":640,\"o\":\"m 306 190 b 314 191 308 191 311 191 b 326 184 318 191 322 190 l 336 173 b 510 52 377 127 442 80 b 515 49 513 51 515 49 b 611 16 537 40 579 24 b 627 0 624 13 627 9 b 607 -18 627 -11 624 -13 b 330 -181 490 -49 389 -109 b 314 -192 323 -190 319 -192 b 306 -191 311 -192 308 -192 b 294 -177 302 -188 302 -188 b 257 -140 287 -170 265 -148 b 19 -18 193 -84 114 -44 b 0 0 2 -13 0 -11 b 16 16 0 9 2 13 b 110 49 47 24 89 40 b 117 52 111 49 114 51 b 145 65 126 56 130 58 b 281 163 200 93 245 124 b 300 186 288 170 291 174 b 306 190 300 187 303 188 m 317 137 b 313 142 315 141 314 142 b 308 137 313 142 311 141 b 161 4 276 84 220 33 b 155 0 159 1 155 0 b 163 -4 155 0 159 -2 b 308 -138 220 -34 276 -84 b 313 -142 311 -141 313 -142 b 317 -138 314 -142 315 -141 b 464 -4 351 -84 406 -34 b 470 0 468 -2 470 0 b 464 4 470 0 468 1 b 317 137 406 33 351 84 \"},\"v47\":{\"x_min\":-24.5,\"x_max\":315.78125,\"ha\":322,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 1 -26 -10 -5 -6 -9 b 175 -241 31 -86 96 -166 b 314 -548 259 -323 304 -420 b 315 -589 315 -555 315 -571 b 314 -630 315 -606 315 -623 b 298 -730 311 -664 306 -699 l 295 -742 l 296 -748 b 314 -850 304 -778 311 -813 b 315 -892 315 -857 315 -874 b 314 -932 315 -909 315 -925 b 298 -1032 311 -967 306 -1002 l 295 -1045 l 296 -1050 b 314 -1153 304 -1081 311 -1115 b 315 -1193 315 -1160 315 -1177 b 314 -1235 315 -1211 315 -1228 b 217 -1526 306 -1338 270 -1444 b 201 -1533 213 -1532 208 -1533 b 182 -1522 193 -1533 185 -1529 b 179 -1514 181 -1518 179 -1517 b 189 -1489 179 -1508 182 -1501 b 266 -1217 240 -1403 266 -1308 b 262 -1156 266 -1196 265 -1177 b 110 -907 247 -1043 190 -950 b 0 -889 87 -895 50 -889 l -1 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 1 -631 -10 -610 -6 -614 b 175 -846 31 -691 96 -771 b 259 -956 213 -884 236 -914 b 265 -966 262 -961 264 -966 b 265 -966 265 -966 265 -966 b 265 -953 265 -964 265 -959 b 266 -920 266 -943 266 -932 b 262 -853 266 -898 265 -873 b 110 -605 247 -741 190 -648 b 0 -587 87 -592 50 -587 l -1 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 1 -328 -10 -308 -6 -312 b 175 -544 31 -388 96 -469 b 259 -655 213 -581 236 -612 b 265 -663 262 -659 264 -663 b 265 -663 265 -663 265 -663 b 265 -650 265 -663 265 -657 b 266 -617 266 -641 266 -630 b 262 -551 266 -595 265 -570 b 110 -303 247 -438 190 -345 b 0 -284 87 -290 50 -284 l -1 -284 l -24 -284 l -24 -145 \"},\"v49\":{\"x_min\":0,\"x_max\":630.203125,\"ha\":643,\"o\":\"m 308 204 b 314 205 310 205 313 205 b 326 201 319 205 323 204 b 355 154 328 199 338 180 b 401 83 362 142 392 95 l 409 72 b 431 41 412 66 424 49 b 619 -174 498 -51 570 -134 b 630 -192 626 -180 630 -186 b 626 -202 630 -195 628 -199 b 616 -206 623 -205 620 -206 b 552 -188 608 -206 592 -202 b 310 -155 488 -169 392 -155 b 268 -156 295 -155 281 -155 b 77 -188 197 -161 126 -173 b 13 -206 35 -202 20 -206 b 9 -206 12 -206 10 -206 b 0 -191 2 -202 0 -197 b 8 -176 0 -186 2 -180 b 204 49 58 -136 138 -43 l 220 72 l 227 83 b 295 188 245 108 281 166 b 308 204 299 197 304 202 m 315 147 b 314 147 315 147 314 147 b 314 147 314 147 314 147 b 306 129 314 145 310 138 l 296 105 b 281 72 292 97 284 77 l 274 56 b 181 -123 247 -4 212 -72 l 174 -134 l 176 -133 b 314 -123 215 -127 272 -123 b 451 -133 356 -123 413 -127 l 454 -134 l 449 -123 b 353 56 417 -72 381 -4 l 347 72 b 332 105 344 77 336 97 l 322 129 b 315 147 318 138 315 145 \"},\"v4a\":{\"x_min\":70.78125,\"x_max\":378.390625,\"ha\":315,\"o\":\"m 246 373 b 254 373 249 373 251 373 b 372 324 303 373 360 351 b 378 302 377 317 378 309 b 338 251 378 278 362 255 b 328 249 334 249 332 249 b 283 294 303 249 283 270 b 288 315 283 301 284 308 b 289 319 289 317 289 319 b 289 319 289 319 289 319 b 283 320 289 320 287 320 b 270 322 279 322 274 322 b 206 288 242 322 215 308 b 206 283 206 287 206 285 b 257 223 206 267 230 238 b 284 206 272 213 277 210 b 351 90 328 173 351 130 b 340 47 351 74 348 59 b 205 -30 314 -2 264 -30 b 182 -29 198 -30 190 -30 b 84 15 147 -24 103 -5 b 70 48 74 24 70 36 b 108 99 70 70 85 94 b 121 102 112 101 117 102 b 167 56 147 102 167 80 b 159 31 167 48 164 40 l 156 26 l 157 26 b 190 20 167 22 178 20 b 220 26 201 20 212 22 b 258 65 243 34 258 51 b 257 70 258 66 258 69 b 204 126 249 94 234 109 b 114 258 148 158 114 209 b 125 302 114 273 118 288 b 246 373 147 342 193 370 \"},\"v4b\":{\"x_min\":0,\"x_max\":503.609375,\"ha\":514,\"o\":\"m 274 430 b 277 430 276 430 277 430 b 310 394 296 430 310 415 b 308 383 310 391 308 387 b 306 367 307 381 307 374 b 236 120 298 305 272 210 b 40 -273 189 -5 125 -134 b 20 -287 35 -283 27 -287 b 5 -281 14 -287 9 -285 b 0 -267 1 -277 0 -273 b 9 -242 0 -262 2 -255 b 246 395 137 -12 232 242 b 274 430 249 416 257 427 m 468 430 b 472 430 469 430 470 430 b 503 394 490 430 503 415 b 502 383 503 391 503 387 b 499 367 502 381 500 374 b 431 120 491 305 465 210 b 234 -273 382 -5 318 -134 b 213 -287 228 -283 220 -287 b 198 -281 208 -287 202 -285 b 193 -267 194 -277 193 -273 b 202 -242 193 -262 196 -255 b 439 395 330 -12 426 242 b 468 430 442 416 451 427 \"},\"v4d\":{\"x_min\":-311.6875,\"x_max\":310.328125,\"ha\":317,\"o\":\"m -9 388 b -2 390 -8 390 -5 390 b 5 388 1 390 4 390 b 19 378 10 387 16 383 b 23 333 23 371 23 371 b 24 298 23 299 24 298 b 81 276 34 298 65 285 b 213 91 145 240 190 177 b 224 24 217 76 224 36 b 257 24 224 24 235 24 b 299 19 292 24 292 24 b 310 -1 306 15 310 6 b 299 -23 310 -11 306 -19 b 257 -27 292 -27 292 -27 b 224 -29 235 -27 224 -29 b 213 -95 224 -40 217 -80 b 81 -280 190 -181 145 -244 b 24 -301 65 -290 34 -301 b 23 -335 24 -301 23 -303 l 23 -340 b 17 -381 23 -374 23 -374 b -1 -391 13 -388 5 -391 b -21 -381 -9 -391 -17 -388 b -27 -340 -27 -374 -27 -374 l -27 -335 b -28 -301 -27 -303 -27 -301 b -85 -280 -38 -301 -69 -290 b -217 -95 -149 -244 -194 -181 b -228 -29 -221 -80 -228 -40 b -259 -27 -228 -29 -238 -27 b -300 -23 -294 -27 -294 -27 b -311 -2 -307 -19 -311 -11 b -294 23 -311 8 -304 19 b -259 24 -291 23 -284 24 b -228 24 -239 24 -228 24 b -217 91 -228 36 -221 76 b -85 276 -194 177 -149 240 b -28 298 -69 285 -38 298 b -27 333 -27 298 -27 299 b -27 371 -27 362 -27 369 b -9 388 -24 378 -17 385 m -27 136 b -28 247 -27 197 -28 247 b -61 216 -31 247 -53 226 b -123 33 -95 172 -121 98 l -125 24 l -76 24 l -27 24 l -27 136 m 29 242 b 24 247 27 245 24 247 b 23 136 24 247 23 197 l 23 24 l 72 24 l 121 24 l 119 33 b 29 242 115 116 77 206 m -27 -140 l -27 -27 l -76 -27 l -125 -27 l -123 -36 b -61 -220 -121 -102 -95 -176 b -28 -251 -53 -230 -31 -251 b -27 -140 -28 -251 -27 -201 m 119 -36 l 121 -27 l 72 -27 l 23 -27 l 23 -140 b 24 -251 23 -201 24 -251 b 57 -220 27 -251 49 -230 b 119 -36 91 -176 117 -102 \"},\"v4e\":{\"x_min\":0,\"x_max\":239.5625,\"ha\":244,\"o\":\"m 10 460 b 20 462 13 462 14 462 b 39 449 28 462 35 458 l 40 446 l 40 326 b 40 205 40 259 40 205 b 127 227 40 205 80 215 b 220 249 196 244 213 249 b 227 247 224 249 225 248 b 238 237 231 245 235 241 l 239 233 l 239 -106 l 239 -448 l 238 -451 b 219 -463 234 -459 225 -463 b 198 -451 210 -463 202 -459 l 197 -448 l 197 -324 b 197 -201 197 -248 197 -201 b 110 -223 196 -201 157 -210 b 17 -245 42 -240 24 -245 b 10 -242 13 -245 13 -244 b 0 -233 6 -241 2 -237 l 0 -230 l 0 108 l 0 446 l 0 449 b 10 460 2 453 6 458 m 197 22 b 197 70 197 41 197 58 b 196 116 197 113 197 116 l 196 116 b 118 97 196 116 160 106 l 40 77 l 40 -18 b 40 -112 40 -69 40 -112 l 119 -93 l 197 -73 l 197 22 \"},\"v51\":{\"x_min\":-1.359375,\"x_max\":455.96875,\"ha\":465,\"o\":\"m 352 541 b 357 542 353 542 355 542 b 377 530 364 542 372 537 l 378 526 l 378 394 l 379 262 l 404 266 b 436 270 420 269 430 270 b 450 265 443 270 446 269 b 455 220 455 259 455 260 l 455 208 l 455 161 l 454 156 b 411 140 449 147 447 147 b 378 133 393 137 379 134 b 378 68 378 133 378 106 b 378 22 378 54 378 38 l 379 -87 l 404 -83 b 436 -79 420 -80 430 -79 b 450 -84 443 -79 446 -80 b 455 -129 455 -90 455 -88 l 455 -141 l 455 -188 l 454 -192 b 413 -209 449 -202 447 -202 b 382 -215 398 -212 383 -215 l 378 -215 l 378 -345 l 378 -380 b 375 -485 378 -484 378 -480 b 357 -494 371 -491 364 -494 b 340 -485 351 -494 344 -491 b 336 -383 337 -480 336 -484 l 336 -349 l 336 -223 l 334 -223 b 291 -231 334 -223 314 -227 l 247 -240 l 247 -371 l 246 -503 l 245 -506 b 225 -519 242 -514 234 -519 b 206 -506 219 -519 210 -514 l 205 -503 l 205 -376 l 205 -248 l 160 -256 l 115 -265 l 115 -396 l 115 -527 l 114 -531 b 95 -544 110 -539 102 -544 b 76 -531 87 -544 78 -539 l 73 -527 l 73 -399 b 73 -273 73 -330 73 -273 b 49 -277 73 -273 61 -274 b 17 -281 32 -280 24 -281 b 4 -276 10 -281 8 -280 b -1 -234 0 -269 -1 -272 b 0 -219 -1 -229 0 -224 l 0 -170 l 1 -167 b 10 -158 2 -163 6 -159 b 49 -149 13 -156 16 -155 l 73 -145 l 73 -34 b 73 76 73 26 73 76 b 49 72 73 76 61 74 b 17 68 32 69 24 68 b 4 73 10 68 8 69 b -1 115 0 80 -1 77 b 0 130 -1 120 0 124 l 0 179 l 1 181 b 10 191 2 186 6 190 b 49 199 13 192 16 194 l 73 204 l 73 338 b 73 374 73 352 73 365 b 77 483 73 484 73 477 b 95 492 81 489 88 492 b 111 483 100 492 107 489 b 115 378 115 477 115 483 l 115 342 b 117 212 115 223 115 212 b 204 229 117 212 200 227 l 205 229 l 205 365 l 205 502 l 206 505 b 225 517 210 513 219 517 b 245 505 234 517 242 513 l 246 502 l 247 369 l 247 237 l 249 237 b 336 254 253 238 336 254 b 337 390 336 254 337 302 l 337 526 l 338 530 b 352 541 341 535 347 539 m 336 15 b 336 126 336 102 336 126 l 336 126 b 291 117 336 126 315 122 l 247 109 l 247 -1 l 247 -112 l 249 -112 b 336 -95 253 -111 336 -95 b 336 15 336 -95 336 -56 m 205 -120 b 205 -55 205 -120 205 -93 b 205 -9 205 -41 205 -24 l 205 101 l 160 93 l 115 84 l 115 -26 b 115 -83 115 -49 115 -69 b 117 -137 115 -133 115 -137 b 205 -120 118 -137 204 -120 \"},\"v52\":{\"x_min\":-10.890625,\"x_max\":298.078125,\"ha\":294,\"o\":\"m 138 473 b 142 474 140 473 141 474 b 164 459 148 474 153 470 b 191 402 183 442 191 423 b 181 353 191 388 187 371 b 178 349 179 352 178 349 b 179 348 178 348 179 348 b 185 349 181 348 182 348 b 255 376 210 355 234 363 b 272 381 264 381 266 381 b 298 355 287 381 298 370 b 288 330 298 348 298 345 b 171 34 238 254 194 141 b 166 13 168 16 168 16 b 144 1 161 5 152 1 b 121 15 134 1 125 5 b 115 33 119 18 117 24 b 0 330 91 145 49 252 b -10 355 -9 345 -10 348 b 13 381 -10 371 0 381 b 31 376 19 381 25 380 b 132 345 61 358 103 345 l 136 345 l 137 355 b 145 378 138 359 142 370 b 152 415 149 394 152 405 b 137 452 152 427 148 438 b 133 464 134 458 133 460 b 138 473 133 467 134 470 \"},\"v53\":{\"x_min\":0,\"x_max\":902.421875,\"ha\":921,\"o\":\"m 17 240 b 24 241 19 241 21 241 b 32 240 28 241 31 241 b 46 229 38 238 43 234 b 50 88 50 223 50 237 b 50 -1 50 63 50 34 b 50 -90 50 -36 50 -65 b 46 -231 50 -238 50 -224 b 25 -242 42 -238 34 -242 b 0 -224 14 -242 4 -235 b 0 2 0 -222 0 -108 b 0 223 0 112 0 220 b 17 240 2 230 9 237 m 110 240 b 118 241 111 241 114 241 b 126 240 121 241 123 241 b 142 223 133 237 140 230 b 144 123 144 220 144 205 b 144 29 144 45 144 29 b 144 29 144 29 144 29 b 393 183 166 106 264 167 b 450 186 412 184 431 186 b 756 29 600 186 732 120 b 756 29 756 29 756 29 b 758 123 758 29 758 45 b 760 227 758 226 758 223 b 784 241 766 237 774 241 b 804 229 792 241 800 237 b 809 88 808 223 809 237 l 809 -1 l 809 -90 b 804 -231 809 -238 808 -224 b 784 -242 800 -238 792 -242 b 762 -231 775 -242 766 -238 b 758 -124 756 -224 758 -231 b 756 -30 758 -47 758 -30 b 756 -30 756 -30 756 -30 b 509 -184 736 -108 637 -169 b 450 -187 488 -187 469 -187 b 144 -30 300 -187 168 -122 b 144 -30 144 -30 144 -30 b 144 -124 144 -30 144 -47 b 140 -231 144 -231 144 -224 b 118 -242 134 -238 126 -242 b 92 -224 107 -242 96 -235 b 92 2 92 -222 92 -108 b 92 223 92 112 92 220 b 110 240 95 230 102 237 m 432 161 b 413 162 426 162 420 162 b 313 41 351 162 313 109 b 347 -73 313 5 323 -34 b 487 -163 385 -133 439 -163 b 578 -97 526 -163 562 -142 b 588 -43 585 -80 588 -62 b 432 161 588 47 518 147 m 868 240 b 876 241 869 241 872 241 b 884 240 879 241 882 241 b 898 229 890 238 894 234 b 902 88 902 223 902 237 l 902 -1 l 902 -90 b 898 -231 902 -238 902 -224 b 876 -242 892 -238 884 -242 b 852 -224 865 -242 854 -235 b 850 2 850 -222 850 -108 b 852 223 850 112 850 220 b 868 240 853 230 860 237 \"},\"v54\":{\"x_min\":-24.5,\"x_max\":317.140625,\"ha\":324,\"o\":\"m -24 -161 l -24 -5 l -20 -5 b 0 -24 -9 -5 -2 -12 b 171 -315 21 -124 84 -233 b 317 -660 268 -406 317 -531 b 187 -1014 317 -782 274 -909 b 161 -1034 172 -1034 171 -1034 b 141 -1013 149 -1034 141 -1025 b 152 -991 141 -1004 142 -1002 b 266 -682 228 -899 266 -788 b 174 -430 266 -588 236 -498 b -23 -317 136 -388 66 -348 b -24 -161 -23 -316 -24 -285 \"},\"v55\":{\"x_min\":0,\"x_max\":551.25,\"ha\":563,\"o\":\"m 289 644 b 304 645 294 645 299 645 b 404 566 349 645 392 613 b 406 541 405 557 406 549 b 379 471 406 514 397 489 l 377 467 l 382 470 b 509 591 438 485 485 531 b 513 601 510 595 513 599 b 530 609 518 607 524 609 b 551 588 540 609 551 602 b 200 -605 551 584 204 -599 b 182 -616 197 -612 190 -616 b 163 -602 174 -616 166 -610 b 161 -598 161 -601 161 -601 b 217 -402 161 -589 170 -562 b 272 -213 247 -298 272 -213 b 272 -213 272 -213 272 -213 b 264 -219 272 -213 268 -216 b 140 -262 227 -247 182 -262 b 36 -226 102 -262 65 -249 b 0 -145 12 -206 0 -176 b 17 -84 0 -124 5 -104 b 103 -38 38 -54 70 -38 b 191 -91 137 -38 172 -56 b 205 -141 201 -106 205 -124 b 178 -212 205 -167 196 -194 l 175 -215 l 182 -213 b 307 -93 236 -198 284 -151 b 372 129 308 -88 372 127 b 372 129 372 129 372 129 b 364 122 372 129 368 126 b 240 80 328 94 283 80 b 137 115 202 80 166 91 b 99 195 112 136 99 165 b 118 256 99 217 106 238 b 204 303 138 287 171 303 b 292 249 238 303 273 285 b 306 199 302 234 306 217 b 279 129 306 173 296 148 l 276 126 l 281 127 b 408 248 336 142 385 190 b 473 470 409 254 473 469 b 473 470 473 470 473 470 b 465 464 473 470 469 467 b 341 421 428 435 383 421 b 236 458 303 421 266 433 b 200 537 212 478 200 508 b 289 644 200 585 234 635 \"},\"v58\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 259 1553 b 265 1553 261 1553 264 1553 b 288 1540 272 1553 277 1550 b 367 1351 340 1493 367 1424 b 336 1221 367 1308 357 1263 l 332 1211 l 333 1208 b 367 1077 356 1170 367 1124 b 336 945 367 1032 357 986 l 332 935 l 333 932 b 367 800 356 893 367 848 b 336 669 367 756 357 710 l 332 659 l 333 656 b 367 523 356 617 367 571 b 345 412 367 485 360 446 b 231 273 322 356 284 310 b -1 19 121 195 27 93 b -17 4 -4 11 -10 5 l -21 4 l -21 134 l -21 265 l -17 265 b 133 291 20 265 96 278 b 318 537 245 328 318 433 b 307 603 318 559 315 582 b 303 614 304 612 304 614 b 298 609 302 614 300 613 b 231 549 281 589 258 567 b -1 295 121 471 27 369 b -17 280 -4 287 -10 281 l -21 280 l -21 410 l -21 541 l -17 541 b 133 567 20 541 96 555 b 318 813 245 605 318 709 b 307 880 318 835 315 859 b 303 891 304 888 304 891 b 298 885 302 891 300 888 b 231 825 281 866 258 843 b -1 571 121 748 27 645 b -17 556 -4 563 -10 557 l -21 556 l -21 687 l -21 817 l -17 817 b 133 843 20 817 96 830 b 318 1089 245 881 318 985 b 307 1156 318 1111 315 1134 b 303 1167 304 1164 304 1167 b 298 1161 302 1167 300 1164 b 231 1102 281 1140 258 1120 b -1 848 121 1024 27 921 b -17 832 -4 839 -10 834 l -21 832 l -21 963 l -21 1093 l -17 1093 b 114 1113 12 1093 78 1103 b 313 1314 215 1142 289 1218 b 318 1364 317 1331 318 1347 b 255 1511 318 1422 295 1478 b 243 1532 247 1519 243 1525 b 259 1553 243 1540 250 1550 \"},\"v59\":{\"x_min\":0,\"x_max\":464.140625,\"ha\":474,\"o\":\"m 0 0 l 0 347 l 76 347 l 153 347 l 153 0 l 153 -348 l 76 -348 l 0 -348 l 0 0 m 308 -1 l 308 347 l 386 347 l 464 347 l 464 -1 l 464 -348 l 386 -348 l 308 -348 l 308 -1 \"},\"v5a\":{\"x_min\":-171.5,\"x_max\":170.140625,\"ha\":174,\"o\":\"m -6 566 b 0 567 -5 567 -2 567 b 14 556 6 567 12 563 b 92 285 14 555 50 433 b 170 13 166 33 170 19 b 168 13 170 13 170 13 b 161 1 168 8 167 4 l 159 0 l 122 0 l 84 0 l 81 1 b 21 195 76 5 78 -5 b -32 381 -8 297 -32 381 b -87 197 -32 381 -57 298 b -141 8 -115 94 -140 9 b -155 0 -142 2 -149 0 b -171 15 -163 0 -171 5 b -14 556 -171 18 -24 528 b -6 566 -14 560 -10 564 \"},\"v5b\":{\"x_min\":-441,\"x_max\":439.640625,\"ha\":449,\"o\":\"m -428 -2 b -421 0 -427 -1 -424 0 b -406 -6 -416 0 -409 -2 b -400 -31 -401 -12 -400 -15 b -1 -352 -392 -215 -215 -352 b 58 -349 19 -352 38 -351 b 398 -31 250 -326 392 -192 b 404 -6 398 -15 400 -12 b 419 -1 408 -2 413 -1 b 439 -13 427 -1 435 -5 b 439 -29 439 -16 439 -22 b 434 -105 439 -48 438 -80 b 0 -489 397 -333 213 -489 b -68 -484 -23 -489 -44 -488 b -441 -36 -280 -452 -436 -263 b -441 -30 -441 -34 -441 -31 b -428 -2 -441 -11 -439 -5 m -13 -9 b -1 -8 -9 -8 -5 -8 b 50 -36 19 -8 39 -19 b 61 -72 57 -47 61 -59 b 50 -106 61 -84 57 -97 b -1 -134 39 -124 19 -134 b -46 -115 -17 -134 -34 -129 b -62 -72 -57 -102 -62 -87 b -13 -9 -62 -44 -44 -16 \"},\"v5c\":{\"x_min\":0,\"x_max\":447.8125,\"ha\":457,\"o\":\"m 0 -87 l 0 0 l 223 0 l 447 0 l 447 -87 l 447 -174 l 223 -174 l 0 -174 l 0 -87 \"},\"v5d\":{\"x_min\":-1.359375,\"x_max\":592.078125,\"ha\":604,\"o\":\"m 280 692 b 295 694 283 692 289 694 b 310 692 300 694 307 692 b 357 630 340 684 357 657 b 336 580 357 612 351 594 b 311 538 321 566 311 549 b 352 492 311 512 330 492 b 366 495 357 492 362 492 b 397 553 390 503 397 517 b 415 603 397 576 402 591 b 460 623 427 617 443 623 b 509 599 479 623 498 614 b 522 559 518 587 522 573 b 494 506 522 538 513 519 b 451 495 481 498 473 496 b 415 488 432 495 426 494 b 394 449 404 483 394 464 b 394 448 394 448 394 448 l 394 440 l 397 433 b 428 409 404 420 413 413 b 438 408 431 408 435 408 b 479 431 450 408 462 415 b 528 455 495 448 510 455 b 548 452 534 455 541 453 b 592 391 577 442 592 416 b 549 331 592 365 577 340 b 528 327 541 328 534 327 b 479 351 510 327 495 335 b 438 374 464 367 450 374 b 417 369 431 374 424 373 b 394 333 402 360 394 348 b 400 312 394 326 396 319 b 451 287 408 294 420 288 b 513 258 484 285 499 278 b 522 223 519 247 522 234 b 461 159 522 190 496 159 b 449 161 457 159 453 159 b 397 229 416 167 397 191 b 366 288 397 265 390 278 b 352 290 362 290 357 290 b 315 262 336 290 321 280 b 311 245 313 256 311 251 b 334 204 311 233 318 220 b 355 170 348 190 351 184 b 357 152 356 166 357 159 b 355 136 357 147 356 140 b 295 88 345 104 321 88 b 232 152 264 88 232 112 b 255 204 232 174 238 186 b 279 244 273 222 279 231 l 279 245 b 238 290 279 270 259 290 b 224 288 234 290 228 290 b 193 229 200 278 193 265 b 141 161 193 191 174 167 b 129 159 137 159 133 159 b 68 223 93 159 68 190 b 77 258 68 234 70 247 b 138 287 91 278 106 285 b 185 302 166 287 175 291 b 196 333 193 312 196 323 b 174 369 196 347 187 360 b 152 374 166 373 159 374 b 111 351 140 374 126 367 b 62 327 95 335 80 327 b 51 328 58 327 54 327 b -1 391 16 334 -1 363 b 53 455 -1 420 17 449 b 62 455 57 455 59 455 b 111 431 80 455 95 448 b 152 408 127 415 140 408 b 161 409 155 408 159 408 b 193 433 176 413 186 420 l 196 440 l 196 448 b 196 451 196 449 196 449 b 190 471 196 459 194 463 b 137 495 182 489 167 495 l 134 495 l 134 495 b 68 560 95 495 68 521 b 129 623 68 596 95 623 b 144 621 134 623 138 623 b 193 553 175 614 193 589 b 224 495 193 517 200 503 b 238 492 228 492 234 492 b 279 538 259 492 279 512 b 254 580 279 549 269 566 b 232 630 239 594 232 612 b 280 692 232 657 250 684 m 307 456 b 295 458 303 458 299 458 b 230 391 258 458 230 426 b 236 360 230 381 231 371 b 295 324 249 337 272 324 b 353 360 318 324 341 337 b 360 391 357 370 360 381 b 307 456 360 421 340 451 \"},\"v60\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m -367 173 b -362 174 -366 174 -364 174 b -351 173 -357 174 -353 173 b -262 86 -348 172 -328 151 b -176 0 -216 37 -176 0 b -107 84 -176 0 -145 37 b -31 174 -36 173 -38 172 b -25 174 -29 174 -28 174 b -16 173 -23 174 -19 173 b 72 86 -13 172 6 151 b 157 0 119 37 157 0 b 227 84 159 0 189 37 b 303 174 298 173 296 172 b 308 174 304 174 307 174 b 318 173 313 174 317 173 b 481 11 322 172 357 134 l 494 -1 l 522 34 b 560 76 553 72 555 74 b 567 77 563 77 564 77 b 589 56 579 77 589 68 b 586 48 589 54 588 51 b 411 -172 583 41 416 -166 b 397 -176 406 -174 401 -176 b 387 -174 393 -176 390 -176 b 299 -87 386 -173 366 -152 b 213 0 253 -38 213 0 b 144 -86 213 0 182 -38 b 68 -174 73 -174 74 -173 b 62 -176 66 -176 65 -176 b 53 -174 59 -176 55 -174 b -35 -87 50 -173 29 -152 b -121 0 -83 -38 -121 0 b -190 -86 -122 0 -152 -38 b -266 -174 -261 -174 -259 -173 b -272 -176 -268 -176 -270 -176 b -281 -174 -276 -176 -280 -174 b -371 -86 -284 -173 -304 -152 b -457 0 -417 -38 -457 0 l -457 0 b -477 -26 -457 0 -470 -16 b -548 -227 -524 -88 -548 -161 b -536 -303 -548 -254 -544 -280 b -533 -317 -534 -309 -533 -313 b -553 -338 -533 -330 -541 -338 b -577 -315 -566 -338 -571 -333 b -590 -227 -586 -287 -590 -258 b -518 -9 -590 -154 -564 -77 b -465 56 -509 2 -504 8 l -402 134 b -367 173 -375 169 -372 172 \"},\"v62\":{\"x_min\":46.28125,\"x_max\":669.671875,\"ha\":563,\"o\":\"m 183 376 b 189 376 185 376 187 376 b 212 374 197 376 208 376 b 265 337 234 369 253 355 b 274 317 268 331 273 320 b 274 316 274 317 274 316 b 280 323 276 316 276 319 b 311 358 288 337 299 348 b 319 366 315 360 318 365 b 356 376 326 373 340 376 b 382 371 364 376 374 374 b 428 337 400 366 417 352 b 436 317 431 331 436 320 b 438 316 436 317 436 316 b 442 323 438 316 439 319 b 475 358 451 337 462 348 b 483 366 477 360 481 365 b 518 376 488 373 503 376 b 544 373 528 376 536 376 b 604 285 579 360 604 326 b 597 249 604 273 601 258 b 543 63 596 247 544 70 b 541 54 543 61 541 55 b 540 44 540 51 540 47 b 552 23 540 33 545 23 b 552 23 552 23 552 23 b 647 126 586 29 627 72 b 658 138 651 136 653 138 b 660 138 660 138 660 138 b 669 129 666 137 669 136 b 654 88 669 122 665 109 b 562 -12 631 43 602 9 l 549 -19 b 521 -27 540 -24 530 -27 b 447 30 490 -27 458 -4 b 443 58 445 38 443 48 b 450 93 443 72 446 84 b 504 278 453 97 504 272 b 507 288 506 283 506 287 b 509 298 507 292 509 295 b 491 326 509 310 502 320 b 487 327 490 327 488 327 b 479 324 484 327 483 326 b 441 270 462 316 443 288 b 435 249 441 265 436 254 b 398 127 434 248 419 195 b 362 4 379 61 362 5 b 328 -1 359 -1 362 -1 b 314 -1 323 -1 319 -1 b 302 -1 310 -1 306 -1 b 266 4 266 -1 269 -1 b 265 6 265 5 265 5 b 303 144 265 13 272 34 b 343 278 325 216 343 276 b 344 288 343 281 344 285 b 345 298 345 291 345 295 b 330 326 345 310 340 320 b 323 327 328 327 325 327 b 317 324 322 327 321 326 b 279 270 300 316 281 288 b 273 249 279 265 274 254 b 236 127 272 248 255 195 b 200 4 216 61 200 5 b 164 -1 197 -1 198 -1 b 151 -1 161 -1 156 -1 b 140 -1 147 -1 142 -1 b 103 4 104 -1 106 -1 b 103 6 103 5 103 5 b 141 144 103 13 108 34 b 181 278 161 216 179 276 b 182 288 181 281 181 285 b 183 298 182 291 183 295 b 168 324 183 310 178 320 b 160 327 166 326 163 327 b 141 320 156 327 151 324 b 69 230 112 305 85 272 b 57 215 65 217 62 215 b 55 215 57 215 55 215 b 46 224 49 215 46 217 b 59 260 46 231 50 242 b 151 363 81 306 112 341 b 161 369 155 365 160 367 b 183 376 166 371 174 374 \"},\"v68\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 155 11 -5 172 43 123 l 166 -1 l 168 1 l 170 4 l 170 130 b 171 260 170 256 170 258 b 191 274 175 269 183 274 b 205 267 196 274 201 272 b 212 158 212 262 210 273 l 212 56 l 257 112 b 311 173 304 172 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 216 -6 221 -1 219 -2 l 212 -12 l 212 -147 b 212 -210 212 -173 212 -194 b 205 -292 212 -297 210 -287 b 191 -299 201 -297 196 -299 b 172 -287 183 -299 175 -295 b 170 -174 171 -284 171 -284 l 170 -63 l 127 -117 b 73 -176 84 -170 80 -176 b 68 -176 72 -176 70 -176 b -27 -87 59 -174 65 -180 b -114 0 -74 -38 -112 0 b -182 -86 -114 0 -145 -38 b -258 -174 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\"v6c\":{\"x_min\":-1.359375,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 78 233 b 87 233 81 233 84 233 b 187 140 132 233 174 195 b 193 102 190 127 193 115 b 43 -113 193 22 136 -62 b 27 -119 36 -116 31 -119 b 19 -108 21 -119 19 -115 b 29 -97 19 -102 20 -101 b 102 13 73 -72 102 -27 b 92 51 102 26 98 40 l 91 54 l 84 54 b 8 104 53 54 21 74 b -1 142 1 116 -1 130 b 78 233 -1 187 31 227 \"},\"v6d\":{\"x_min\":-590.71875,\"x_max\":589.359375,\"ha\":601,\"o\":\"m 544 335 b 553 337 548 337 551 337 b 575 313 563 337 570 330 b 589 226 583 285 589 256 b 517 8 589 152 563 76 b 464 -58 507 -4 503 -9 l 401 -136 b 362 -176 372 -172 370 -176 b 357 -176 360 -176 359 -176 b 261 -87 349 -174 355 -180 b 175 0 215 -38 175 0 b 106 -86 175 0 144 -38 b 29 -174 35 -174 36 -173 b 24 -176 28 -176 27 -176 b 14 -174 21 -176 17 -174 b -73 -87 12 -173 -8 -152 b -159 0 -121 -38 -159 0 b -228 -86 -160 0 -190 -38 b -304 -174 -299 -174 -298 -173 b -310 -176 -306 -176 -308 -176 b -319 -174 -314 -176 -318 -174 b -483 -12 -323 -173 -359 -137 l -495 0 l -524 -34 b -562 -77 -553 -73 -556 -76 b -568 -79 -564 -79 -566 -79 b -590 -58 -581 -79 -590 -69 b -588 -49 -590 -55 -589 -52 b -412 170 -585 -43 -417 165 b -398 174 -408 173 -402 174 b -389 173 -394 174 -392 174 b -300 86 -387 172 -366 151 b -215 -1 -254 37 -215 -1 b -145 84 -215 -1 -183 37 b -69 173 -74 173 -76 172 b -63 174 -68 174 -66 174 b -54 173 -61 174 -57 173 b 34 86 -51 172 -31 151 b 119 -1 81 37 119 -1 b 189 84 121 -1 151 37 b 265 173 259 173 258 172 b 270 174 266 174 269 174 b 280 173 274 174 279 173 b 370 84 283 172 303 151 b 455 -1 416 37 455 -1 l 455 -1 b 476 24 455 -1 469 15 b 547 226 522 87 547 159 b 534 302 547 252 543 278 b 532 317 533 308 532 313 b 544 335 532 326 536 333 \"},\"v6f\":{\"x_min\":-80.3125,\"x_max\":78.9375,\"ha\":81,\"o\":\"m 63 191 b 69 192 65 192 66 192 b 77 188 72 192 76 191 b 78 183 78 187 78 186 b 74 158 78 179 77 172 l 66 115 b 9 -161 49 30 10 -158 b -10 -187 6 -172 -1 -181 b -34 -194 -17 -191 -25 -194 b -80 -147 -58 -194 -80 -174 b -80 -141 -80 -144 -80 -142 b 9 70 -80 -134 -73 -117 l 49 163 b 63 191 59 188 61 190 \"},\"v70\":{\"x_min\":0,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 190 b 217 191 215 191 216 191 b 231 184 223 191 228 188 b 249 154 240 167 246 159 b 419 18 292 91 348 45 b 436 -1 435 11 436 8 b 424 -16 436 -9 434 -13 b 308 -87 394 -26 340 -59 b 231 -186 276 -117 257 -142 b 219 -192 228 -191 225 -192 b 198 -174 209 -192 208 -191 b 47 -33 161 -113 110 -63 b 10 -16 34 -26 17 -19 b 0 -1 2 -13 0 -9 b 17 18 0 8 1 11 b 198 173 95 48 156 101 b 213 190 206 187 208 188 \"},\"v72\":{\"x_min\":-423.3125,\"x_max\":421.9375,\"ha\":431,\"o\":\"m -262 197 b -247 197 -257 197 -253 197 b -118 162 -210 197 -163 184 b 40 45 -61 134 -13 98 b 277 -95 119 -33 200 -81 b 289 -97 281 -97 285 -97 b 378 0 332 -97 371 -55 b 378 11 378 4 378 6 b 302 83 378 55 345 83 b 242 66 283 83 262 77 b 208 56 231 59 219 56 b 148 120 175 56 148 81 b 201 186 148 151 164 172 b 261 198 220 194 240 198 b 420 45 341 198 411 136 b 421 22 421 37 421 29 b 245 -199 421 -93 338 -199 b 238 -198 243 -199 240 -199 b -44 -47 148 -194 50 -141 b -250 86 -114 22 -183 66 b -295 94 -270 91 -283 94 b -315 91 -302 94 -307 94 b -381 4 -356 81 -381 43 b -355 -56 -381 -18 -372 -40 b -298 -81 -338 -73 -319 -81 b -246 -68 -283 -81 -265 -77 b -212 -58 -234 -61 -223 -58 b -178 -69 -200 -58 -189 -62 b -151 -122 -160 -81 -151 -101 b -171 -167 -151 -138 -157 -155 b -239 -195 -185 -181 -213 -192 b -257 -197 -245 -197 -250 -197 b -423 -5 -352 -197 -423 -109 b -412 65 -423 16 -419 40 b -262 197 -389 137 -329 188 \"},\"v74\":{\"x_min\":-206.890625,\"x_max\":428.75,\"ha\":438,\"o\":\"m 389 -351 b 394 -351 390 -351 393 -351 b 428 -385 413 -351 428 -367 b 428 -394 428 -388 428 -391 b 394 -428 426 -406 421 -410 l 332 -473 l 269 -516 l 205 -560 l 141 -603 l 77 -648 l 13 -692 l -50 -737 l -114 -780 l -145 -802 b -171 -813 -157 -810 -163 -813 b -175 -813 -172 -813 -174 -813 b -206 -777 -194 -811 -206 -795 b -202 -760 -206 -771 -205 -766 b -87 -675 -197 -752 -206 -757 l -34 -639 l 83 -557 l 145 -514 l 209 -470 l 272 -427 b 389 -351 375 -356 381 -352 \"},\"v75\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -137 381 b -130 383 -134 383 -133 383 b -111 371 -122 383 -114 378 b -55 224 -110 370 -85 305 b 0 80 -25 145 -1 80 b 54 224 0 80 24 145 b 112 377 114 384 110 373 b 127 384 118 381 122 384 b 148 362 138 384 148 374 l 148 356 l 83 183 b 16 9 47 88 17 11 b -1 0 12 2 5 0 b -14 5 -5 0 -10 1 b -84 183 -19 9 -13 -6 l -149 356 l -149 362 b -137 381 -149 371 -145 378 \"},\"v78\":{\"x_min\":0,\"x_max\":193.28125,\"ha\":197,\"o\":\"m 85 514 b 95 517 88 517 89 517 b 114 505 103 517 110 513 l 115 502 l 115 376 b 115 249 115 306 115 249 b 141 258 117 249 127 252 l 167 266 l 172 266 b 190 254 181 265 187 262 l 193 251 l 193 202 l 193 188 b 187 147 193 149 191 152 b 147 130 183 142 182 141 l 115 119 l 115 9 b 115 -99 115 -51 115 -99 b 141 -91 115 -99 127 -95 b 171 -81 166 -81 167 -81 l 171 -81 b 191 -94 181 -81 189 -87 b 193 -142 191 -97 193 -120 b 191 -195 193 -167 191 -194 b 125 -227 187 -205 187 -204 l 115 -230 l 115 -366 l 115 -503 l 114 -506 b 95 -519 110 -514 102 -519 b 74 -506 87 -519 78 -514 l 73 -503 l 73 -374 b 73 -245 73 -260 73 -245 b 73 -245 73 -245 73 -245 b 55 -252 72 -245 63 -249 l 32 -260 b 19 -263 27 -262 23 -263 b 4 -256 13 -263 8 -260 b 0 -215 0 -251 0 -254 b 0 -199 0 -210 0 -206 l 0 -152 l 1 -149 b 8 -140 2 -145 5 -141 b 42 -127 9 -140 24 -133 l 73 -116 l 73 -5 b 73 23 73 4 73 15 b 73 105 73 70 73 105 b 49 97 73 105 61 101 b 17 88 32 91 23 88 b 4 95 10 88 8 91 b 0 137 0 101 0 98 b 0 151 0 141 0 145 l 0 199 l 1 202 b 43 224 5 212 5 212 l 73 234 l 73 367 l 73 502 l 74 505 b 85 514 77 509 81 513 \"},\"v79\":{\"x_min\":-1.359375,\"x_max\":899.703125,\"ha\":918,\"o\":\"m 307 349 b 332 351 315 351 323 351 b 443 340 367 351 408 347 b 741 47 607 306 720 195 b 744 0 743 31 744 16 b 660 -303 744 -90 713 -206 b 28 -755 534 -531 304 -695 b 14 -756 23 -755 19 -756 b -1 -741 4 -756 -1 -750 b 21 -720 -1 -731 1 -728 b 567 -56 337 -601 548 -344 b 568 -11 568 -41 568 -24 b 442 285 568 129 525 233 b 325 319 406 308 367 319 b 93 177 232 319 137 266 b 84 154 91 170 84 155 b 84 154 84 154 84 154 b 88 156 84 154 85 155 b 159 177 110 170 134 177 b 257 134 194 177 231 162 b 294 41 281 108 294 73 b 171 -97 294 -24 246 -90 b 156 -98 166 -97 161 -98 b 6 74 73 -98 6 -22 b 6 80 6 76 6 79 b 307 349 10 223 141 340 m 839 215 b 845 216 841 216 842 216 b 862 213 852 216 860 215 b 899 163 887 206 899 184 b 872 117 899 145 890 127 b 847 111 865 112 856 111 b 808 130 833 111 818 117 b 796 162 800 140 796 151 b 839 215 796 187 812 212 m 839 -112 b 845 -112 841 -112 842 -112 b 862 -115 852 -112 860 -113 b 899 -165 887 -122 899 -144 b 872 -210 899 -183 890 -201 b 847 -217 865 -215 856 -217 b 808 -198 833 -217 818 -210 b 796 -165 800 -188 796 -177 b 839 -112 796 -140 812 -116 \"},\"v7c\":{\"x_min\":0,\"x_max\":300.8125,\"ha\":307,\"o\":\"m 49 505 b 53 506 50 505 51 506 b 70 496 58 506 62 503 b 81 485 73 492 78 488 l 96 473 l 111 459 l 122 449 l 134 438 l 182 396 l 255 330 b 292 291 292 298 292 298 l 292 290 l 292 284 l 283 270 b 209 36 234 197 209 113 b 288 -170 209 -44 235 -119 b 299 -184 295 -179 299 -181 b 300 -191 300 -187 300 -188 b 285 -206 300 -199 294 -206 b 280 -206 283 -206 281 -206 b 247 -201 270 -202 259 -201 b 176 -222 223 -201 197 -208 b 114 -340 136 -249 114 -292 b 172 -471 114 -384 134 -433 b 185 -492 182 -481 185 -487 b 181 -502 185 -496 183 -499 b 171 -508 176 -505 174 -508 b 152 -498 166 -508 160 -503 b 0 -284 65 -428 12 -352 b 0 -260 0 -278 0 -270 b 1 -238 0 -252 0 -242 b 148 -140 16 -177 73 -140 b 209 -148 167 -140 189 -142 b 215 -149 212 -148 215 -149 b 215 -149 215 -149 215 -149 l 215 -149 b 201 -136 215 -148 209 -142 l 157 -97 l 96 -41 b 17 34 21 24 17 29 b 17 37 17 36 17 36 b 17 38 17 37 17 38 b 25 56 17 44 17 44 b 110 298 81 131 110 219 b 46 474 110 367 88 431 b 38 491 40 480 38 487 b 49 505 38 498 42 502 \"},\"v7d\":{\"x_min\":-1.359375,\"x_max\":436.921875,\"ha\":446,\"o\":\"m 213 205 b 217 205 215 205 216 205 b 234 194 224 205 234 199 b 236 187 234 194 235 190 l 245 167 l 261 129 l 270 106 b 355 -61 294 54 329 -13 b 420 -163 381 -105 402 -138 b 436 -188 435 -184 436 -184 b 436 -191 436 -190 436 -190 b 421 -206 436 -201 431 -206 l 421 -206 l 416 -206 l 405 -201 b 217 -158 347 -172 283 -158 b 31 -201 153 -158 88 -172 l 20 -206 l 14 -206 l 14 -206 b 0 -191 5 -206 0 -201 b -1 -188 0 -190 -1 -190 b 14 -163 -1 -186 0 -184 b 95 -34 36 -136 72 -77 b 166 106 119 8 148 68 l 175 129 l 183 148 l 200 188 b 213 205 205 199 208 202 \"},\"v7f\":{\"x_min\":0,\"x_max\":367.5,\"ha\":375,\"o\":\"m 0 124 l 0 187 l 61 187 l 122 187 l 122 138 l 122 91 l 153 61 l 183 30 l 213 61 l 243 91 l 243 138 l 243 187 l 306 187 l 367 187 l 367 124 l 367 61 l 321 61 l 274 61 l 243 30 l 213 0 l 243 -31 l 274 -62 l 321 -62 l 367 -62 l 367 -124 l 367 -188 l 306 -188 l 243 -188 l 243 -140 l 243 -93 l 213 -62 l 183 -31 l 153 -62 l 122 -93 l 122 -140 l 122 -188 l 61 -188 l 0 -188 l 0 -124 l 0 -62 l 46 -62 l 92 -62 l 123 -31 l 153 0 l 123 30 l 92 61 l 46 61 l 0 61 l 0 124 \"},\"v80\":{\"x_min\":29.9375,\"x_max\":420.578125,\"ha\":371,\"o\":\"m 115 345 b 221 347 117 345 166 347 b 411 345 306 347 409 345 b 420 330 416 342 420 335 b 415 319 420 326 419 321 b 178 118 397 303 179 118 b 178 117 178 118 178 117 b 181 117 178 117 178 117 b 189 117 182 117 185 117 b 193 117 190 117 191 117 b 247 98 215 117 232 111 b 296 75 266 83 280 76 b 302 75 299 75 300 75 b 322 91 311 75 315 79 b 322 91 322 91 322 91 b 322 91 322 91 322 91 b 319 91 322 91 321 91 b 313 90 318 90 315 90 b 283 107 300 90 288 97 b 277 126 279 114 277 121 b 319 167 277 149 295 167 b 319 167 319 167 319 167 b 362 118 347 167 362 147 b 355 82 362 108 359 96 b 311 33 349 65 340 55 b 224 1 284 12 253 1 b 194 5 213 1 204 2 b 168 18 183 8 178 11 b 110 36 151 30 130 36 b 57 15 88 36 68 29 b 47 11 54 12 51 11 b 31 20 40 11 34 13 b 29 26 31 22 29 25 b 68 66 29 36 39 45 b 285 250 73 71 281 248 b 285 250 285 250 285 250 b 231 252 285 252 261 252 b 137 250 190 252 141 250 b 93 227 122 248 110 241 b 78 220 88 222 83 220 b 66 227 74 220 70 222 b 63 234 65 229 63 231 b 85 291 63 241 69 252 b 115 345 108 342 108 344 \"},\"v81\":{\"x_min\":0,\"x_max\":428.75,\"ha\":438,\"o\":\"m 262 186 b 273 186 266 186 272 186 b 274 186 273 186 274 186 b 285 186 274 186 280 186 b 428 48 375 181 428 122 b 386 -68 428 12 416 -29 b 155 -187 329 -145 236 -187 b 12 -111 92 -187 38 -162 b 0 -51 4 -91 0 -72 b 262 186 0 58 122 179 m 366 131 b 352 134 362 133 357 134 b 219 81 321 134 269 115 b 47 -111 126 23 50 -62 b 47 -112 47 -111 47 -112 b 77 -136 47 -129 58 -136 b 264 -45 118 -136 194 -101 b 382 109 336 12 382 76 b 366 131 382 120 377 129 \"},\"v83\":{\"x_min\":-1.359375,\"x_max\":847.96875,\"ha\":865,\"o\":\"m 488 1499 b 495 1500 490 1500 492 1500 b 541 1465 507 1500 521 1490 b 679 1078 622 1372 679 1210 b 677 1050 679 1068 677 1060 b 477 642 668 893 604 764 l 443 609 l 431 596 l 431 592 l 438 562 l 449 508 l 460 458 b 481 355 475 390 481 355 b 481 355 481 355 481 355 b 490 356 481 355 485 355 b 528 358 495 356 511 358 b 558 356 540 358 552 356 b 839 95 699 338 808 237 b 847 22 845 72 847 47 b 631 -303 847 -113 766 -242 b 620 -309 623 -308 620 -309 l 620 -310 b 631 -359 620 -310 626 -333 l 646 -435 l 660 -496 b 672 -588 668 -535 672 -563 b 664 -653 672 -610 669 -630 b 383 -875 630 -792 509 -875 b 201 -810 321 -875 257 -855 b 129 -680 151 -768 129 -730 b 274 -530 129 -592 200 -530 b 351 -553 300 -530 326 -538 b 412 -669 393 -582 412 -626 b 287 -805 412 -735 366 -800 l 279 -805 l 285 -809 b 383 -830 318 -823 351 -830 b 586 -718 464 -830 540 -789 b 626 -584 612 -678 626 -631 b 619 -528 626 -566 623 -548 b 612 -495 619 -526 616 -510 b 577 -324 590 -387 577 -324 b 577 -324 577 -324 577 -324 b 568 -326 575 -324 571 -324 b 528 -334 558 -328 537 -333 b 465 -338 506 -337 485 -338 b 24 -11 269 -338 87 -206 b -1 145 8 41 -1 93 b 96 442 -1 249 32 351 b 322 714 166 541 236 626 l 352 745 l 345 782 l 332 843 l 315 921 b 303 984 310 950 304 978 b 295 1082 298 1017 295 1049 b 413 1426 295 1208 336 1329 b 488 1499 436 1456 477 1496 m 549 1301 b 541 1301 547 1301 544 1301 b 411 1207 500 1301 447 1263 b 355 1004 374 1152 355 1079 b 359 942 355 984 356 963 b 371 881 362 927 363 917 l 385 818 b 392 782 389 799 392 784 l 392 782 b 434 828 393 782 424 816 b 607 1165 534 941 594 1060 b 608 1193 608 1175 608 1183 b 597 1270 608 1224 604 1254 b 549 1301 589 1286 571 1299 m 398 528 b 393 555 396 542 393 553 b 392 555 393 555 393 555 b 317 470 390 555 347 505 b 190 298 266 408 212 334 b 127 70 148 227 127 148 b 155 -77 127 19 137 -30 b 468 -303 209 -216 333 -303 b 519 -299 484 -303 502 -302 b 568 -284 541 -295 568 -287 l 568 -284 b 563 -263 568 -284 566 -274 l 534 -120 l 511 -13 l 496 61 l 480 133 b 469 187 472 176 469 187 b 468 188 469 187 469 188 b 416 162 462 188 430 172 b 337 13 364 126 337 69 b 413 -124 337 -40 363 -93 b 428 -144 424 -131 428 -137 b 428 -149 428 -145 428 -148 b 409 -166 426 -161 419 -166 b 394 -162 405 -166 400 -165 b 240 77 302 -122 240 -27 l 240 77 b 430 342 240 197 315 301 l 436 344 l 426 394 l 398 528 m 548 194 b 526 195 540 195 532 195 b 519 195 524 195 521 195 l 514 195 l 518 177 l 539 79 l 552 15 l 566 -48 l 594 -187 l 605 -240 b 612 -266 609 -254 611 -266 b 612 -266 612 -266 612 -266 b 641 -248 613 -266 630 -256 b 744 -98 692 -212 730 -156 b 751 -40 749 -79 751 -59 b 548 194 751 76 665 181 \"},\"v84\":{\"x_min\":25.859375,\"x_max\":164.6875,\"ha\":168,\"o\":\"m 34 369 b 40 370 35 370 38 370 b 59 353 49 370 50 367 b 164 40 122 254 155 158 b 164 0 164 33 164 16 b 164 -40 164 -16 164 -34 b 59 -353 155 -158 122 -254 b 40 -371 53 -366 47 -371 b 34 -370 38 -371 36 -370 b 25 -358 28 -367 25 -363 b 31 -337 25 -352 27 -347 b 92 0 72 -234 92 -117 b 31 335 92 116 72 233 b 25 356 27 345 25 352 b 34 369 25 363 28 366 \"},\"v86\":{\"x_min\":-571.671875,\"x_max\":570.3125,\"ha\":582,\"o\":\"m -386 173 b -381 174 -385 174 -383 174 b -370 173 -377 174 -372 173 b -281 86 -367 172 -347 151 b -196 0 -235 37 -196 0 b -126 84 -196 0 -164 37 b -50 174 -55 173 -57 172 b -44 174 -49 174 -47 174 b -35 173 -42 174 -38 173 b 53 86 -32 172 -12 151 b 138 0 100 37 138 0 b 208 84 140 0 170 37 b 284 174 279 173 277 172 b 289 174 285 174 288 174 b 299 173 294 174 298 173 b 462 11 303 172 338 134 l 475 -1 l 503 34 b 541 76 534 72 536 74 b 548 77 544 77 545 77 b 570 56 560 77 570 68 b 567 48 570 54 568 51 b 392 -172 564 41 397 -166 b 378 -176 387 -174 382 -176 b 368 -174 374 -176 371 -176 b 280 -87 367 -173 345 -152 b 194 0 234 -38 194 0 b 125 -86 194 0 163 -38 b 49 -174 54 -174 55 -173 b 43 -176 47 -176 46 -176 b 34 -174 40 -176 36 -174 b -54 -87 31 -173 10 -152 b -140 0 -102 -38 -140 0 b -209 -86 -141 0 -171 -38 b -285 -174 -280 -174 -279 -173 b -291 -176 -287 -176 -289 -176 b -300 -174 -295 -176 -299 -174 b -464 -12 -304 -173 -340 -137 l -476 0 l -504 -34 b -543 -77 -534 -73 -537 -76 b -549 -79 -545 -79 -547 -79 b -571 -58 -562 -79 -571 -69 b -568 -49 -571 -55 -570 -52 b -392 172 -566 -43 -396 167 b -386 173 -390 172 -387 173 \"},\"v8a\":{\"x_min\":-170.140625,\"x_max\":168.78125,\"ha\":172,\"o\":\"m -160 567 b -122 567 -159 567 -149 567 l -87 567 l -84 566 b -74 553 -78 563 -77 560 b -20 366 -73 551 -49 466 b 31 186 8 267 31 186 b 85 371 31 186 55 269 b 140 559 114 473 138 557 b 153 567 141 564 148 567 b 168 559 159 567 166 564 b 168 555 168 557 168 557 b 92 281 168 548 159 513 b 14 13 50 134 14 13 b 0 0 14 6 6 0 b -17 15 -8 0 -17 8 b -93 283 -17 15 -51 136 b -170 552 -166 533 -170 548 b -170 553 -170 552 -170 552 b -160 567 -170 560 -167 564 \"},\"v8b\":{\"x_min\":0,\"x_max\":319.859375,\"ha\":326,\"o\":\"m 149 508 b 159 509 152 509 155 509 b 186 494 170 509 181 503 b 190 440 190 487 190 488 l 190 430 l 190 377 l 242 377 l 251 377 b 303 373 298 377 296 377 b 319 345 314 367 319 356 b 304 319 319 335 314 324 b 250 315 296 315 299 315 l 242 315 l 190 315 l 190 262 l 190 252 b 186 198 190 204 190 205 b 159 183 179 188 170 183 b 132 198 148 183 138 188 b 127 252 127 205 127 204 l 127 262 l 127 315 l 76 315 l 68 315 b 14 319 20 315 21 315 b 0 347 4 324 0 335 b 14 373 0 356 4 367 b 68 377 21 377 20 377 l 76 377 l 127 377 l 127 430 l 127 440 b 132 494 127 488 127 487 b 149 508 136 501 142 505 \"},\"v8c\":{\"x_min\":-330.75,\"x_max\":329.390625,\"ha\":336,\"o\":\"m -133 483 b -117 484 -127 484 -122 484 b 31 373 -51 484 9 440 b 35 348 34 365 35 356 b -25 285 35 313 10 285 b -87 331 -55 285 -76 302 b -167 402 -100 376 -133 402 b -191 398 -175 402 -183 401 b -227 341 -215 388 -227 369 b -225 320 -227 334 -227 327 b -13 74 -209 230 -125 133 b 6 65 -4 70 5 66 l 9 63 l 10 65 b 117 231 12 68 40 112 l 189 341 l 242 424 b 268 460 262 456 264 458 b 283 464 273 463 277 464 b 308 438 296 464 308 453 l 308 437 b 287 396 308 430 308 428 l 95 98 l 59 43 l 58 41 l 65 37 b 253 -156 151 -8 217 -77 b 281 -285 272 -199 281 -244 b 148 -481 281 -381 231 -463 b 115 -485 137 -484 126 -485 b -32 -376 51 -485 -9 -442 b -36 -349 -35 -366 -36 -358 b 25 -287 -36 -315 -12 -287 b 85 -333 54 -287 74 -302 b 166 -403 99 -377 133 -403 b 190 -399 174 -403 182 -402 b 225 -342 215 -390 225 -370 b 224 -322 225 -335 225 -328 b 12 -76 208 -231 125 -134 b -8 -66 2 -72 -6 -68 l -10 -65 l -12 -66 b -118 -231 -13 -68 -42 -113 l -190 -342 l -243 -426 b -269 -462 -264 -458 -265 -458 b -284 -466 -274 -464 -279 -466 b -310 -440 -298 -466 -310 -455 l -310 -438 b -288 -398 -310 -430 -308 -430 l -96 -99 l -59 -44 l -59 -43 l -66 -38 b -281 284 -198 33 -281 158 l -281 284 b -133 483 -281 392 -220 474 m 254 177 b 266 179 258 177 262 179 b 319 149 287 179 307 167 b 329 115 326 140 329 127 b 319 79 329 102 326 90 b 268 51 307 61 287 51 b 221 72 250 51 234 58 b 205 115 210 84 205 99 b 254 177 205 142 223 170 m -281 -54 b -269 -52 -277 -52 -273 -52 b -223 -73 -253 -52 -235 -59 b -206 -116 -212 -84 -206 -101 b -216 -151 -206 -129 -209 -141 b -269 -179 -228 -170 -249 -179 b -314 -159 -285 -179 -302 -173 b -330 -116 -325 -147 -330 -131 b -281 -54 -330 -88 -313 -61 \"},\"v8f\":{\"x_min\":-21.78125,\"x_max\":362.0625,\"ha\":369,\"o\":\"m 302 1031 b 308 1032 304 1032 307 1032 b 330 1016 318 1032 325 1027 b 362 867 351 970 362 920 b 340 738 362 824 353 780 l 336 727 l 340 717 b 362 591 355 677 362 634 b 257 323 362 496 325 401 b 204 272 243 306 227 290 b 20 56 129 206 66 133 b -1 18 12 44 0 22 b -19 4 -4 9 -12 4 l -21 4 l -21 140 l -21 276 l -12 277 b 167 333 61 288 127 309 b 319 598 262 388 319 491 b 311 664 319 620 317 642 l 310 673 l 304 664 b 204 548 279 620 250 587 b 20 333 129 483 66 409 b -1 292 12 320 0 298 b -19 280 -4 285 -12 280 l -21 280 l -21 416 l -21 552 l -12 553 b 167 609 61 564 127 585 b 319 874 264 666 319 770 b 294 992 319 914 311 954 b 288 1011 288 1004 288 1007 b 302 1031 288 1021 294 1028 \"},\"v90\":{\"x_min\":-171.5,\"x_max\":483.1875,\"ha\":493,\"o\":\"m -8 631 b -1 632 -6 632 -4 632 b 19 620 8 632 16 628 b 20 495 20 616 20 616 b 20 373 20 427 20 373 b 115 410 20 373 63 390 l 210 448 l 210 531 b 212 620 210 614 210 616 b 231 632 215 628 223 632 b 246 627 236 632 242 631 b 251 541 251 620 251 628 l 251 463 l 315 489 b 387 514 368 509 381 514 b 393 513 390 514 392 514 b 406 494 402 510 406 502 b 397 476 406 487 404 480 b 323 446 396 474 363 462 l 251 417 l 251 283 l 251 148 l 254 151 b 370 199 291 183 332 199 b 415 191 385 199 400 197 b 483 84 458 176 483 134 b 461 0 483 58 476 29 b 332 -142 439 -40 411 -72 l 255 -215 b 231 -229 240 -229 239 -229 b 216 -223 224 -229 220 -227 b 210 -158 210 -217 210 -223 b 210 -120 210 -148 210 -136 l 210 -29 l 205 -34 b 100 -142 182 -65 159 -88 l 23 -215 b -1 -229 9 -229 6 -229 b -19 -217 -9 -229 -16 -224 l -20 -215 l -21 48 l -21 310 l -83 287 b -152 262 -133 266 -145 262 b -157 263 -153 262 -155 262 b -171 283 -166 266 -171 274 b -161 301 -171 290 -167 297 b -91 328 -160 302 -129 315 l -21 356 l -21 487 l -20 617 l -19 621 b -8 631 -17 626 -12 630 m 210 288 b 210 401 210 351 210 401 b 114 365 209 401 167 384 l 20 327 l 20 238 l 20 148 l 21 151 b 140 199 59 183 102 199 b 206 180 164 199 187 192 l 209 177 b 209 177 209 177 209 177 b 210 288 210 177 210 199 m 110 131 b 96 133 106 133 100 133 b 89 133 93 133 91 133 b 24 87 63 129 40 113 l 20 80 l 20 -37 l 20 -156 l 23 -152 b 144 81 96 -72 144 20 l 144 83 b 110 131 144 113 134 126 m 341 131 b 328 133 337 133 332 133 b 322 133 326 133 323 133 b 257 87 296 129 273 113 l 251 80 l 251 -37 l 251 -156 l 255 -152 b 375 81 328 -72 375 20 l 375 83 b 341 131 375 113 367 126 \"},\"v92\":{\"x_min\":0,\"x_max\":598.890625,\"ha\":611,\"o\":\"m 62 181 b 77 183 66 183 72 183 b 91 181 83 183 88 183 b 202 131 100 180 106 177 l 299 87 l 394 131 b 517 183 499 181 502 183 b 519 183 517 183 518 183 b 598 104 567 183 598 144 b 577 49 598 84 592 65 b 518 15 567 38 563 37 b 484 0 499 6 484 0 b 518 -16 484 -1 499 -8 b 577 -51 563 -38 567 -40 b 598 -105 592 -66 598 -86 b 519 -184 598 -145 567 -184 b 517 -184 518 -184 517 -184 b 394 -133 502 -184 499 -183 l 299 -88 l 202 -133 b 81 -184 99 -183 95 -184 b 77 -184 80 -184 78 -184 b 0 -105 29 -184 0 -145 b 20 -51 0 -86 5 -66 b 80 -16 29 -40 34 -38 b 114 -1 98 -8 114 -1 b 80 15 114 0 98 6 b 20 49 34 37 29 38 b 0 104 6 65 0 84 b 62 181 0 140 23 174 m 88 134 b 74 136 85 134 80 136 b 68 134 72 136 69 136 b 46 104 54 130 46 117 b 55 81 46 95 49 88 b 149 34 59 76 53 80 b 224 -1 190 15 224 0 b 144 -38 224 -1 187 -18 b 54 -84 59 -79 58 -79 b 46 -105 49 -90 46 -98 b 76 -137 46 -122 58 -137 b 78 -137 77 -137 77 -137 b 194 -86 87 -137 76 -141 b 298 -36 250 -58 298 -36 b 298 -36 298 -36 298 -36 b 402 -84 299 -36 345 -58 b 518 -137 522 -141 510 -137 b 521 -137 519 -137 519 -137 b 551 -105 539 -137 551 -122 b 541 -83 551 -98 548 -90 b 447 -36 537 -77 544 -81 b 374 -1 406 -16 374 -1 b 447 34 374 0 406 15 b 541 81 544 80 537 76 b 551 104 548 88 551 97 b 521 136 551 120 539 136 b 518 136 519 136 519 136 b 517 136 518 136 517 136 l 517 136 b 402 83 511 136 511 136 b 298 34 345 56 299 34 b 298 34 298 34 298 34 b 194 84 298 34 250 56 b 88 134 137 111 89 133 \"},\"v93\":{\"x_min\":0,\"x_max\":438.28125,\"ha\":447,\"o\":\"m 212 205 b 219 205 213 205 216 205 b 239 183 228 205 231 204 b 421 -163 298 40 363 -83 b 438 -191 434 -180 438 -186 b 436 -197 438 -192 438 -195 b 424 -206 434 -204 431 -206 b 406 -201 420 -206 415 -205 b 216 -156 347 -172 281 -156 b 23 -205 148 -156 80 -173 b 14 -206 20 -206 17 -206 b 0 -191 6 -206 0 -201 b 6 -176 0 -187 1 -183 b 202 192 63 -104 142 45 b 212 205 205 199 208 202 m 264 48 l 249 81 l 243 94 l 242 91 b 89 -126 208 36 137 -66 b 81 -138 85 -133 81 -138 b 81 -138 81 -138 81 -138 b 81 -138 81 -138 81 -138 b 95 -133 81 -138 87 -136 b 280 -94 156 -108 221 -94 b 334 -98 299 -94 317 -95 b 343 -99 338 -99 343 -99 b 343 -99 343 -99 343 -99 b 338 -94 343 -99 341 -97 b 264 48 318 -58 287 1 \"},\"v94\":{\"x_min\":-149.71875,\"x_max\":148.359375,\"ha\":151,\"o\":\"m -9 215 b 0 217 -6 217 -4 217 b 19 205 8 217 14 213 b 20 142 20 202 20 201 l 20 84 l 23 84 b 144 -27 81 74 129 30 b 148 -66 147 -40 148 -54 b 36 -213 148 -134 103 -197 b 0 -219 24 -217 12 -219 b -145 -104 -68 -219 -129 -173 b -149 -68 -148 -91 -149 -79 b -24 84 -149 6 -98 74 l -21 84 l -21 142 b -19 205 -20 201 -20 202 b -9 215 -17 209 -13 213 m -21 -15 b -23 41 -21 37 -21 41 b -23 41 -23 41 -23 41 b -76 11 -35 40 -62 26 b -108 -65 -98 -11 -108 -38 b -1 -176 -108 -122 -65 -176 b 107 -65 63 -176 107 -122 b 74 11 107 -38 96 -11 b 20 41 61 26 32 41 b 20 -15 20 41 20 15 b 19 -74 20 -72 20 -72 b 0 -87 14 -83 6 -87 b -19 -74 -8 -87 -16 -83 b -21 -15 -20 -72 -20 -72 \"},\"v95\":{\"x_min\":0,\"x_max\":406.96875,\"ha\":415,\"o\":\"m 55 181 b 70 183 61 183 66 183 b 111 170 85 183 99 179 b 160 130 115 167 137 149 l 202 95 l 245 130 b 319 181 299 176 302 179 b 334 183 325 183 330 183 b 406 109 375 183 406 148 b 401 81 406 99 405 91 b 348 24 394 65 390 59 b 318 -1 332 11 318 0 b 348 -26 318 -1 332 -12 b 401 -83 390 -61 394 -66 b 406 -111 405 -93 406 -101 b 334 -184 406 -149 375 -184 b 319 -183 330 -184 325 -184 b 245 -131 302 -180 299 -177 l 202 -97 l 160 -131 b 85 -183 107 -177 103 -180 b 70 -184 80 -184 76 -184 b 0 -111 31 -184 0 -149 b 4 -83 0 -101 1 -93 b 58 -26 10 -66 16 -61 b 88 -1 74 -12 88 -1 b 58 24 88 0 74 11 b 10 69 23 54 17 59 b 0 109 2 81 0 95 b 55 181 0 142 21 173 m 83 133 b 72 136 78 136 76 136 b 57 131 66 136 61 134 b 46 109 49 126 46 117 b 50 93 46 104 47 98 b 107 45 51 91 77 70 b 160 0 137 20 160 0 b 107 -47 160 -1 137 -22 b 50 -94 77 -72 51 -93 b 46 -111 47 -99 46 -105 b 59 -134 46 -120 50 -130 b 72 -137 62 -136 68 -137 b 83 -136 76 -137 80 -136 b 144 -84 84 -134 107 -116 b 202 -36 176 -58 202 -36 b 261 -84 202 -36 230 -58 b 323 -136 299 -116 321 -134 b 334 -137 326 -136 330 -137 b 345 -134 338 -137 343 -136 b 360 -111 355 -130 360 -120 b 355 -94 360 -105 359 -99 b 299 -47 353 -93 329 -72 b 245 0 269 -22 245 -1 b 299 45 245 0 269 20 b 355 93 329 70 353 91 b 360 109 359 98 360 104 b 345 133 360 119 355 129 b 334 136 343 134 338 136 b 323 134 330 136 326 134 b 261 83 321 133 299 115 b 202 34 230 56 202 34 b 144 83 202 34 176 56 b 83 133 106 115 84 133 \"},\"v97\":{\"x_min\":-228.671875,\"x_max\":227.3125,\"ha\":232,\"o\":\"m -217 487 l -213 488 l 0 488 l 212 488 l 216 487 b 225 476 220 484 224 480 l 227 473 l 227 244 l 227 15 l 225 12 b 206 0 223 4 215 0 b 197 1 204 0 200 0 b 187 12 193 4 189 6 l 186 15 l 186 138 l 186 262 l -1 262 l -187 262 l -187 138 l -187 15 l -189 12 b -208 0 -193 4 -200 0 b -227 12 -216 0 -223 4 l -228 15 l -228 244 l -228 473 l -227 476 b -217 487 -225 480 -221 484 \"},\"v9a\":{\"x_min\":-21.78125,\"x_max\":367.5,\"ha\":375,\"o\":\"m 230 1031 b 238 1032 232 1032 235 1032 b 259 1014 245 1032 251 1027 b 367 662 330 906 367 782 b 364 602 367 641 367 621 b 232 317 352 488 304 384 b 57 120 155 245 103 187 b -1 18 31 84 6 40 b -19 4 -4 11 -12 4 l -21 4 l -21 159 l -21 315 l -16 315 b 96 335 10 315 62 324 b 315 695 227 380 315 527 b 313 738 315 709 314 724 b 224 991 304 825 273 916 b 216 1013 219 999 216 1007 b 230 1031 216 1021 220 1028 \"},\"v9b\":{\"x_min\":-24.5,\"x_max\":313.0625,\"ha\":319,\"o\":\"m -24 -133 l -24 -5 l -20 -5 b -1 -19 -12 -5 -4 -11 b 142 -213 13 -61 74 -144 b 258 -376 196 -269 230 -315 b 313 -605 295 -449 313 -528 b 292 -742 313 -652 306 -699 b 288 -752 289 -748 288 -752 b 288 -752 288 -752 288 -752 b 292 -764 289 -753 291 -757 b 313 -907 306 -811 313 -860 b 292 -1045 313 -954 306 -1002 b 288 -1054 289 -1050 288 -1054 b 288 -1054 288 -1054 288 -1054 b 292 -1067 289 -1054 291 -1060 b 313 -1210 306 -1113 313 -1161 b 292 -1346 313 -1257 306 -1304 b 288 -1357 289 -1353 288 -1357 b 288 -1357 288 -1357 288 -1357 b 292 -1368 289 -1357 291 -1363 b 313 -1512 306 -1415 313 -1464 b 292 -1648 313 -1560 306 -1605 b 288 -1660 289 -1654 288 -1660 b 288 -1660 288 -1660 288 -1660 b 292 -1671 289 -1660 291 -1665 b 313 -1814 306 -1719 313 -1766 b 250 -2040 313 -1897 291 -1977 b 232 -2062 238 -2057 236 -2059 b 221 -2065 230 -2063 225 -2065 b 200 -2045 210 -2065 201 -2057 b 200 -2043 200 -2044 200 -2044 b 208 -2026 200 -2037 202 -2034 b 269 -1826 249 -1966 269 -1897 b 153 -1544 269 -1726 230 -1625 b -9 -1472 115 -1506 58 -1481 b -21 -1471 -14 -1471 -19 -1471 l -24 -1471 l -24 -1343 l -24 -1215 l -20 -1215 b -1 -1229 -12 -1215 -4 -1221 b 142 -1424 13 -1270 74 -1353 b 257 -1582 196 -1478 228 -1524 b 264 -1594 261 -1589 264 -1594 l 264 -1594 b 265 -1582 264 -1594 264 -1589 b 270 -1525 268 -1562 270 -1544 b 153 -1243 270 -1424 228 -1321 b -9 -1170 115 -1203 58 -1178 b -21 -1168 -14 -1170 -19 -1168 l -24 -1168 l -24 -1041 l -24 -913 l -20 -913 b -1 -927 -12 -913 -4 -918 b 142 -1121 13 -967 74 -1050 b 257 -1281 196 -1175 228 -1221 b 264 -1292 261 -1286 264 -1292 l 264 -1292 b 265 -1279 264 -1292 264 -1286 b 270 -1222 268 -1261 270 -1242 b 153 -941 270 -1121 228 -1018 b -9 -867 115 -900 58 -875 b -21 -866 -14 -867 -19 -866 l -24 -866 l -24 -738 l -24 -610 l -20 -610 b -1 -624 -12 -610 -4 -616 b 142 -818 13 -664 74 -749 b 257 -978 196 -873 228 -918 b 264 -989 261 -984 264 -989 l 264 -989 b 265 -977 264 -989 264 -984 b 270 -920 268 -959 270 -939 b 153 -638 270 -818 228 -716 b -9 -564 115 -598 58 -573 b -21 -563 -14 -564 -19 -563 l -24 -563 l -24 -435 l -24 -308 l -20 -308 b -1 -322 -12 -308 -4 -313 b 142 -516 13 -363 74 -446 b 257 -675 196 -571 228 -616 b 264 -687 261 -681 264 -687 l 264 -687 b 265 -674 264 -687 264 -681 b 270 -617 268 -656 270 -637 b 153 -335 270 -516 228 -413 b -9 -262 115 -295 58 -270 b -21 -260 -14 -262 -19 -260 l -24 -260 l -24 -133 \"},\"v9c\":{\"x_min\":-166.0625,\"x_max\":-25.859375,\"ha\":0,\"o\":\"m -49 369 b -42 370 -46 369 -44 370 b -27 360 -36 370 -29 366 b -25 355 -27 359 -25 358 b -32 335 -25 351 -28 347 b -92 52 -66 248 -87 159 b -93 -1 -93 43 -93 20 b -92 -54 -93 -23 -93 -45 b -32 -337 -85 -162 -66 -251 b -25 -355 -27 -349 -25 -352 b -42 -371 -25 -365 -32 -371 b -61 -353 -50 -371 -51 -369 b -163 -63 -119 -262 -153 -165 b -166 -1 -166 -37 -166 -31 b -163 62 -166 30 -166 36 b -61 352 -153 163 -119 260 b -49 369 -54 365 -51 366 \"},\"v9e\":{\"x_min\":0,\"x_max\":607.0625,\"ha\":619,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 m 347 631 b 353 632 348 632 351 632 b 374 620 363 632 371 628 b 375 383 375 616 375 616 l 375 148 l 377 151 b 492 199 415 183 454 199 b 537 191 507 199 522 197 b 607 84 582 176 607 134 b 583 0 607 58 598 29 b 455 -142 562 -40 533 -72 l 378 -215 b 355 -229 364 -229 362 -229 b 334 -216 345 -229 337 -224 l 333 -212 l 333 201 l 333 616 l 334 620 b 347 631 337 624 341 630 m 465 131 b 451 133 461 133 455 133 b 445 133 449 133 446 133 b 379 87 419 129 396 113 l 375 80 l 375 -37 l 375 -156 l 378 -152 b 499 81 451 -72 499 20 l 499 83 b 465 131 499 113 490 126 \"},\"va3\":{\"x_min\":58.53125,\"x_max\":228.671875,\"ha\":294,\"o\":\"m 138 371 b 142 373 140 371 141 373 b 178 342 149 373 156 366 b 228 251 217 297 228 278 b 228 244 228 248 228 247 b 176 147 227 212 212 184 b 123 73 152 122 132 93 b 121 62 122 70 121 66 b 145 13 121 48 129 31 b 153 -2 151 6 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 145 -11 b 129 -1 140 -11 136 -8 b 61 87 89 37 68 68 b 58 113 59 95 58 105 b 110 215 58 144 74 177 b 163 287 134 240 155 269 b 166 299 166 291 166 295 b 141 348 166 313 157 330 b 133 360 134 356 133 358 b 133 363 133 362 133 362 b 138 371 133 367 136 370 \"},\"va5\":{\"x_min\":0,\"x_max\":349.8125,\"ha\":357,\"o\":\"m 88 302 b 103 303 93 302 98 303 b 202 224 149 303 191 270 b 205 199 204 216 205 208 b 178 129 205 173 196 147 l 175 126 l 182 127 b 307 249 236 142 284 190 b 313 259 308 254 311 258 b 329 267 317 265 323 267 b 349 247 340 267 349 259 b 201 -263 349 242 204 -258 b 182 -273 197 -270 190 -273 b 163 -260 174 -273 166 -269 b 161 -256 161 -259 161 -258 b 217 -59 161 -248 170 -220 b 272 129 247 43 272 127 b 272 129 272 129 272 129 b 264 122 272 129 268 126 b 140 80 227 94 183 80 b 36 115 102 80 65 91 b 0 194 10 136 0 165 b 88 302 0 244 32 292 \"},\"va9\":{\"x_min\":-24.5,\"x_max\":314.421875,\"ha\":321,\"o\":\"m -24 -145 l -24 -5 l -20 -5 b 0 -23 -9 -5 -2 -12 b 27 -87 4 -38 14 -66 b 138 -220 53 -136 88 -177 b 235 -328 179 -255 208 -288 b 314 -592 287 -409 314 -501 b 292 -732 314 -639 307 -687 l 289 -742 l 294 -756 b 314 -896 307 -802 314 -849 b 292 -1035 314 -943 307 -991 l 289 -1045 l 294 -1057 b 314 -1197 307 -1104 314 -1152 b 292 -1338 314 -1246 307 -1292 l 289 -1347 l 294 -1360 b 314 -1500 307 -1407 314 -1454 b 273 -1689 314 -1565 300 -1628 b 250 -1712 265 -1710 261 -1712 b 228 -1691 236 -1712 228 -1704 l 228 -1685 l 234 -1675 b 270 -1507 258 -1621 270 -1564 b 98 -1193 270 -1381 209 -1261 b 40 -1174 76 -1179 58 -1174 b -10 -1189 24 -1174 8 -1178 b -20 -1192 -14 -1192 -16 -1192 l -24 -1192 l -24 -1052 l -24 -913 l -20 -913 b 0 -931 -9 -913 -2 -920 b 27 -995 4 -946 14 -974 b 138 -1128 53 -1043 88 -1085 b 257 -1275 190 -1172 228 -1220 b 262 -1283 259 -1279 262 -1283 l 262 -1283 b 269 -1249 264 -1282 268 -1260 b 270 -1206 270 -1233 270 -1220 b 98 -891 270 -1075 206 -957 b 40 -871 76 -877 58 -871 b -10 -886 24 -871 8 -875 b -20 -889 -14 -889 -16 -889 l -24 -889 l -24 -749 l -24 -610 l -20 -610 b 0 -628 -9 -610 -2 -617 b 27 -692 4 -644 14 -671 b 138 -825 53 -741 88 -782 b 257 -973 190 -870 228 -917 b 262 -981 259 -977 262 -981 l 262 -981 b 269 -946 264 -979 268 -957 b 270 -903 270 -931 270 -917 b 98 -588 270 -774 206 -655 b 40 -569 76 -574 58 -569 b -10 -584 24 -569 8 -574 b -20 -587 -14 -587 -16 -587 l -24 -587 l -24 -448 l -24 -308 l -20 -308 b 0 -326 -9 -308 -2 -315 b 27 -390 4 -341 14 -369 b 138 -523 53 -438 88 -480 b 257 -670 190 -567 228 -614 b 262 -678 259 -674 262 -678 b 262 -678 262 -678 262 -678 b 269 -644 264 -677 268 -656 b 270 -601 270 -628 270 -614 b 98 -285 270 -471 206 -352 b 40 -266 76 -273 58 -266 b -10 -281 24 -266 8 -272 b -20 -284 -14 -284 -16 -284 l -24 -284 l -24 -145 \"},\"vaa\":{\"x_min\":-1.359375,\"x_max\":752.703125,\"ha\":768,\"o\":\"m 490 985 b 504 986 495 986 500 986 b 604 907 551 986 593 954 b 607 884 607 900 607 892 b 581 813 607 857 597 831 l 578 810 l 583 811 b 710 932 638 827 687 873 b 714 943 711 936 713 942 b 730 952 720 949 725 952 b 752 931 741 952 752 943 b 200 -946 752 927 204 -941 b 182 -957 197 -953 190 -957 b 163 -945 174 -957 166 -953 b 161 -939 161 -942 161 -942 b 217 -743 161 -931 170 -904 b 272 -555 247 -639 272 -555 b 272 -555 272 -555 272 -555 b 264 -560 272 -555 268 -557 b 140 -603 227 -589 182 -603 b 36 -567 102 -603 65 -592 b -1 -487 12 -548 -1 -517 b 17 -427 -1 -466 5 -445 b 103 -380 38 -395 70 -380 b 191 -433 137 -380 172 -398 b 205 -484 201 -448 205 -466 b 178 -553 205 -509 196 -535 l 175 -557 l 182 -555 b 307 -435 236 -539 284 -494 b 372 -213 308 -430 372 -215 b 372 -213 372 -213 372 -213 b 364 -219 372 -213 368 -216 b 240 -262 328 -247 283 -262 b 137 -226 202 -262 166 -249 b 99 -145 112 -206 99 -176 b 118 -84 99 -124 106 -104 b 204 -38 138 -54 171 -38 b 292 -91 238 -38 273 -56 b 306 -141 302 -106 306 -124 b 279 -212 306 -167 296 -194 l 276 -215 l 281 -213 b 408 -93 336 -198 385 -151 b 473 129 409 -88 473 127 b 473 129 473 129 473 129 b 465 122 473 129 469 126 b 341 80 428 94 383 80 b 236 115 303 80 266 91 b 200 195 213 136 200 165 b 217 256 200 217 206 238 b 304 303 239 287 272 303 b 393 249 338 303 374 285 b 406 199 402 234 406 217 b 379 129 406 173 397 148 l 377 126 l 382 127 b 509 248 436 142 485 190 b 574 470 510 254 574 469 b 574 470 574 470 574 470 b 566 464 574 470 570 467 b 442 421 529 435 484 421 b 337 458 404 421 367 433 b 300 538 314 477 300 508 b 318 598 300 559 306 580 b 404 645 340 630 372 645 b 494 592 439 645 475 627 b 507 541 502 577 507 559 b 480 471 507 516 498 489 l 477 467 l 483 470 b 608 589 537 485 586 531 b 675 811 611 595 675 810 b 675 811 675 811 675 811 b 666 806 675 811 671 809 b 543 763 628 777 585 763 b 438 799 504 763 468 775 b 401 878 412 820 401 849 b 490 985 401 928 434 977 \"},\"vab\":{\"x_min\":0,\"x_max\":272.21875,\"ha\":278,\"o\":\"m 243 631 b 250 632 246 632 249 632 b 270 620 259 632 268 628 l 272 616 l 272 201 l 272 -212 l 270 -216 b 251 -229 268 -224 259 -229 b 227 -215 243 -229 240 -229 l 151 -142 b 32 -16 81 -80 53 -49 b 0 84 9 18 0 52 b 111 199 0 149 42 199 b 137 197 119 199 127 198 b 228 151 168 191 197 177 l 231 148 l 231 383 b 232 620 231 616 231 616 b 243 631 234 624 238 630 m 168 131 b 152 133 163 133 157 133 b 107 102 130 133 111 120 b 106 86 107 97 106 91 b 111 41 106 73 108 56 b 227 -152 125 -13 171 -90 l 231 -156 l 231 -37 l 231 80 l 225 87 b 168 131 210 111 190 126 \"},\"vad\":{\"x_min\":0,\"x_max\":873.828125,\"ha\":892,\"o\":\"m 0 0 l 0 703 l 81 703 l 164 703 l 164 0 l 164 -705 l 81 -705 l 0 -705 l 0 0 m 225 0 l 225 703 l 246 703 l 268 703 l 268 366 l 268 30 l 274 36 b 314 79 284 44 302 63 b 413 302 357 137 392 213 b 432 327 419 324 421 327 b 449 306 443 327 447 322 b 611 115 457 195 529 115 b 651 122 624 115 638 117 b 728 316 705 140 724 188 b 729 388 728 342 729 366 b 671 635 729 533 711 602 b 581 662 649 652 616 662 b 477 637 545 662 510 653 l 475 635 l 477 634 b 503 627 488 632 495 631 b 545 556 532 612 545 584 b 491 480 545 524 526 491 b 465 474 481 476 473 474 b 379 563 417 474 379 516 b 389 602 379 576 382 588 b 541 691 409 641 479 681 b 582 694 555 692 568 694 b 865 462 714 694 834 598 b 873 392 871 440 873 416 b 865 317 873 367 871 341 b 639 84 839 194 748 101 b 612 83 630 83 620 83 b 511 116 577 83 543 94 b 504 120 509 119 506 120 b 504 120 504 120 504 120 b 469 59 504 120 488 93 l 432 -1 l 469 -61 b 504 -122 488 -94 504 -122 b 504 -122 504 -122 504 -122 b 511 -117 506 -122 509 -120 b 612 -84 543 -95 577 -84 b 665 -91 630 -84 647 -87 b 869 -338 771 -122 850 -216 b 873 -392 872 -356 873 -374 b 798 -595 873 -469 847 -539 b 581 -695 741 -662 660 -695 b 406 -626 517 -695 454 -671 b 381 -563 389 -607 381 -585 b 465 -477 381 -519 413 -477 b 545 -559 514 -477 545 -519 b 503 -628 545 -587 532 -613 b 477 -635 495 -632 488 -634 l 475 -637 l 477 -638 b 581 -663 510 -655 545 -663 b 671 -637 616 -663 649 -653 b 729 -391 711 -603 729 -534 b 728 -317 729 -367 728 -344 b 623 -117 722 -173 698 -124 b 611 -116 619 -116 615 -116 b 449 -308 528 -116 457 -198 b 432 -328 447 -323 443 -328 b 413 -303 421 -328 419 -326 b 314 -80 392 -215 357 -138 b 274 -37 302 -65 284 -45 l 268 -31 l 268 -367 l 268 -705 l 246 -705 l 225 -705 l 225 0 \"},\"vb1\":{\"x_min\":78.9375,\"x_max\":485.921875,\"ha\":417,\"o\":\"m 362 378 b 378 380 367 380 372 380 b 472 348 415 380 453 367 b 485 315 481 338 485 327 b 462 273 485 298 477 281 b 439 267 454 269 446 267 b 398 290 424 267 409 274 b 344 319 385 309 364 319 b 281 269 315 319 289 301 b 279 262 280 266 279 262 b 276 256 279 260 277 258 b 274 249 276 254 274 251 b 238 127 273 248 257 192 b 201 4 217 61 201 5 b 166 -1 198 -1 200 -1 b 153 -1 163 -1 157 -1 b 141 -1 148 -1 144 -1 b 104 4 106 -1 107 -1 b 104 6 104 5 104 5 b 142 144 104 13 110 34 b 182 278 164 219 181 276 b 183 288 182 281 182 285 b 185 302 185 292 185 298 b 164 330 185 317 176 328 b 159 330 163 330 161 330 b 102 302 140 330 119 320 b 91 294 95 295 93 294 b 88 294 91 294 89 294 b 78 303 83 294 78 298 b 81 312 78 306 78 309 b 200 373 106 347 160 373 b 215 371 205 373 209 371 b 266 335 235 367 254 353 b 269 331 268 333 269 331 b 269 331 269 331 269 331 b 273 335 269 331 270 334 b 362 378 298 359 330 376 \"},\"vb3\":{\"x_min\":0,\"x_max\":227.3125,\"ha\":232,\"o\":\"m 91 213 b 100 215 93 215 96 215 b 227 58 167 215 224 144 b 227 52 227 56 227 54 b 61 -201 227 -43 164 -138 b 29 -216 44 -212 36 -216 b 23 -210 27 -216 24 -213 b 21 -205 21 -208 21 -206 b 34 -192 21 -201 25 -197 b 122 -55 89 -161 122 -106 b 104 6 122 -33 117 -12 l 103 9 l 96 9 b 4 79 57 9 17 38 b 0 112 1 90 0 101 b 91 213 0 163 36 209 \"},\"vb4\":{\"x_min\":-597.53125,\"x_max\":596.171875,\"ha\":608,\"o\":\"m -533 324 b -525 327 -530 326 -528 327 b -504 305 -514 327 -504 317 b -504 305 -504 305 -504 305 b -513 284 -504 299 -504 299 b -556 112 -541 226 -556 167 b -545 33 -556 84 -552 58 b -524 -20 -541 15 -532 -9 l -522 -23 l -491 15 l -413 111 b -355 174 -367 169 -363 174 b -351 174 -353 174 -352 174 b -254 86 -343 174 -348 179 b -168 -1 -208 37 -168 -1 b -100 84 -168 -1 -137 37 b -23 173 -28 173 -29 172 b -19 174 -21 174 -20 174 b -8 173 -14 174 -10 173 b 80 86 -5 172 13 151 b 166 -1 127 37 166 -1 b 235 84 166 -1 197 37 b 311 173 306 173 304 172 b 317 174 313 174 314 174 b 326 173 319 174 323 173 b 490 11 329 172 366 134 l 502 -1 l 530 34 b 568 76 560 72 563 74 b 575 77 570 77 573 77 b 596 56 586 77 596 68 b 594 48 596 54 596 51 b 417 -172 592 41 424 -166 b 405 -176 415 -174 409 -176 b 396 -174 401 -176 398 -176 b 307 -87 393 -173 372 -152 b 221 -1 259 -38 221 -1 b 152 -86 221 -1 190 -38 b 76 -176 81 -174 83 -173 b 70 -176 74 -176 73 -176 b 61 -174 66 -176 62 -174 b -27 -87 58 -173 38 -152 b -114 -1 -74 -38 -112 -1 b -182 -86 -114 -1 -145 -38 b -258 -176 -253 -174 -253 -173 b -264 -176 -259 -176 -262 -176 b -274 -174 -268 -176 -272 -174 b -438 -11 -277 -173 -348 -102 l -449 0 l -479 -37 b -524 -80 -513 -80 -514 -80 l -524 -80 b -553 -52 -534 -80 -540 -74 b -597 109 -583 -8 -597 48 b -560 280 -597 165 -585 224 b -533 324 -548 310 -540 322 \"},\"vb6\":{\"x_min\":0,\"x_max\":556.6875,\"ha\":568,\"o\":\"m 289 545 b 298 546 292 545 295 546 b 318 533 306 546 315 541 b 319 428 319 530 319 528 l 319 327 l 334 327 b 526 223 412 326 485 285 b 543 172 537 206 543 190 b 447 76 543 122 503 76 b 445 76 446 76 446 76 b 359 165 394 77 359 119 b 368 205 359 179 362 192 b 441 251 382 233 412 251 b 455 249 446 251 451 251 b 460 248 458 249 460 248 b 460 248 460 248 460 248 b 454 254 460 249 458 251 b 334 295 419 280 378 294 l 319 295 l 319 4 l 319 -287 l 321 -285 b 328 -285 322 -285 325 -285 b 524 -99 424 -277 507 -198 b 541 -79 526 -84 530 -79 b 556 -97 551 -79 556 -84 b 548 -133 556 -105 553 -117 b 334 -317 521 -233 434 -306 b 322 -319 329 -317 323 -317 l 319 -319 l 319 -424 b 319 -471 319 -444 319 -459 b 313 -541 319 -544 318 -535 b 298 -548 308 -545 303 -548 b 279 -534 289 -548 281 -542 b 277 -424 277 -531 277 -530 l 277 -317 l 273 -317 b 13 -95 153 -305 51 -217 b 0 2 4 -62 0 -29 b 182 295 0 126 66 238 b 274 324 210 309 249 320 l 277 324 l 277 427 b 279 533 277 528 277 530 b 289 545 281 538 285 542 m 277 2 b 277 291 277 161 277 291 b 268 288 277 291 273 290 b 144 1 179 265 144 184 b 276 -284 144 -199 175 -267 l 277 -285 l 277 2 \"},\"vb9\":{\"x_min\":-122.5,\"x_max\":121.140625,\"ha\":124,\"o\":\"m -16 145 b 0 147 -10 147 -5 147 b 121 -1 66 147 121 77 b 114 -49 121 -16 118 -33 b -1 -148 95 -112 47 -148 b -85 -106 -31 -148 -61 -134 b -122 -1 -110 -76 -122 -38 b -16 145 -122 68 -81 134 m 12 111 b 0 113 8 113 4 113 b -68 22 -29 113 -61 73 b -70 0 -69 15 -70 6 b -13 -113 -70 -49 -47 -98 b -1 -115 -9 -115 -5 -115 b 63 -40 24 -115 53 -83 b 68 -1 66 -27 68 -15 b 12 111 68 48 46 97 \"},\"vba\":{\"x_min\":-118.421875,\"x_max\":597.53125,\"ha\":381,\"o\":\"m 460 574 b 464 574 461 574 462 574 b 488 574 470 574 481 574 b 500 573 491 574 498 574 b 594 503 543 570 588 538 b 597 488 596 498 597 494 b 528 417 597 449 564 417 b 502 423 519 417 510 419 b 465 481 477 434 465 458 b 488 528 465 499 472 516 b 490 530 490 530 490 530 b 490 530 490 530 490 530 b 468 517 488 530 475 523 b 349 340 419 485 377 420 b 347 330 348 334 347 330 b 383 328 347 328 363 328 b 428 326 423 328 424 328 b 442 302 438 320 442 312 b 430 281 442 294 438 285 b 385 276 424 277 426 276 l 377 276 l 332 276 l 330 269 b 178 -117 303 126 250 -9 b 1 -249 129 -194 69 -237 b -20 -251 -6 -251 -13 -251 b -114 -187 -65 -251 -100 -227 b -118 -156 -117 -177 -118 -166 b -51 -84 -118 -116 -91 -84 b -31 -87 -46 -84 -39 -86 b 16 -152 0 -95 16 -124 b -12 -205 16 -173 8 -194 b -16 -208 -14 -206 -16 -208 b -14 -208 -16 -208 -14 -208 b -9 -206 -14 -208 -12 -208 b 74 -124 23 -197 54 -166 b 172 224 98 -79 125 22 b 185 276 178 252 183 274 b 185 276 185 276 185 276 b 141 276 185 276 181 276 b 91 280 96 276 96 276 b 77 302 83 285 77 294 b 91 326 77 312 83 320 b 148 328 95 328 96 328 l 198 330 l 202 341 b 460 574 249 473 351 566 \"},\"vbf\":{\"x_min\":-53.078125,\"x_max\":513.140625,\"ha\":485,\"o\":\"m 185 383 b 196 384 187 383 191 384 b 277 334 230 384 259 365 b 288 301 281 324 288 306 b 288 297 288 298 288 297 b 294 302 289 297 291 299 b 394 370 323 338 367 367 b 404 371 398 370 401 371 b 510 272 453 371 498 328 b 513 237 513 262 513 251 b 507 172 513 217 511 192 b 326 -34 487 59 412 -26 b 314 -36 322 -36 318 -36 b 274 -24 298 -36 283 -31 l 265 -16 b 224 44 246 -1 232 20 b 223 49 224 47 223 49 b 223 49 223 49 223 49 b 149 -197 221 48 149 -194 b 149 -198 149 -197 149 -198 b 170 -210 149 -202 155 -205 b 187 -215 174 -210 175 -212 b 204 -231 201 -219 204 -222 b 197 -245 204 -240 202 -242 l 194 -248 l 76 -248 l -42 -248 l -46 -245 b -53 -231 -51 -242 -53 -240 b -35 -215 -53 -222 -49 -217 b -13 -210 -21 -212 -20 -212 b -6 -208 -10 -209 -8 -208 b 0 -206 -6 -208 -2 -206 b 25 -188 13 -201 21 -195 b 163 280 28 -183 163 276 b 166 291 163 283 164 287 b 167 302 167 295 167 299 b 155 324 167 315 161 324 b 155 324 155 324 155 324 b 65 230 125 322 85 280 b 53 215 61 217 58 215 b 51 215 53 215 51 215 b 42 224 46 215 42 217 b 57 263 42 231 47 244 b 140 360 77 305 104 337 b 152 370 144 365 149 369 b 185 383 157 376 172 381 m 374 306 b 366 308 371 308 368 308 b 300 273 348 308 321 294 b 284 254 288 262 287 259 b 280 242 283 249 281 245 b 257 169 279 240 270 213 l 236 98 l 236 93 b 251 48 238 77 243 61 b 279 27 258 37 272 27 b 281 27 279 27 280 27 b 291 31 281 27 287 30 b 396 170 334 52 378 109 b 406 247 402 197 406 224 b 401 277 406 259 405 270 b 374 306 397 290 383 303 \"},\"vc3\":{\"x_min\":-10.890625,\"x_max\":299.4375,\"ha\":294,\"o\":\"m 136 460 b 142 462 137 462 140 462 b 166 449 152 462 161 456 b 171 428 168 446 168 445 b 288 131 194 322 238 209 b 298 115 295 120 296 117 b 299 106 298 112 299 109 b 273 81 299 91 287 81 b 255 86 268 81 261 83 b 155 116 225 104 183 116 l 152 116 l 149 108 b 141 83 148 102 144 91 b 134 48 137 69 134 58 b 149 9 134 34 140 24 b 153 -1 152 5 153 1 b 149 -9 153 -5 152 -6 b 144 -11 148 -11 147 -11 b 122 2 138 -11 133 -6 b 95 61 104 20 95 38 b 107 108 95 74 99 90 b 108 113 107 111 108 112 b 107 113 108 113 108 113 b 102 113 106 113 104 113 b 31 86 76 108 53 98 b 14 80 24 81 20 80 b -10 106 0 80 -10 91 b 0 131 -10 115 -9 116 b 115 430 49 209 91 317 b 136 460 119 451 123 456 \"}},\"cssFontWeight\":\"normal\",\"ascender\":1903,\"underlinePosition\":-125,\"cssFontStyle\":\"normal\",\"boundingBox\":{\"yMin\":-2065.375,\"xMin\":-695.53125,\"yMax\":1901.578125,\"xMax\":1159.671875},\"resolution\":1000,\"descender\":-2066,\"familyName\":\"VexFlow-18\",\"lineHeight\":4093,\"underlineThickness\":50};\n// Vex Flow\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n//\n// Requires a glyph font to be loaded and Vex.Flow.Font to be set.\n\n/**\n * A quick and dirty static glyph renderer. Renders glyphs from the default\n * font defined in Vex.Flow.Font.\n *\n * @param {!Object} ctx The canvas context.\n * @param {number} x_pos X coordinate.\n * @param {number} y_pos Y coordinate.\n * @param {number} point The point size to use.\n * @param {string} val The glyph code in Vex.Flow.Font.\n * @param {boolean} nocache If set, disables caching of font outline.\n */\nVex.Flow.renderGlyph = function(ctx, x_pos, y_pos, point, val, nocache) {\n  var scale = point * 72.0 / (Vex.Flow.Font.resolution * 100.0);\n  var metrics = Vex.Flow.Glyph.loadMetrics(Vex.Flow.Font, val, !nocache);\n  Vex.Flow.Glyph.renderOutline(ctx, metrics.outline, scale, x_pos, y_pos);\n};\n\n/**\n * @constructor\n */\nVex.Flow.Glyph = (function() {\n  function Glyph(code, point, options) {\n    this.code = code;\n    this.point = point;\n    this.context = null;\n    this.options = {\n      cache: true,\n      font: Vex.Flow.Font\n    };\n\n    this.width = null;\n    this.metrics = null;\n    this.x_shift = 0;\n    this.y_shift = 0;\n\n    if (options) this.setOptions(options); else this.reset();\n  }\n\n  Glyph.prototype = {\n    setOptions: function(options) {\n      Vex.Merge(this.options, options);\n      this.reset();\n    },\n\n    setStave: function(stave) { this.stave = stave; return this; },\n    setXShift: function(x_shift) { this.x_shift = x_shift; return this; },\n    setYShift: function(y_shift) { this.y_shift = y_shift; return this; },\n    setContext: function(context) { this.context = context; return this; },\n    getContext: function() { return this.context; },\n\n    reset: function() {\n      this.metrics = Vex.Flow.Glyph.loadMetrics(this.options.font, this.code,\n          this.options.cache);\n      this.scale = this.point * 72 / (this.options.font.resolution * 100);\n    },\n\n    setWidth: function(width) {\n      this.width =  width;\n      return this;\n    },\n\n    getMetrics: function() {\n      if (!this.metrics) throw new Vex.RuntimeError(\"BadGlyph\", \"Glyph \" +\n          this.code + \" is not initialized.\");\n      return {\n        x_min: this.metrics.x_min * this.scale,\n        x_max: this.metrics.x_max * this.scale,\n        width: this.width || (this.metrics.x_max - this.metrics.x_min) * this.scale,\n        height: this.metrics.ha * this.scale\n      };\n    },\n\n    render: function(ctx, x_pos, y_pos) {\n      if (!this.metrics) throw new Vex.RuntimeError(\"BadGlyph\", \"Glyph \" +\n          this.code + \" is not initialized.\");\n\n      var outline = this.metrics.outline;\n      var scale = this.scale;\n\n      Glyph.renderOutline(ctx, outline, scale, x_pos, y_pos);\n    },\n\n    renderToStave: function(x) {\n      if (!this.metrics) throw new Vex.RuntimeError(\"BadGlyph\", \"Glyph \" +\n          this.code + \" is not initialized.\");\n      if (!this.stave) throw new Vex.RuntimeError(\"GlyphError\", \"No valid stave\");\n      if (!this.context) throw new Vex.RERR(\"GlyphError\", \"No valid context\");\n\n      var outline = this.metrics.outline;\n      var scale = this.scale;\n\n      Glyph.renderOutline(this.context, outline, scale,\n          x + this.x_shift, this.stave.getYForGlyphs() + this.y_shift);\n    }\n  };\n\n  /* Static methods used to implement loading / unloading of glyphs */\n  Glyph.loadMetrics = function(font, code, cache) {\n    var glyph = font.glyphs[code];\n    if (!glyph) throw new Vex.RuntimeError(\"BadGlyph\", \"Glyph \" + code +\n        \" does not exist in font.\");\n\n    var x_min = glyph.x_min;\n    var x_max = glyph.x_max;\n    var ha = glyph.ha;\n\n    var outline;\n\n    if (glyph.o) {\n      if (cache) {\n        if (glyph.cached_outline) {\n          outline = glyph.cached_outline;\n        } else {\n          outline = glyph.o.split(' ');\n          glyph.cached_outline = outline;\n        }\n      } else {\n        if (glyph.cached_outline) delete glyph.cached_outline;\n        outline = glyph.o.split(' ');\n      }\n\n      return {\n        x_min: x_min,\n        x_max: x_max,\n        ha: ha,\n        outline: outline\n      };\n    } else {\n      throw new Vex.RuntimeError(\"BadGlyph\", \"Glyph \" + this.code +\n          \" has no outline defined.\");\n    }\n  };\n\n  Glyph.renderOutline = function(ctx, outline, scale, x_pos, y_pos) {\n    var outlineLength = outline.length;\n\n    ctx.beginPath();\n\n    ctx.moveTo(x_pos, y_pos);\n\n    for (var i = 0; i < outlineLength; ) {\n      var action = outline[i++];\n\n      switch(action) {\n        case 'm':\n          ctx.moveTo(x_pos + outline[i++] * scale,\n                     y_pos + outline[i++] * -scale);\n          break;\n        case 'l':\n          ctx.lineTo(x_pos + outline[i++] * scale,\n                     y_pos + outline[i++] * -scale);\n          break;\n\n        case 'q':\n          var cpx = x_pos + outline[i++] * scale;\n          var cpy = y_pos + outline[i++] * -scale;\n\n          ctx.quadraticCurveTo(\n              x_pos + outline[i++] * scale,\n              y_pos + outline[i++] * -scale, cpx, cpy);\n          break;\n\n        case 'b':\n          var x = x_pos + outline[i++] * scale;\n          var y = y_pos + outline[i++] * -scale;\n\n          ctx.bezierCurveTo(\n              x_pos + outline[i++] * scale, y_pos + outline[i++] * -scale,\n              x_pos + outline[i++] * scale, y_pos + outline[i++] * -scale,\n              x, y);\n          break;\n      }\n    }\n    ctx.fill();\n  };\n\n  return Glyph;\n}());\n\n// Vex Flow\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nVex.Flow.Stave = (function() {\n  function Stave(x, y, width, options) {\n    if (arguments.length > 0) this.init(x, y, width, options);\n  }\n\n  var THICKNESS = (Vex.Flow.STAVE_LINE_THICKNESS > 1 ?\n        Vex.Flow.STAVE_LINE_THICKNESS : 0);\n  Stave.prototype = {\n    init: function(x, y, width, options) {\n      this.x = x;\n      this.y = y;\n      this.width = width;\n      this.glyph_start_x = x + 5;\n      this.glyph_end_x = x + width;\n      this.start_x = this.glyph_start_x;\n      this.end_x = this.glyph_end_x;\n      this.context = null;\n      this.glyphs = [];\n      this.end_glyphs = [];\n      this.modifiers = [];  // non-glyph stave items (barlines, coda, segno, etc.)\n      this.measure = 0;\n      this.clef = \"treble\";\n      this.font = {\n        family: \"sans-serif\",\n        size: 8,\n        weight: \"\"\n      };\n      this.options = {\n        vertical_bar_width: 10,       // Width around vertical bar end-marker\n        glyph_spacing_px: 10,\n        num_lines: 5,\n        fill_style: \"#999999\",\n        spacing_between_lines_px: 10, // in pixels\n        space_above_staff_ln: 4,      // in staff lines\n        space_below_staff_ln: 4,      // in staff lines\n        top_text_position: 1          // in staff lines\n      };\n      this.bounds = {x: this.x, y: this.y, w: this.width, h: 0};\n      Vex.Merge(this.options, options);\n\n      this.resetLines();\n\n      this.modifiers.push(\n          new Vex.Flow.Barline(Vex.Flow.Barline.type.SINGLE, this.x)); // beg bar\n      this.modifiers.push(\n          new Vex.Flow.Barline(Vex.Flow.Barline.type.SINGLE,\n          this.x + this.width)); // end bar\n    },\n\n    resetLines: function() {\n      this.options.line_config = [];\n      for (var i = 0; i < this.options.num_lines; i++) {\n        this.options.line_config.push({visible: true});\n      }\n      this.height = (this.options.num_lines + this.options.space_above_staff_ln) *\n         this.options.spacing_between_lines_px;\n      this.options.bottom_text_position = this.options.num_lines + 1;\n    },\n\n    setNoteStartX: function(x) { this.start_x = x; return this; },\n    getNoteStartX: function() {\n      var start_x = this.start_x;\n\n      // Add additional space if left barline is REPEAT_BEGIN and there are other\n      // start modifiers than barlines\n      if (this.modifiers[0].barline == Vex.Flow.Barline.type.REPEAT_BEGIN &&\n          this.modifiers.length > 2) {\n        start_x += 20;\n      }\n\n      return start_x;\n    },\n\n    getNoteEndX: function() { return this.end_x; },\n    getTieStartX: function() { return this.start_x; },\n    getTieEndX: function() { return this.x + this.width; },\n    setContext: function(context) { this.context = context; return this; },\n    getContext: function() { return this.context; },\n    getX: function() { return this.x; },\n    getNumLines: function() { return this.options.num_lines; },\n    setNumLines: function(lines) {\n      this.options.num_lines = parseInt(lines, 10);\n      this.resetLines();\n      return this;\n    },\n    setY: function(y) { this.y = y; return this; },\n\n    setWidth: function(width) {\n      this.width = width;\n      this.glyph_end_x = this.x + width;\n      this.end_x = this.glyph_end_x;\n\n      // reset the x position of the end barline (TODO(0xfe): This makes no sense)\n      // this.modifiers[1].setX(this.end_x);\n      return this;\n    },\n\n    getWidth: function() {\n      return this.width;\n    },\n\n    setMeasure: function(measure) { this.measure = measure; return this; },\n\n      // Bar Line functions\n    setBegBarType: function(type) {\n      // Only valid bar types at beginning of stave is none, single or begin repeat\n      if (type == Vex.Flow.Barline.type.SINGLE ||\n          type == Vex.Flow.Barline.type.REPEAT_BEGIN ||\n          type == Vex.Flow.Barline.type.NONE) {\n          this.modifiers[0] = new Vex.Flow.Barline(type, this.x);\n      }\n      return this;\n    },\n\n    setEndBarType: function(type) {\n      // Repeat end not valid at end of stave\n      if (type != Vex.Flow.Barline.type.REPEAT_BEGIN)\n        this.modifiers[1] = new Vex.Flow.Barline(type, this.x + this.width);\n      return this;\n    },\n\n    /**\n     * Gets the pixels to shift from the beginning of the stave\n     * following the modifier at the provided index\n     * @param  {Number} index The index from which to determine the shift\n     * @return {Number}       The amount of pixels shifted\n     */\n    getModifierXShift: function(index) {\n      if (typeof index === 'undefined') index = this.glyphs.length -1;\n      if (typeof index !== 'number') new Vex.RERR(\"InvalidIndex\",\n        \"Must be of number type\");\n\n      var x = this.glyph_start_x;\n      var bar_x_shift = 0;\n\n      for (var i = 0; i < index + 1; ++i) {\n        var glyph = this.glyphs[i];\n        x += glyph.getMetrics().width;\n        bar_x_shift += glyph.getMetrics().width;\n      }\n\n      // Add padding after clef, time sig, key sig\n      if (bar_x_shift > 0) bar_x_shift += this.options.vertical_bar_width + 10;\n\n      return bar_x_shift;\n    },\n\n    // Coda & Segno Symbol functions\n    setRepetitionTypeLeft: function(type, y) {\n      this.modifiers.push(new Vex.Flow.Repetition(type, this.x, y));\n      return this;\n    },\n\n    setRepetitionTypeRight: function(type, y) {\n      this.modifiers.push(new Vex.Flow.Repetition(type, this.x, y) );\n      return this;\n    },\n\n    // Volta functions\n    setVoltaType: function(type, number_t, y) {\n      this.modifiers.push(new Vex.Flow.Volta(type, number_t, this.x, y));\n      return this;\n    },\n\n    // Section functions\n    setSection: function(section, y) {\n      this.modifiers.push(new Vex.Flow.StaveSection(section, this.x, y));\n      return this;\n    },\n\n    // Tempo functions\n    setTempo: function(tempo, y) {\n      this.modifiers.push(new Vex.Flow.StaveTempo(tempo, this.x, y));\n      return this;\n    },\n\n    // Text functions\n    setText: function(text, position, options) {\n      this.modifiers.push(new Vex.Flow.StaveText(text, position, options));\n      return this;\n    },\n\n    getHeight: function() {\n      return this.height;\n    },\n\n    getSpacingBetweenLines: function() {\n      return this.options.spacing_between_lines_px;\n    },\n\n    getBoundingBox: function() {\n      return new Vex.Flow.BoundingBox(this.x, this.y, this.width, this.getBottomY() - this.y);\n      // body...\n    },\n\n    getBottomY: function() {\n      var options = this.options;\n      var spacing = options.spacing_between_lines_px;\n      var score_bottom = this.getYForLine(options.num_lines) +\n         (options.space_below_staff_ln * spacing);\n\n      return score_bottom;\n    },\n\n    getBottomLineY: function() {\n      return this.getYForLine(this.options.num_lines);\n    },\n\n    getYForLine: function(line) {\n      var options = this.options;\n      var spacing = options.spacing_between_lines_px;\n      var headroom = options.space_above_staff_ln;\n\n      var y = this.y + ((line * spacing) + (headroom * spacing)) -\n        (THICKNESS / 2);\n\n      return y;\n    },\n\n    getYForTopText: function(line) {\n      var l = line || 0;\n      return this.getYForLine(-l - this.options.top_text_position);\n    },\n\n    getYForBottomText: function(line) {\n      var l = line || 0;\n      return this.getYForLine(this.options.bottom_text_position + l);\n    },\n\n    getYForNote: function(line) {\n      var options = this.options;\n      var spacing = options.spacing_between_lines_px;\n      var headroom = options.space_above_staff_ln;\n      var y = this.y + (headroom * spacing) + (5 * spacing) - (line * spacing);\n\n      return y;\n    },\n\n    getYForGlyphs: function() {\n      return this.getYForLine(3);\n    },\n\n    addGlyph: function(glyph) {\n      glyph.setStave(this);\n      this.glyphs.push(glyph);\n      this.start_x += glyph.getMetrics().width;\n      return this;\n    },\n\n    addEndGlyph: function(glyph) {\n      glyph.setStave(this);\n      this.end_glyphs.push(glyph);\n      this.end_x -= glyph.getMetrics().width;\n      return this;\n    },\n\n    addModifier: function(modifier) {\n      this.modifiers.push(modifier);\n      modifier.addToStave(this, (this.glyphs.length === 0));\n      return this;\n    },\n\n    addEndModifier: function(modifier) {\n      this.modifiers.push(modifier);\n      modifier.addToStaveEnd(this, (this.end_glyphs.length === 0));\n      return this;\n    },\n\n    addKeySignature: function(keySpec) {\n      this.addModifier(new Vex.Flow.KeySignature(keySpec));\n      return this;\n    },\n\n    addClef: function(clef, size, annotation) {\n      this.clef = clef;\n      this.addModifier(new Vex.Flow.Clef(clef, size, annotation));\n      return this;\n    },\n\n    addEndClef: function(clef, size, annotation) {\n      this.addEndModifier(new Vex.Flow.Clef(clef, size, annotation));\n      return this;\n    },\n\n    addTimeSignature: function(timeSpec, customPadding) {\n      this.addModifier(new Vex.Flow.TimeSignature(timeSpec, customPadding));\n      return this;\n    },\n\n    addEndTimeSignature: function(timeSpec, customPadding) {\n      this.addEndModifier(new Vex.Flow.TimeSignature(timeSpec, customPadding));\n    },\n\n    addTrebleGlyph: function() {\n      this.clef = \"treble\";\n      this.addGlyph(new Vex.Flow.Glyph(\"v83\", 40));\n      return this;\n    },\n\n    /**\n     * All drawing functions below need the context to be set.\n     */\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw stave without canvas context.\");\n\n      var num_lines = this.options.num_lines;\n      var width = this.width;\n      var x = this.x;\n      var y;\n      var glyph;\n\n      // Render lines\n      for (var line=0; line < num_lines; line++) {\n        y = this.getYForLine(line);\n\n        this.context.save();\n        this.context.setFillStyle(this.options.fill_style);\n        this.context.setStrokeStyle(this.options.fill_style);\n        if (this.options.line_config[line].visible) {\n          this.context.fillRect(x, y, width, Vex.Flow.STAVE_LINE_THICKNESS);\n        }\n        this.context.restore();\n      }\n\n      // Render glyphs\n      x = this.glyph_start_x;\n      for (var i = 0; i < this.glyphs.length; ++i) {\n        glyph = this.glyphs[i];\n        if (!glyph.getContext()) {\n          glyph.setContext(this.context);\n        }\n        glyph.renderToStave(x);\n        x += glyph.getMetrics().width;\n      }\n\n      // Render end glyphs\n      x = this.glyph_end_x;\n      for (i = 0; i < this.end_glyphs.length; ++i) {\n        glyph = this.end_glyphs[i];\n        if (!glyph.getContext()) {\n          glyph.setContext(this.context);\n        }\n        x -= glyph.getMetrics().width;\n        glyph.renderToStave(x);\n      }\n\n      // Draw the modifiers (bar lines, coda, segno, repeat brackets, etc.)\n      for (i = 0; i < this.modifiers.length; i++) {\n        // Only draw modifier if it has a draw function\n        if (typeof this.modifiers[i].draw == \"function\")\n          this.modifiers[i].draw(this, this.getModifierXShift());\n      }\n\n      // Render measure numbers\n      if (this.measure > 0) {\n        this.context.save();\n        this.context.setFont(this.font.family, this.font.size, this.font.weight);\n        var text_width = this.context.measureText(\"\" + this.measure).width;\n        y = this.getYForTopText(0) + 3;\n        this.context.fillText(\"\" + this.measure, this.x - text_width / 2, y);\n        this.context.restore();\n      }\n\n      return this;\n    },\n\n    // Draw Simple barlines for backward compatability\n    // Do not delete - draws the beginning bar of the stave\n    drawVertical: function(x, isDouble) {\n      this.drawVerticalFixed(this.x + x, isDouble);\n    },\n\n    drawVerticalFixed: function(x, isDouble) {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw stave without canvas context.\");\n\n      var top_line = this.getYForLine(0);\n      var bottom_line = this.getYForLine(this.options.num_lines - 1);\n      if (isDouble)\n        this.context.fillRect(x - 3, top_line, 1, bottom_line - top_line + 1);\n      this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n    },\n\n    drawVerticalBar: function(x) {\n      this.drawVerticalBarFixed(this.x + x, false);\n    },\n\n    drawVerticalBarFixed: function(x) {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw stave without canvas context.\");\n\n      var top_line = this.getYForLine(0);\n      var bottom_line = this.getYForLine(this.options.num_lines - 1);\n      this.context.fillRect(x, top_line, 1, bottom_line - top_line + 1);\n    },\n\n    /**\n     * Get the current configuration for the Stave.\n     * @return {Array} An array of configuration objects.\n     */\n    getConfigForLines: function() {\n      return this.options.line_config;\n    },\n\n    /**\n     * Configure properties of the lines in the Stave\n     * @param line_number The index of the line to configure.\n     * @param line_config An configuration object for the specified line.\n     * @throws Vex.RERR \"StaveConfigError\" When the specified line number is out of\n     *   range of the number of lines specified in the constructor.\n     */\n    setConfigForLine: function(line_number, line_config) {\n      if (line_number >= this.options.num_lines || line_number < 0) {\n        throw new Vex.RERR(\"StaveConfigError\",\n          \"The line number must be within the range of the number of lines in the Stave.\");\n      }\n      if (!line_config.hasOwnProperty('visible')) {\n        throw new Vex.RERR(\"StaveConfigError\",\n          \"The line configuration object is missing the 'visible' property.\");\n      }\n      if (typeof(line_config.visible) !== 'boolean') {\n        throw new Vex.RERR(\"StaveConfigError\",\n          \"The line configuration objects 'visible' property must be true or false.\");\n      }\n\n      this.options.line_config[line_number] = line_config;\n\n      return this;\n    },\n\n    /**\n     * Set the staff line configuration array for all of the lines at once.\n     * @param lines_configuration An array of line configuration objects.  These objects\n     *   are of the same format as the single one passed in to setLineConfiguration().\n     *   The caller can set null for any line config entry if it is desired that the default be used\n     * @throws Vex.RERR \"StaveConfigError\" When the lines_configuration array does not have\n     *   exactly the same number of elements as the num_lines configuration object set in\n     *   the constructor.\n     */\n    setConfigForLines: function(lines_configuration) {\n      if (lines_configuration.length !== this.options.num_lines) {\n        throw new Vex.RERR(\"StaveConfigError\",\n          \"The length of the lines configuration array must match the number of lines in the Stave\");\n      }\n\n      // Make sure the defaults are present in case an incomplete set of\n      //  configuration options were supplied.\n      for (var line_config in lines_configuration) {\n        // Allow 'null' to be used if the caller just wants the default for a particular node.\n        if (!lines_configuration[line_config]) {\n          lines_configuration[line_config] = this.options.line_config[line_config];\n        }\n        Vex.Merge(this.options.line_config[line_config], lines_configuration[line_config]);\n      }\n\n      this.options.line_config = lines_configuration;\n\n      return this;\n    }\n  };\n\n  return Stave;\n}());\n// Vex Flow Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n//\n// Requires vex.js.\n\n/** @constructor */\nVex.Flow.StaveConnector = (function() {\n  function StaveConnector(top_stave, bottom_stave) {\n    this.init(top_stave, bottom_stave);\n  }\n\n  // SINGLE_LEFT and SINGLE are the same value for compatibility\n  // with older versions of vexflow which didn't have right sided\n  // stave connectors\n  StaveConnector.type = {\n    SINGLE_RIGHT : 0,\n    SINGLE_LEFT : 1,\n    SINGLE: 1,\n    DOUBLE: 2,\n    BRACE: 3,\n    BRACKET: 4,\n    BOLD_DOUBLE_LEFT: 5,\n    BOLD_DOUBLE_RIGHT: 6,\n    THIN_DOUBLE: 7\n  };\n\n  StaveConnector.prototype = {\n    init: function(top_stave, bottom_stave) {\n      this.thickness = Vex.Flow.STAVE_LINE_THICKNESS;\n      this.width = 3;\n      this.top_stave = top_stave;\n      this.bottom_stave = bottom_stave;\n      this.type = StaveConnector.type.DOUBLE;\n      this.x_shift = 0; // Mainly used to offset Bold Double Left to align with offset Repeat Begin bars\n    },\n\n    setContext: function(ctx) {\n      this.ctx = ctx;\n      return this;\n    },\n\n    setType: function(type) {\n      if (type >= StaveConnector.type.SINGLE_RIGHT &&\n          type <= StaveConnector.type.THIN_DOUBLE)\n        this.type = type;\n      return this;\n    },\n\n    setText: function(text, text_options) {\n      this.text = text;\n      this.text_options = {\n        shift_x: 0,\n        shift_y: 0\n      };\n      Vex.Merge(this.text_options, text_options);\n\n      this.font = {\n        family: \"times\",\n        size: 16,\n        weight: \"normal\"\n      };\n      return this;\n    },\n\n    setFont: function(font) {\n      Vex.Merge(this.font, font);\n    },\n\n    setXShift: function(x_shift){\n      if (typeof x_shift !== 'number') {\n        throw Vex.RERR(\"InvalidType\", \"x_shift must be a Number\");\n      }\n\n      this.x_shift = x_shift;\n      return this;\n    },\n\n    draw: function() {\n      if (!this.ctx) throw new Vex.RERR(\n          \"NoContext\", \"Can't draw without a context.\");\n      var topY = this.top_stave.getYForLine(0);\n      var botY = this.bottom_stave.getYForLine(this.bottom_stave.getNumLines() - 1) +\n        this.thickness;\n      var width = this.width;\n      var topX = this.top_stave.getX();\n\n      var isRightSidedConnector = (\n        this.type === StaveConnector.type.SINGLE_RIGHT ||\n        this.type === StaveConnector.type.BOLD_DOUBLE_RIGHT ||\n        this.type === StaveConnector.type.THIN_DOUBLE\n      );\n\n      if (isRightSidedConnector){\n        topX = this.top_stave.getX() + this.top_stave.width;\n      }\n\n      var attachment_height = botY - topY;\n      switch (this.type) {\n        case StaveConnector.type.SINGLE:\n          width = 1;\n          break;\n        case StaveConnector.type.SINGLE_LEFT:\n          width = 1;\n          break;\n        case StaveConnector.type.SINGLE_RIGHT:\n          width = 1;\n          break;\n        case StaveConnector.type.DOUBLE:\n          topX -= (this.width + 2);\n          break;\n        case StaveConnector.type.BRACE:\n          width = 12;\n          // May need additional code to draw brace\n          var x1 = this.top_stave.getX() - 2;\n          var y1 = topY;\n          var x3 = x1;\n          var y3 = botY;\n          var x2 = x1 - width;\n          var y2 = y1 + attachment_height/2.0;\n          var cpx1 = x2 - (0.90 * width);\n          var cpy1 = y1 + (0.2 * attachment_height);\n          var cpx2 = x1 + (1.10 * width);\n          var cpy2 = y2 - (0.135 * attachment_height);\n          var cpx3 = cpx2;\n          var cpy3 = y2 + (0.135 * attachment_height);\n          var cpx4 = cpx1;\n          var cpy4 = y3 - (0.2 * attachment_height);\n          var cpx5 = x2 - width;\n          var cpy5 = cpy4;\n          var cpx6 = x1 + (0.40 * width);\n          var cpy6 = y2 + (0.135 * attachment_height);\n          var cpx7 = cpx6;\n          var cpy7 = y2 - (0.135 * attachment_height);\n          var cpx8 = cpx5;\n          var cpy8 = cpy1;\n          this.ctx.beginPath();\n          this.ctx.moveTo(x1, y1);\n          this.ctx.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, x2, y2);\n          this.ctx.bezierCurveTo(cpx3, cpy3, cpx4, cpy4, x3, y3);\n          this.ctx.bezierCurveTo(cpx5, cpy5, cpx6, cpy6, x2, y2);\n          this.ctx.bezierCurveTo(cpx7, cpy7, cpx8, cpy8, x1, y1);\n          this.ctx.fill();\n          this.ctx.stroke();\n          break;\n        case StaveConnector.type.BRACKET:\n          topY -= 4;\n          botY += 4;\n          attachment_height = botY - topY;\n          Vex.Flow.renderGlyph(this.ctx, topX - 5, topY - 3, 40, \"v1b\", true);\n          Vex.Flow.renderGlyph(this.ctx, topX - 5, botY + 3, 40, \"v10\", true);\n          topX -= (this.width + 2);\n          break;\n        case StaveConnector.type.BOLD_DOUBLE_LEFT:\n          drawBoldDoubleLine(this.ctx, this.type, topX + this.x_shift, topY, botY);\n          break;\n        case StaveConnector.type.BOLD_DOUBLE_RIGHT:\n          drawBoldDoubleLine(this.ctx, this.type, topX, topY, botY);\n          break;\n        case StaveConnector.type.THIN_DOUBLE:\n          width = 1;\n          break;\n      }\n\n      if (this.type !== StaveConnector.type.BRACE &&\n        this.type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n        this.type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n        this.ctx.fillRect(topX , topY, width, attachment_height);\n      }\n\n      // If the connector is a thin double barline, draw the paralell line\n      if (this.type === StaveConnector.type.THIN_DOUBLE) {\n        this.ctx.fillRect(topX - 3, topY, width, attachment_height);\n      }\n\n      // Add stave connector text\n      if (this.text !== undefined) {\n        this.ctx.save();\n        this.ctx.lineWidth = 2;\n        this.ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        var text_width = this.ctx.measureText(\"\" + this.text).width;\n\n        var x = this.top_stave.getX() - text_width - 24 + this.text_options.shift_x;\n        var y = (this.top_stave.getYForLine(0) + this.bottom_stave.getBottomLineY()) / 2 +\n          this.text_options.shift_y;\n\n        this.ctx.fillText(\"\" + this.text, x, y + 4);\n        this.ctx.restore();\n      }\n    }\n  };\n\n  function drawBoldDoubleLine(ctx, type, topX, topY, botY){\n    if (type !== StaveConnector.type.BOLD_DOUBLE_LEFT &&\n        type !== StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n      throw Vex.RERR(\"InvalidConnector\",\n        \"A REPEAT_BEGIN or REPEAT_END type must be provided.\");\n    }\n\n    var x_shift = 3;\n    var variableWidth = 3.5; // Width for avoiding anti-aliasing width issues\n    var thickLineOffset = 2; // For aesthetics\n\n    if (type === StaveConnector.type.BOLD_DOUBLE_RIGHT) {\n      x_shift = -5; // Flips the side of the thin line\n      variableWidth = 3;\n    }\n\n    // Thin line\n    ctx.fillRect(topX + x_shift, topY, 1, botY - topY);\n    // Thick line\n    ctx.fillRect(topX - thickLineOffset, topY, variableWidth, botY - topY);\n  }\n\n  return StaveConnector;\n}());\n// Vex Flow\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nVex.Flow.TabStave = (function() {\n  function TabStave(x, y, width, options) {\n    if (arguments.length > 0) this.init(x, y, width, options);\n  }\n\n  Vex.Inherit(TabStave, Vex.Flow.Stave, {\n    init: function(x, y, width, options) {\n      var tab_options = {\n        spacing_between_lines_px: 13,\n        num_lines: 6,\n        top_text_position: 1\n      };\n\n      Vex.Merge(tab_options, options);\n      TabStave.superclass.init.call(this, x, y, width, tab_options);\n    },\n\n    getYForGlyphs: function() {\n      return this.getYForLine(2.5);\n    },\n\n    addTabGlyph: function() {\n      var glyphScale;\n      var glyphOffset;\n\n      switch(this.options.num_lines) {\n        case 8:\n          glyphScale = 55;\n          glyphOffset = 14;\n          break;\n        case 7:\n          glyphScale = 47;\n          glyphOffset = 8;\n          break;\n        case 6:\n          glyphScale = 40;\n          glyphOffset = 1;\n          break;\n        case 5:\n          glyphScale = 30;\n          glyphOffset = -6;\n          break;\n        case 4:\n          glyphScale = 23;\n          glyphOffset = -12;\n          break;\n      }\n\n      var tabGlyph = new Vex.Flow.Glyph(\"v2f\", glyphScale);\n      tabGlyph.y_shift = glyphOffset;\n      this.addGlyph(tabGlyph);\n      return this;\n    }\n  });\n\n  return TabStave;\n}());\n// Vex Flow\n// Copyright Mohit Cheppudira <mohit@muthanna.com>\n//\n// A formatter for abstract tickable objects, such as notes, chords,\n// tabs, etc.\n\n/** @constructor */\nVex.Flow.TickContext = (function() {\n  function TickContext() {\n    this.init();\n  }\n\n  TickContext.prototype = {\n    init: function() {\n      this.currentTick = new Vex.Flow.Fraction(0, 1);\n      this.maxTicks = new Vex.Flow.Fraction(0, 1);\n      this.minTicks = null;\n      this.width = 0;\n      this.padding = 3;     // padding on each side (width += padding * 2)\n      this.pixelsUsed = 0;\n      this.x = 0;\n      this.tickables = [];   // Notes, tabs, chords, lyrics.\n      this.notePx = 0;       // width of widest note in this context\n      this.extraLeftPx = 0;  // Extra left pixels for modifers & displace notes\n      this.extraRightPx = 0; // Extra right pixels for modifers & displace notes\n      this.align_center = false;\n      \n      this.tContexts = [];   // Parent array of tick contexts\n\n      // Ignore this tick context for formatting and justification\n      this.ignore_ticks = true;\n      this.preFormatted = false;\n      this.postFormatted = false;\n      this.context = null; // Rendering context\n    },\n\n    setContext: function(context) { this.context = context; return this; },\n    getContext: function() { return this.context; },\n    shouldIgnoreTicks: function() { return this.ignore_ticks; },\n    getWidth: function() { return this.width + (this.padding * 2); },\n    getX: function() { return this.x; },\n    setX: function(x) { this.x = x; return this; },\n    getPixelsUsed: function() { return this.pixelsUsed; },\n    setPixelsUsed: function(pixelsUsed) { this.pixelsUsed = pixelsUsed; return this; },\n    setPadding: function(padding) { this.padding = padding; return this; },\n    getMaxTicks: function() { return this.maxTicks; },\n    getMinTicks: function() { return this.minTicks; },\n    getTickables: function() { return this.tickables; },\n    \n    getCenterAlignedTickables: function() {\n      return this.tickables.filter(function(tickable) {\n        return tickable.isCenterAligned();\n      });\n    },\n\n    // Get widths context, note and left/right modifiers for formatting\n    getMetrics: function() {\n      return { width: this.width, notePx: this.notePx,\n               extraLeftPx: this.extraLeftPx, extraRightPx: this.extraRightPx };\n    },\n\n    getCurrentTick: function() { return this.currentTick; },\n    setCurrentTick: function(tick) {\n      this.currentTick = tick;\n      this.preFormatted = false;\n    },\n\n    // Get left & right pixels used for modifiers\n    getExtraPx: function() {\n      var left_shift = 0;\n      var right_shift = 0;\n      var extraLeftPx = 0;\n      var extraRightPx = 0;\n      for (var i = 0; i < this.tickables.length; i++) {\n        extraLeftPx = Math.max(this.tickables[i].extraLeftPx, extraLeftPx);\n        extraRightPx = Math.max(this.tickables[i].extraRightPx, extraRightPx);\n        var mContext = this.tickables[i].modifierContext;\n        if (mContext && mContext != null) {\n          left_shift = Math.max( left_shift, mContext.state.left_shift);\n          right_shift = Math.max( right_shift, mContext.state.right_shift);\n        }\n      }\n      return { left: left_shift, right: right_shift,\n               extraLeft: extraLeftPx, extraRight: extraRightPx };\n    },\n\n    addTickable: function(tickable) {\n      if (!tickable) {\n        throw new Vex.RERR(\"BadArgument\", \"Invalid tickable added.\");\n      }\n\n      if (!tickable.shouldIgnoreTicks()) {\n        this.ignore_ticks = false;\n\n        var ticks = tickable.getTicks();\n\n        if (ticks.greaterThan(this.maxTicks)) {\n          this.maxTicks = ticks.clone();\n        }\n\n        if (this.minTicks == null) {\n          this.minTicks = ticks.clone();\n        } else if (ticks.lessThan(this.minTicks)) {\n          this.minTicks = ticks.clone();\n        }\n      }\n\n      tickable.setTickContext(this);\n      this.tickables.push(tickable);\n      this.preFormatted = false;\n      return this;\n    },\n\n    preFormat: function() {\n      if (this.preFormatted) return;\n\n      for (var i = 0; i < this.tickables.length; ++i) {\n        var tickable = this.tickables[i];\n        tickable.preFormat();\n        var metrics = tickable.getMetrics();\n\n        // Maintain max extra pixels from all tickables in the context\n        this.extraLeftPx = Math.max(this.extraLeftPx,\n                                    metrics.extraLeftPx + metrics.modLeftPx);\n        this.extraRightPx = Math.max(this.extraRightPx,\n                                     metrics.extraRightPx + metrics.modRightPx);\n\n        // Maintain the widest note for all tickables in the context\n        this.notePx = Math.max(this.notePx, metrics.noteWidth);\n\n        // Recalculate the tick context total width\n        this.width = this.notePx +\n                     this.extraLeftPx +\n                     this.extraRightPx;\n      }\n\n      return this;\n    },\n\n    postFormat: function() {\n      if (this.postFormatted) return this;\n      this.postFormatted = true;\n      return this;\n    }\n  };\n\n  TickContext.getNextContext = function(tContext) {\n    var contexts = tContext.tContexts;\n    var index = contexts.indexOf(tContext);\n\n    return contexts[index+1];\n  };\n\n  return TickContext;\n}());\n\n// Vex Flow\n// Copyright Mohit Cheppudira <mohit@muthanna.com>\n//\n// The tickable interface. Tickables are things that sit on a score and\n// have a duration, i.e., they occupy space in the musical rendering dimension.\n\n/** @constructor */\nVex.Flow.Tickable = (function() {\n  function Tickable() {\n    this.init();\n  }\n\n  Tickable.prototype = {\n    init: function() {\n      this.intrinsicTicks = 0;\n      this.tickMultiplier = new Vex.Flow.Fraction(1, 1);\n      this.ticks = new Vex.Flow.Fraction(0, 1);\n      this.width = 0;\n      this.x_shift = 0; // Shift from tick context\n      this.voice = null;\n      this.tickContext = null;\n      this.modifierContext = null;\n      this.modifiers = [];\n      this.preFormatted = false;\n      this.postFormatted = false;\n      this.tuplet = null;\n\n      this.align_center = false;\n      this.center_x_shift = 0; // Shift from tick context if center aligned\n\n      // This flag tells the formatter to ignore this tickable during\n      // formatting and justification. It is set by tickables such as BarNote.\n      this.ignore_ticks = false;\n      this.context = null;\n    },\n\n    setContext: function(context) { this.context = context; },\n    getBoundingBox: function() { return null; },\n    getTicks: function() { return this.ticks; },\n    shouldIgnoreTicks: function() { return this.ignore_ticks; },\n    getWidth: function() { return this.width; },\n    setXShift: function(x) { this.x_shift = x; },\n    getCenterXShift: function() {\n      if (this.isCenterAligned()) {\n        return this.center_x_shift;\n      }\n\n      return 0;\n    },\n\n    isCenterAligned: function() { return this.align_center; },\n    setCenterAlignment: function(align_center) {\n      this.align_center = align_center;\n      return this;\n    },\n\n    // Every tickable must be associated with a voice. This allows formatters\n    // and preFormatter to associate them with the right modifierContexts.\n    getVoice: function() {\n      if (!this.voice) throw new Vex.RERR(\"NoVoice\", \"Tickable has no voice.\");\n      return this.voice;\n    },\n    setVoice: function(voice) { this.voice = voice; },\n\n    getTuplet: function() { return this.tuplet; },\n    setTuplet: function(tuplet) {\n      // Detach from previous tuplet\n      var noteCount, beatsOccupied;\n\n      if (this.tuplet) {\n        noteCount = this.tuplet.getNoteCount();\n        beatsOccupied = this.tuplet.getBeatsOccupied();\n\n        // Revert old multiplier\n        this.applyTickMultiplier(noteCount, beatsOccupied);\n      }\n\n      // Attach to new tuplet\n      if (tuplet) {\n        noteCount = tuplet.getNoteCount();\n        beatsOccupied = tuplet.getBeatsOccupied();\n\n        this.applyTickMultiplier(beatsOccupied, noteCount);\n      }\n\n      this.tuplet = tuplet;\n\n      return this;\n    },\n\n    /** optional, if tickable has modifiers **/\n    addToModifierContext: function(mc) {\n      this.modifierContext = mc;\n      // Add modifiers to modifier context (if any)\n      this.preFormatted = false;\n    },\n\n    /** optional, if tickable has modifiers **/\n    addModifier: function(mod) {\n      this.modifiers.push(mod);\n      this.preFormatted = false;\n      return this;\n    },\n\n    setTickContext: function(tc) {\n      this.tickContext = tc;\n      this.preFormatted = false;\n    },\n\n    preFormat: function() {\n      if (this.preFormatted) return;\n\n      this.width = 0;\n      if (this.modifierContext) {\n        this.modifierContext.preFormat();\n        this.width += this.modifierContext.getWidth();\n      }\n    },\n\n    postFormat: function() {\n      if (this.postFormatted) return;\n      this.postFormatted = true;\n      return this;\n    },\n\n    getIntrinsicTicks: function() {\n      return this.intrinsicTicks;\n    },\n    setIntrinsicTicks: function(intrinsicTicks) {\n      this.intrinsicTicks = intrinsicTicks;\n      this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    },\n\n    getTickMultiplier: function() {\n      return this.tickMultiplier;\n    },\n    applyTickMultiplier: function(numerator, denominator) {\n      this.tickMultiplier.multiply(numerator, denominator);\n      this.ticks = this.tickMultiplier.clone().multiply(this.intrinsicTicks);\n    },\n    setDuration: function(duration) {\n      var ticks = duration.numerator * (Vex.Flow.RESOLUTION / duration.denominator);\n      this.ticks = this.tickMultiplier.clone().multiply(ticks);\n      this.intrinsicTicks = this.ticks.value();\n    }\n  };\n\n  return Tickable;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements an abstract interface for notes and chords that\n// are rendered on a stave. Notes have some common properties: All of them\n// have a value (e.g., pitch, fret, etc.) and a duration (quarter, half, etc.)\n//\n// Some notes have stems, heads, dots, etc. Most notational elements that\n// surround a note are called *modifiers*, and every note has an associated\n// array of them. All notes also have a rendering context and belong to a stave.\n\nVex.Flow.Note = (function() {\n  // To create a new note you need to provide a `note_struct`, which consists\n  // of the following fields:\n  //\n  // `type`: The note type (e.g., `r` for rest, `s` for slash notes, etc.)\n  // `dots`: The number of dots, which affects the duration.\n  // `duration`: The time length (e.g., `q` for quarter, `h` for half, `8` for eighth etc.)\n  //\n  // The range of values for these parameters are available in `src/tables.js`.\n  function Note(note_struct) {\n    if (arguments.length > 0) this.init(note_struct);\n  }\n  Note.CATEGORY = \"note\";\n\n  // ## Prototype Methods\n  //\n  // Every note is a tickable, i.e., it can be mutated by the `Formatter` class for\n  // positioning and layout.\n  Vex.Inherit(Note, Vex.Flow.Tickable, {\n    // See constructor above for how to create a note.\n    init: function(note_struct) {\n      Note.superclass.init.call(this);\n\n      if (!note_struct) {\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Note must have valid initialization data to identify \" +\n            \"duration and type.\");\n      }\n\n      // Parse `note_struct` and get note properties.\n      var initData = Vex.Flow.parseNoteData(note_struct);\n      if (!initData) {\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Invalid note initialization object: \" + JSON.stringify(note_struct));\n      }\n\n      // Set note properties from parameters.\n      this.duration = initData.duration;\n      this.dots = initData.dots;\n      this.noteType = initData.type;\n\n      if (note_struct.duration_override) {\n        // Custom duration\n        this.setDuration(note_struct.duration_override);\n      } else {\n        // Default duration\n        this.setIntrinsicTicks(initData.ticks);\n      }\n\n      this.modifiers = [];\n\n      // Get the glyph code for this note from the font.\n      this.glyph = Vex.Flow.durationToGlyph(this.duration, this.noteType);\n\n      if (this.positions &&\n          (typeof(this.positions) != \"object\" || !this.positions.length)) {\n        throw new Vex.RuntimeError(\n          \"BadArguments\", \"Note keys must be array type.\");\n      }\n\n      // Note to play for audio players.\n      this.playNote = null;\n\n      // Positioning contexts used by the Formatter.\n      this.tickContext = null;    // The current tick context.\n      this.modifierContext = null;\n      this.ignore_ticks = false;\n\n      // Positioning variables\n      this.width = 0;             // Width in pixels calculated after preFormat\n      this.extraLeftPx = 0;       // Extra room on left for offset note head\n      this.extraRightPx = 0;      // Extra room on right for offset note head\n      this.x_shift = 0;           // X shift from tick context X\n      this.left_modPx = 0;        // Max width of left modifiers\n      this.right_modPx = 0;       // Max width of right modifiers\n      this.voice = null;          // The voice that this note is in\n      this.preFormatted = false;  // Is this note preFormatted?\n      this.ys = [];               // list of y coordinates for each note\n                                  // we need to hold on to these for ties and beams.\n\n      if (note_struct.align_center) {\n        this.setCenterAlignment(note_struct.align_center);\n      }\n\n      // The render surface.\n      this.context = null;\n      this.stave = null;\n      this.render_options = {\n        annotation_spacing: 5,\n        stave_padding: 12\n      };\n    },\n\n    // Get and set the play note, which is arbitrary data that can be used by an\n    // audio player.\n    getPlayNote: function() { return this.playNote; },\n    setPlayNote: function(note) { this.playNote = note; return this; },\n\n    // Don't play notes by default, call them rests. This is also used by things like\n    // beams and dots for positioning.\n    isRest: function() { return false; },\n\n    // TODO(0xfe): Why is this method here?\n    addStroke: function(index, stroke) {\n      stroke.setNote(this);\n      stroke.setIndex(index);\n      this.modifiers.push(stroke);\n      this.setPreFormatted(false);\n      return this;\n    },\n\n    // Get and set the target stave.\n    getStave: function() { return this.stave; },\n    setStave: function(stave) {\n      this.stave = stave;\n      this.setYs([stave.getYForLine(0)]); // Update Y values if the stave is changed.\n      this.context = this.stave.context;\n      return this;\n    },\n\n\n    // `Note` is not really a modifier, but is used in\n    // a `ModifierContext`.\n    getCategory: function() { return this.constructor.CATEGORY; },\n\n    // Set the rendering context for the note.\n    setContext: function(context) { this.context = context; return this; },\n\n    // Get and set spacing to the left and right of the notes.\n    getExtraLeftPx: function() { return this.extraLeftPx; },\n    getExtraRightPx: function() { return this.extraRightPx; },\n    setExtraLeftPx: function(x) { this.extraLeftPx = x; return this; },\n    setExtraRightPx: function(x) { this.extraRightPx = x; return this; },\n\n    // Returns true if this note has no duration (e.g., bar notes, spacers, etc.)\n    shouldIgnoreTicks: function() { return this.ignore_ticks; },\n\n    // Get the stave line number for the note.\n    getLineNumber: function() { return 0; },\n\n    // Get the stave line number for rest.\n    getLineForRest: function() { return 0; },\n\n    // Get the glyph associated with this note.\n    getGlyph: function() { return this.glyph; },\n\n    // Set and get Y positions for this note. Each Y value is associated with\n    // an individual pitch/key within the note/chord.\n    setYs: function(ys) { this.ys = ys; return this; },\n    getYs: function() {\n      if (this.ys.length === 0) throw new Vex.RERR(\"NoYValues\",\n          \"No Y-values calculated for this note.\");\n      return this.ys;\n    },\n\n    // Get the Y position of the space above the stave onto which text can\n    // be rendered.\n    getYForTopText: function(text_line) {\n      if (!this.stave) throw new Vex.RERR(\"NoStave\",\n          \"No stave attached to this note.\");\n      return this.stave.getYForTopText(text_line);\n    },\n\n    // Get a `BoundingBox` for this note.\n    getBoundingBox: function() { return null; },\n\n    // Returns the voice that this note belongs in.\n    getVoice: function() {\n      if (!this.voice) throw new Vex.RERR(\"NoVoice\", \"Note has no voice.\");\n      return this.voice;\n    },\n\n    // Attach this note to `voice`.\n    setVoice: function(voice) {\n      this.voice = voice;\n      this.preFormatted = false;\n      return this;\n    },\n\n    // Get and set the `TickContext` for this note.\n    getTickContext: function() { return this.tickContext; },\n    setTickContext: function(tc) {\n      this.tickContext = tc;\n      this.preFormatted = false;\n      return this;\n    },\n\n    // Accessors for the note type.\n    getDuration: function() { return this.duration; },\n    isDotted: function() { return (this.dots > 0); },\n    hasStem: function() { return false; },\n    getDots: function() { return this.dots; },\n    getNoteType: function() { return this.noteType; },\n    setBeam: function() { return this; }, // ignore parameters\n\n    // Attach this note to a modifier context.\n    setModifierContext: function(mc) { this.modifierContext = mc; return this; },\n\n    // Attach a modifier to this note.\n    addModifier: function(modifier, index) {\n      modifier.setNote(this);\n      modifier.setIndex(index || 0);\n      this.modifiers.push(modifier);\n      this.setPreFormatted(false);\n      return this;\n    },\n\n    // Get the coordinates for where modifiers begin.\n    getModifierStartXY: function() {\n      if (!this.preFormatted) throw new Vex.RERR(\"UnformattedNote\",\n          \"Can't call GetModifierStartXY on an unformatted note\");\n      return {x: this.getAbsoluteX(), y: this.ys[0]};\n    },\n\n    // Get bounds and metrics for this note.\n    //\n    // Returns a struct with fields:\n    // `width`: The total width of the note (including modifiers.)\n    // `noteWidth`: The width of the note head only.\n    // `left_shift`: The horizontal displacement of the note.\n    // `modLeftPx`: Start `X` for left modifiers.\n    // `modRightPx`: Start `X` for right modifiers.\n    // `extraLeftPx`: Extra space on left of note.\n    // `extraRightPx`: Extra space on right of note.\n    getMetrics: function() {\n      if (!this.preFormatted) throw new Vex.RERR(\"UnformattedNote\",\n          \"Can't call getMetrics on an unformatted note.\");\n      var modLeftPx = 0;\n      var modRightPx = 0;\n      if (this.modifierContext != null) {\n        modLeftPx = this.modifierContext.state.left_shift;\n        modRightPx = this.modifierContext.state.right_shift;\n      }\n\n      var width = this.getWidth();\n      return { width: width,\n               noteWidth: width -\n                          modLeftPx - modRightPx -  // used by accidentals and modifiers\n                          this.extraLeftPx - this.extraRightPx,\n               left_shift: this.x_shift, // TODO(0xfe): Make style consistent\n               modLeftPx: modLeftPx,\n               modRightPx: modRightPx,\n               extraLeftPx: this.extraLeftPx,\n               extraRightPx: this.extraRightPx };\n    },\n\n    // Get and set width of note. Used by the formatter for positioning.\n    setWidth: function(width) { this.width = width; },\n    getWidth: function() {\n      if (!this.preFormatted) throw new Vex.RERR(\"UnformattedNote\",\n          \"Can't call GetWidth on an unformatted note.\");\n      return this.width +\n        (this.modifierContext ?  this.modifierContext.getWidth() : 0);\n    },\n\n    // Displace note by `x` pixels.\n    setXShift: function(x) {\n      this.x_shift = x;\n      return this;\n    },\n\n    // Get `X` position of this tick context.\n    getX: function() {\n      if (!this.tickContext) throw new Vex.RERR(\"NoTickContext\",\n          \"Note needs a TickContext assigned for an X-Value\");\n      return this.tickContext.getX() + this.x_shift;\n    },\n\n    // Get the absolute `X` position of this note relative to the stave.\n    getAbsoluteX: function() {\n      if (!this.tickContext) throw new Vex.RERR(\"NoTickContext\",\n          \"Note needs a TickContext assigned for an X-Value\");\n\n      // Position note to left edge of tick context.\n      var x = this.tickContext.getX();\n      if (this.stave) {\n        x += this.stave.getNoteStartX() + this.render_options.stave_padding;\n      }\n\n      if (this.isCenterAligned()){\n        x += this.getCenterXShift();\n      }\n\n      return x;\n    },\n\n    setPreFormatted: function(value) {\n      this.preFormatted = value;\n\n      // Maintain the width of left and right modifiers in pixels.\n      if (this.preFormatted) {\n        var extra = this.tickContext.getExtraPx();\n        this.left_modPx = Math.max(this.left_modPx, extra.left);\n        this.right_modPx = Math.max(this.right_modPx, extra.right);\n      }\n    }\n  });\n\n  return Note;\n}());\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `NoteHeads`. `NoteHeads` are typically not manipulated\n// directly, but used internally in `StaveNote`.\n//\n// See `tests/notehead_tests.js` for usage examples.\nVex.Flow.NoteHead = (function() {\n  var NoteHead = function(head_options) {\n    if (arguments.length > 0) this.init(head_options);\n  };\n\n  // To enable logging for this class. Set `Vex.Flow.NoteHead.DEBUG` to `true`.\n  function L() { if (NoteHead.DEBUG) Vex.L(\"Vex.Flow.NoteHead\", arguments); }\n\n\n  // Draw slashnote head manually. No glyph exists for this.\n  //\n  // Parameters:\n  // * `ctx`: the Canvas context\n  // * `duration`: the duration of the note. ex: \"4\"\n  // * `x`: the x coordinate to draw at\n  // * `y`: the y coordinate to draw at\n  // * `stem_direction`: the direction of the stem\n  function drawSlashNoteHead(ctx, duration, x, y, stem_direction) {\n    var width = 15 + (Vex.Flow.STEM_WIDTH / 2);\n    ctx.save();\n    ctx.setLineWidth(Vex.Flow.STEM_WIDTH);\n\n    var fill = false;\n\n    if (Vex.Flow.durationToNumber(duration) > 2) {\n      fill = true;\n    }\n\n    if (!fill) x -= (Vex.Flow.STEM_WIDTH / 2) * stem_direction;\n\n    ctx.beginPath();\n    ctx.moveTo(x, y + 11);\n    ctx.lineTo(x, y + 1);\n    ctx.lineTo(x + width, y - 10);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x, y + 11);\n    ctx.closePath();\n\n    if (fill) {\n       ctx.fill();\n    } else {\n       ctx.stroke();\n    }\n\n    if (Vex.Flow.durationToFraction(duration).equals(0.5)) {\n      var breve_lines = [-3, -1, width + 1, width + 3];\n      for(var i=0; i<breve_lines.length; i++){\n          ctx.beginPath();\n          ctx.moveTo(x + breve_lines[i], y - 10);\n          ctx.lineTo(x + breve_lines[i], y + 11);\n          ctx.stroke();\n      }\n    }\n\n    ctx.restore();\n  }\n\n  // ## Prototype Methods\n  Vex.Inherit(NoteHead, Vex.Flow.Note, {\n    init: function(head_options) {\n      NoteHead.superclass.init.call(this, head_options);\n      this.index = head_options.index;\n      this.x = head_options.x || 0;\n      this.y = head_options.y || 0;\n      this.note_type = head_options.note_type;\n      this.duration = head_options.duration;\n      this.displaced = head_options.displaced || false;\n      this.stem_direction = head_options.stem_direction || Vex.Flow.StaveNote.STEM_UP;\n      this.line = head_options.line;\n\n      // Get glyph code based on duration and note type. This could be\n      // regular notes, rests, or other custom codes.\n      this.glyph = Vex.Flow.durationToGlyph(this.duration, this.note_type);\n      if (!this.glyph) {\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"No glyph found for duration '\" + this.duration +\n            \"' and type '\" + this.note_type + \"'\");\n      }\n\n      this.glyph_code = this.glyph.code_head;\n      this.x_shift = head_options.x_shift;\n      if (head_options.custom_glyph_code) {\n        this.custom_glyph = true;\n        this.glyph_code = head_options.custom_glyph_code;\n      }\n\n      this.context = null;\n      this.style = head_options.style;\n      this.slashed = head_options.slashed;\n\n      Vex.Merge(this.render_options, {\n        glyph_font_scale: 35, // font size for note heads\n        stroke_px: 3         // number of stroke px to the left and right of head\n      });\n\n      if (head_options.glyph_font_scale) {\n        this.render_options.glyph_font_scale = head_options.glyph_font_scale;\n      }\n\n      this.setWidth(this.glyph.head_width);\n    },\n\n    // Get the `ModifierContext` category\n    getCategory: function() { return \"notehead\"; },\n\n    // Set the Cavnas context for drawing\n    setContext: function(context) { this.context = context; return this;},\n\n    // Get the width of the notehead\n    getWidth: function() { return this.width; },\n\n    // Determine if the notehead is displaced\n    isDisplaced: function() { return this.displaced === true; },\n\n    // Get/set the notehead's style\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    getStyle: function() { return this.style; },\n    setStyle: function(style) { this.style = style; return this; },\n\n    // Get the glyph data\n    getGlyph: function(){ return this.glyph; },\n\n    // Set the X coordinate\n    setX: function(x){ this.x = x; return this; },\n\n    // get/set the Y coordinate\n    getY: function() { return this.y; },\n    setY: function(y) { this.y = y;  return this; },\n\n    // Get/set the stave line the notehead is placed on\n    getLine: function() { return this.line; },\n    setLine: function(line) { this.line = line; return this; },\n\n    // Get the canvas `x` coordinate position of the notehead.\n    getAbsoluteX: function() {\n      var getAbsoluteX = NoteHead.superclass.getAbsoluteX;\n\n      // If the note has not been preformatted, then get the static x value\n      // Otherwise, it's been formatted and we should use it's x value relative\n      // to its tick context\n      var x = !this.preFormatted ? this.x : getAbsoluteX.call(this);\n\n      return x + (this.displaced ? this.width * this.stem_direction : 0);\n    },\n\n    // Get the `BoundingBox` for the `NoteHead`\n    getBoundingBox: function() {\n      if (!this.preFormatted) throw new Vex.RERR(\"UnformattedNote\",\n          \"Can't call getBoundingBox on an unformatted note.\");\n\n      var spacing = this.stave.getSpacingBetweenLines();\n      var half_spacing = spacing/2;\n      var min_y = this.y - half_spacing;\n\n      return new Vex.Flow.BoundingBox(this.getAbsoluteX(), min_y, this.width, spacing);\n    },\n\n    // Apply current style to Canvas `context`\n    applyStyle: function(context) {\n      var style = this.getStyle();\n      if (style.shadowColor) context.setShadowColor(style.shadowColor);\n      if (style.shadowBlur) context.setShadowBlur(style.shadowBlur);\n      if (style.fillStyle) context.setFillStyle(style.fillStyle);\n      if (style.strokeStyle) context.setStrokeStyle(style.strokeStyle);\n      return this;\n    },\n\n    // Set notehead to a provided `stave`\n    setStave: function(stave){\n      var line = this.getLine();\n\n      this.stave = stave;\n      this.setY(stave.getYForNote(line));\n      this.context = this.stave.context;\n      return this;\n    },\n\n    // Pre-render formatting\n    preFormat: function() {\n      if (this.preFormatted) return this;\n\n      var glyph = this.getGlyph();\n      var width = glyph.head_width + this.extraLeftPx + this.extraRightPx;\n\n      this.setWidth(width);\n      this.setPreFormatted(true);\n      return this;\n    },\n\n    // Draw the notehead\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n\n      var ctx = this.context;\n      var head_x = this.getAbsoluteX();\n      var y = this.y;\n\n      L(\"Drawing note head '\", this.note_type, this.duration, \"' at\", head_x, y);\n\n      // Begin and end positions for head.\n      var stem_direction = this.stem_direction;\n      var glyph_font_scale = this.render_options.glyph_font_scale;\n\n      var line = this.line;\n\n      // If note above/below the staff, draw the small staff\n      if (line <= 0 || line >= 6) {\n        var line_y = y;\n        var floor = Math.floor(line);\n        if (line < 0 && floor - line == -0.5)\n          line_y -= 5;\n        else if (line > 6 &&  floor - line == -0.5)\n          line_y += 5;\n        if (this.note_type != 'r') {\n          ctx.fillRect(\n            head_x - this.render_options.stroke_px, line_y,\n            (this.getGlyph().head_width) +\n            (this.render_options.stroke_px * 2), 1);    \n        }        \n      }\n\n      if (this.note_type == \"s\") {\n        drawSlashNoteHead(ctx, this.duration,\n          head_x, y, stem_direction);\n      } else {\n        if (this.style) {\n          ctx.save();\n          this.applyStyle(ctx);\n          Vex.Flow.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n          ctx.restore();\n        } else {\n          Vex.Flow.renderGlyph(ctx, head_x, y, glyph_font_scale, this.glyph_code);\n        }\n      }\n    }\n  });\n\n  return NoteHead;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Stem` object. Generally this object is handled\n// by its parent `StemmableNote`.\n//\nVex.Flow.Stem = (function() {\n  var Stem = function(options) {\n    if (arguments.length > 0) this.init(options);\n  };\n\n  // To enable logging for this class. Set `Vex.Flow.Stem.DEBUG` to `true`.\n  function L() { if (Stem.DEBUG) Vex.L(\"Vex.Flow.Stem\", arguments); }\n\n  // Stem directions\n  Stem.UP = 1;\n  Stem.DOWN = -1;\n\n  // Theme\n  Stem.WIDTH = Vex.Flow.STEM_WIDTH;\n  Stem.HEIGHT = Vex.Flow.STEM_HEIGHT;\n\n  // ## Prototype Methods\n  Stem.prototype = {\n    init: function(options) {\n      // Default notehead x bounds\n      this.x_begin = options.x_begin || 0;\n      this.x_end = options.x_end || 0;\n\n      // Y bounds for top/bottom most notehead\n      this.y_top = options.y_top || 0;\n      this.y_bottom = options.y_bottom || 0;\n\n      // Stem base extension\n      this.y_extend = options.y_extend || 0;\n      // Stem top extension\n      this.stem_extension = options.stem_extension || 0;\n\n      // Direction of the stem\n      this.stem_direction = options.stem_direction || 0;\n\n      // Flag to override all draw calls\n      this.hide = false;\n    },\n\n    // Set the x bounds for the default notehead\n    setNoteHeadXBounds: function(x_begin, x_end) {\n      this.x_begin = x_begin;\n      this.x_end = x_end;\n      return this;\n    },\n\n    // Set the direction of the stem in relation to the noteheads\n    setDirection: function(direction){ this.stem_direction = direction; },\n\n    // Set the extension for the stem, generally for flags or beams\n    setExtension: function(ext) { this.stem_extension = ext; },\n\n    // The the y bounds for the top and bottom noteheads\n    setYBounds: function(y_top, y_bottom) {\n      this.y_top = y_top;\n      this.y_bottom = y_bottom;\n    },\n\n    // The category of the object\n    getCategory: function() { return \"stem\"; },\n\n    // Set the canvas context to render on\n    setContext: function(context) { this.context = context; return this;},\n\n    // Gets the entire height for the stem\n    getHeight: function() {\n      return ((this.y_bottom - this.y_top) * this.stem_direction) +\n             ((Stem.HEIGHT + this.stem_extension) * this.stem_direction);\n    },\n\n    getBoundingBox: function() {\n      throw new Vex.RERR(\"NotImplemented\", \"getBoundingBox() not implemented.\");\n    },\n\n    // Get the y coordinates for the very base of the stem to the top of\n    // the extension\n    getExtents: function() {\n      var ys = [this.y_top, this.y_bottom];\n\n      var top_pixel = this.y_top;\n      var base_pixel = this.y_bottom;\n      var stem_height = Stem.HEIGHT + this.stem_extension;\n\n      for (var i = 0; i < ys.length; ++i) {\n        var stem_top = ys[i] + (stem_height * -this.stem_direction);\n\n        if (this.stem_direction == Stem.DOWN) {\n          top_pixel = (top_pixel > stem_top) ? top_pixel : stem_top;\n          base_pixel = (base_pixel < ys[i]) ? base_pixel : ys[i];\n        } else {\n          top_pixel = (top_pixel < stem_top) ? top_pixel : stem_top;\n          base_pixel = (base_pixel > ys[i]) ? base_pixel : ys[i];\n        }\n      }\n\n      return { topY: top_pixel, baseY: base_pixel };\n    },\n\n    // Render the stem onto the canvas\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n\n      if (this.hide) return;\n\n      var ctx = this.context;\n      var stem_x, stem_y;\n      var stem_direction = this.stem_direction;\n\n      if (stem_direction == Stem.DOWN) {\n        // Down stems are rendered to the left of the head.\n        stem_x = this.x_begin + (Stem.WIDTH / 2);\n        stem_y = this.y_top + 2;\n      } else {\n        // Up stems are rendered to the right of the head.\n        stem_x = this.x_end + (Stem.WIDTH / 2);\n        stem_y = this.y_bottom - 2;\n      }\n\n      stem_y += this.y_extend * stem_direction;\n\n      L(\"Rendering stem - \", \"Top Y: \", this.y_top, \"Bottom Y: \", this.y_bottom);\n\n      // Draw the stem\n      ctx.save();\n      ctx.beginPath();\n      ctx.setLineWidth(Stem.WIDTH);\n      ctx.moveTo(stem_x, stem_y);\n      ctx.lineTo(stem_x, stem_y - this.getHeight());\n      ctx.stroke();\n      ctx.restore();\n    }\n  };\n\n  return Stem;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `StemmableNote` is an abstract interface for notes with optional stems.\n// Examples of stemmable notes are `StaveNote` and `TabNote`\nVex.Flow.StemmableNote = (function(){\n  var StemmableNote = function(note_struct) {\n    if (arguments.length > 0) this.init(note_struct);\n  };\n\n  // To enable logging for this class. Set `Vex.Flow.StemmableNote.DEBUG` to `true`.\n  function L() { if (StemmableNote.DEBUG) Vex.L(\"Vex.Flow.StemmableNote\", arguments); }\n\n  var Stem = Vex.Flow.Stem;\n\n  Vex.Inherit(StemmableNote, Vex.Flow.Note, {\n    init: function(note_struct){\n      StemmableNote.superclass.init.call(this, note_struct);\n\n      this.stem = null;\n      this.stem_extension_override = null;\n      this.beam = null;\n\n    },\n\n    // Get and set the note's `Stem`\n    getStem: function() {return this.stem; },\n    setStem: function(stem) { this.stem = stem; return this; },\n\n    // Builds and sets a new stem\n    buildStem: function() {\n      var stem = new Stem();\n      this.setStem(stem);\n      return this;\n    },\n\n    // Get the full length of stem\n    getStemLength: function() {\n      return Stem.HEIGHT + this.getStemExtension();\n    },\n\n    // Get the number of beams for this duration\n    getBeamCount: function(){\n      var glyph = this.getGlyph();\n\n      if (glyph) {\n        return glyph.beam_count;\n      } else {\n        return 0;\n      }\n    },\n\n    // Get the minimum length of stem\n    getStemMinumumLength: function() {\n      var frac = Vex.Flow.durationToFraction(this.duration);\n      var length = (frac.value() <= 1) ? 0 : 20;\n      // if note is flagged, cannot shorten beam\n      switch (this.duration) {\n       case \"8\":\n         if (this.beam == null) length = 35;\n         break;\n       case \"16\":\n         if (this.beam == null)\n           length = 35;\n         else\n           length = 25;\n         break;\n       case \"32\":\n         if (this.beam == null)\n           length = 45;\n         else\n           length = 35;\n         break;\n       case \"64\":\n         if (this.beam == null)\n           length = 50;\n         else\n           length = 40;\n         break;\n       case \"128\":\n         if (this.beam == null)\n           length = 55;\n         else\n           length = 45;\n      }\n      return length;\n    },\n\n    // Get/set the direction of the stem\n    getStemDirection: function() { return this.stem_direction; },\n    setStemDirection: function(direction) {\n      if (!direction) direction = Stem.UP;\n      if (direction != Stem.UP &&\n          direction != Stem.DOWN) {\n        throw new Vex.RERR(\"BadArgument\", \"Invalid stem direction: \" +\n            direction);\n      }\n\n      this.stem_direction = direction;\n      if (this.stem) {\n        this.stem.setDirection(direction);\n        this.stem.setExtension(this.getStemExtension());\n      }\n\n      this.beam = null;\n      if (this.preFormatted) {\n        this.preFormat();\n      }\n      return this;\n    },\n\n    // Get the `x` coordinate of the stem\n    getStemX: function() {\n      var x_begin = this.getAbsoluteX() + this.x_shift;\n      var x_end = this.getAbsoluteX() + this.x_shift + this.glyph.head_width;\n\n      var stem_x = this.stem_direction == Stem.DOWN ?\n        x_begin : x_end;\n\n      stem_x -= ((Stem.WIDTH / 2) * this.stem_direction);\n\n      return stem_x;\n    },\n\n    // Get the `x` coordinate for the center of the glyph.\n    // Used for `TabNote` stems and stemlets over rests\n    getCenterGlyphX: function(){\n      return this.getAbsoluteX() + this.x_shift + (this.glyph.head_width / 2);\n    },\n\n    // Get the stem extension for the current duration\n    getStemExtension: function(){\n      var glyph = this.getGlyph();\n\n      if (this.stem_extension_override != null) {\n        return this.stem_extension_override;\n      }\n\n      if (glyph) {\n        return this.getStemDirection() === 1 ? glyph.stem_up_extension :\n          glyph.stem_down_extension;\n      }\n\n      return 0;\n    },\n\n    // Set the stem length to a specific. Will override the default length.\n    setStemLength: function(height) {\n      this.stem_extension_override = (height - Stem.HEIGHT);\n      return this;\n    },\n\n    // Get the top and bottom `y` values of the stem.\n    getStemExtents: function() {\n      if (!this.ys || this.ys.length === 0) throw new Vex.RERR(\"NoYValues\",\n          \"Can't get top stem Y when note has no Y values.\");\n\n      var top_pixel = this.ys[0];\n      var base_pixel = this.ys[0];\n      var stem_height = Stem.HEIGHT + this.getStemExtension();\n\n      for (var i = 0; i < this.ys.length; ++i) {\n        var stem_top = this.ys[i] + (stem_height * -this.stem_direction);\n\n        if (this.stem_direction == Stem.DOWN) {\n          top_pixel = (top_pixel > stem_top) ? top_pixel : stem_top;\n          base_pixel = (base_pixel < this.ys[i]) ? base_pixel : this.ys[i];\n        } else {\n          top_pixel = (top_pixel < stem_top) ? top_pixel : stem_top;\n          base_pixel = (base_pixel > this.ys[i]) ? base_pixel : this.ys[i];\n        }\n\n        if(this.noteType == \"s\" || this.noteType == 'x') {\n          top_pixel -= this.stem_direction * 7;\n          base_pixel -= this.stem_direction * 7;\n        }\n      }\n\n      L(\"Stem extents: \", top_pixel, base_pixel);\n      return { topY: top_pixel, baseY: base_pixel };\n    },\n\n    // Sets the current note's beam\n    setBeam: function(beam) { this.beam = beam; return this; },\n\n    // Get the `y` value for the top/bottom modifiers at a specific `text_line`\n    getYForTopText: function(text_line) {\n      var extents = this.getStemExtents();\n      if (this.hasStem()) {\n        return Vex.Min(this.stave.getYForTopText(text_line),\n            extents.topY - (this.render_options.annotation_spacing * (text_line + 1)));\n      } else {\n        return this.stave.getYForTopText(text_line);\n      }\n    },\n    getYForBottomText: function(text_line) {\n      var extents = this.getStemExtents();\n      if (this.hasStem()) {\n        return Vex.Max(this.stave.getYForTopText(text_line),\n          extents.baseY + (this.render_options.annotation_spacing * (text_line)));\n      } else {\n        return this.stave.getYForBottomText(text_line);\n      }\n    },\n\n    // Post format the note\n    postFormat: function() {\n      if (this.beam) {\n        this.beam.postFormat();\n      }\n      this.postFormatted = true;\n      return this;\n    },\n\n    // Render the stem onto the canvas\n    drawStem: function(stem_struct){\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n      \n      this.setStem(new Stem(stem_struct));\n      this.stem.setContext(this.context).draw();\n    }\n  });\n\n  return StemmableNote;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements notes for standard notation. This consists of one or\n// more `NoteHeads`, an optional stem, and an optional flag.\n//\n// *Throughout these comments, a \"note\" refers to the entire `StaveNote`,\n// and a \"key\" refers to a specific pitch/notehead within a note.*\n//\n// See `tests/stavenote_tests.js` for usage examples.\nVex.Flow.StaveNote = (function() {\n  var StaveNote = function(note_struct) {\n    if (arguments.length > 0) this.init(note_struct);\n  };\n  StaveNote.CATEGORY = \"stavenotes\";\n\n  // To enable logging for this class. Set `Vex.Flow.StaveNote.DEBUG` to `true`.\n  function L() { if (StaveNote.DEBUG) Vex.L(\"Vex.Flow.StaveNote\", arguments); }\n\n  var Stem = Vex.Flow.Stem;\n  var NoteHead = Vex.Flow.NoteHead;\n\n  // Stem directions\n  StaveNote.STEM_UP = Stem.UP;\n  StaveNote.STEM_DOWN = Stem.DOWN;\n\n  // Helper methods for rest positioning in ModifierContext.\n  var shiftRestVertical = function(rest, note, dir) {\n    var delta = (note.isrest ? 0.0 : 1.0) * dir;\n\n    rest.line += delta;\n    rest.max_line += delta;\n    rest.min_line += delta;\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) + (delta));\n  };\n\n  // Called from formatNotes :: center a rest between two notes\n  var centerRest = function(rest, noteU, noteL) {\n    var delta = rest.line - Vex.MidLine(noteU.min_line, noteL.max_line);\n    rest.note.setKeyLine(0, rest.note.getKeyLine(0) - delta);\n    rest.line -= delta;\n    rest.max_line -= delta;\n    rest.min_line -= delta;\n  };\n\n  // ## Static Methods\n  //\n  // Format notes inside a ModifierContext.\n  StaveNote.format = function(notes, state) {\n    if (!notes || notes.length < 2) return false;\n\n    if (notes[0].getStave() != null) return StaveNote.formatByY(notes, state);\n\n    var notes_list= [];\n\n    for (var i = 0; i < notes.length; i++) {\n      var props = notes[i].getKeyProps();\n      var line = props[0].line;\n      var minL = props[props.length -1].line;\n      var stem_dir = notes[i].getStemDirection();\n      var stem_max = notes[i].getStemLength() / 10;\n      var stem_min = notes[i].getStemMinumumLength() / 10;\n\n      var maxL;\n      if (notes[i].isRest()) {\n        maxL = line + notes[i].glyph.line_above;\n        minL = line - notes[i].glyph.line_below;\n      } else {\n        maxL = stem_dir == 1 ? props[props.length -1].line + stem_max\n             : props[props.length -1].line;\n        minL = stem_dir == 1 ? props[0].line\n             : props[0].line - stem_max;\n      }\n      notes_list.push(\n        {line: props[0].line,         // note/rest base line\n         max_line: maxL,              // note/rest upper bounds line\n         min_line: minL,              // note/rest lower bounds line\n         isrest: notes[i].isRest(),\n         stem_dir: stem_dir,\n         stem_max: stem_max,          // Maximum (default) note stem length;\n         stem_min: stem_min,          // minimum note stem length\n         voice_shift: notes[i].getVoiceShiftWidth(),\n         is_displaced: notes[i].isDisplaced(),   // note manually displaced\n         note: notes[i]});\n    }\n\n    var voices = notes_list.length;\n\n    var noteU = notes_list[0];\n    var noteM = voices > 2 ? notes_list[1] : null;\n    var noteL = voices > 2 ? notes_list[2] : notes_list[1];\n\n    // for two voice backward compatibility, ensure upper voice is stems up\n    // for three voices, the voices must be in order (upper, middle, lower)\n    if (voices == 2 && noteU.stem_dir == -1 && noteL.stem_dir == 1) {\n      noteU = notes_list[1];\n      noteL = notes_list[0];\n    }\n\n    var voice_x_shift = Math.max(noteU.voice_shift, noteL.voice_shift);\n    var x_shift = 0;\n    var stem_delta;\n\n    // Test for two voice note intersection\n    if (voices == 2) {\n      var line_spacing = noteU.stem_dir == noteL.stem_dir ? 0.0 : 0.5;\n      // if top voice is a middle voice, check stem intersection with lower voice\n      if (noteU.stem_dir == noteL.stem_dir &&\n          noteU.min_line <= noteL.max_line) {\n        if (!noteU.isrest) {\n          stem_delta = Math.abs(noteU.line - (noteL.max_line + 0.5));\n          stem_delta = Math.max(stem_delta, noteU.stem_min);\n          noteU.min_line = noteU.line - stem_delta;\n          noteU.note.setStemLength(stem_delta * 10);\n        }\n      }\n      if (noteU.min_line <= noteL.max_line + line_spacing) {\n        if (noteU.isrest) {\n          // shift rest up\n          shiftRestVertical(noteU, noteL, 1);\n        } else if (noteL.isrest) {\n          // shift rest down\n          shiftRestVertical(noteL, noteU, -1);\n        } else {\n          x_shift = voice_x_shift;\n          if (noteU.stem_dir == noteL.stem_dir)\n            // upper voice is middle voice, so shift it right\n            noteU.note.setXShift(x_shift + 3);\n          else\n            // shift lower voice right\n            noteL.note.setXShift(x_shift);\n        }\n      }\n\n      // format complete\n      return true;\n    }\n\n    // Check middle voice stem intersection with lower voice\n    if (noteM != null && noteM.min_line < noteL.max_line + 0.5) {\n      if (!noteM.isrest) {\n        stem_delta = Math.abs(noteM.line - (noteL.max_line + 0.5));\n        stem_delta = Math.max(stem_delta, noteM.stem_min);\n        noteM.min_line = noteM.line - stem_delta;\n        noteM.note.setStemLength(stem_delta * 10);\n      }\n    }\n\n    // For three voices, test if rests can be repositioned\n    //\n    // Special case 1 :: middle voice rest between two notes\n    //\n    if (noteM.isrest && !noteU.isrest && !noteL.isrest) {\n      if (noteU.min_line <= noteM.max_line ||\n          noteM.min_line <= noteL.max_line) {\n         var rest_height = noteM.max_line - noteM.min_line;\n         var space = noteU.min_line - noteL.max_line;\n         if (rest_height < space)\n           // center middle voice rest between the upper and lower voices\n           centerRest(noteM, noteU, noteL);\n         else {\n           x_shift = voice_x_shift + 3;    // shift middle rest right\n           noteM.note.setXShift(x_shift);\n         }\n         // format complete\n         return true;\n      }\n    }\n\n    // Special case 2 :: all voices are rests\n    if (noteU.isrest && noteM.isrest && noteL.isrest) {\n      // Shift upper voice rest up\n      shiftRestVertical(noteU, noteM, 1);\n      // Shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n      // format complete\n      return true;\n    }\n\n    // Test if any other rests can be repositioned\n    if (noteM.isrest && noteU.isrest && noteM.min_line <= noteL.max_line)\n      // Shift middle voice rest up\n      shiftRestVertical(noteM, noteL, 1);\n    if (noteM.isrest && noteL.isrest && noteU.min_line <= noteM.max_line)\n      // Shift middle voice rest down\n      shiftRestVertical(noteM, noteU, -1);\n    if (noteU.isrest && noteU.min_line <= noteM.max_line)\n      // shift upper voice rest up;\n      shiftRestVertical(noteU, noteM, 1);\n    if (noteL.isrest && noteM.min_line <= noteL.max_line)\n      // shift lower voice rest down\n      shiftRestVertical(noteL, noteM, -1);\n\n    // If middle voice intersects upper or lower voice\n    if ((!noteU.isrest && !noteM.isrest && noteU.min_line <= noteM.max_line + 0.5) ||\n        (!noteM.isrest && !noteL.isrest && noteM.min_line <= noteL.max_line)) {\n      x_shift = voice_x_shift + 3;      // shift middle note right\n      noteM.note.setXShift(x_shift);\n    }\n\n    return true;\n  };\n\n  StaveNote.formatByY = function(notes, state) {\n    // NOTE: this function does not support more than two voices per stave\n    //       use with care.\n    var hasStave = true;\n    var i;\n\n    for (i = 0; i < notes.length; i++) {\n      hasStave = hasStave && notes[i].getStave() != null;\n    }\n\n    if (!hasStave) throw new Vex.RERR(\"Stave Missing\",\n      \"All notes must have a stave - Vex.Flow.ModifierContext.formatMultiVoice!\");\n\n    var x_shift = 0;\n\n    for (i = 0; i < notes.length - 1; i++) {\n      var top_note = notes[i];\n      var bottom_note = notes[i + 1];\n\n      if (top_note.getStemDirection() == Vex.Flow.StaveNote.STEM_DOWN) {\n        top_note = notes[i + 1];\n        bottom_note = notes[i];\n      }\n\n      var top_keys = top_note.getKeyProps();\n      var bottom_keys = bottom_note.getKeyProps();\n\n      var topY = top_note.getStave().getYForLine(top_keys[0].line);\n      var bottomY = bottom_note.getStave().getYForLine(bottom_keys[bottom_keys.length - 1].line);\n\n      var line_space = top_note.getStave().options.spacing_between_lines_px;\n      if (Math.abs(topY - bottomY) == line_space / 2) {\n        x_shift = top_note.getVoiceShiftWidth();\n        bottom_note.setXShift(x_shift);\n      }\n    }\n\n    state.right_shift += x_shift;\n  };\n\n  StaveNote.postFormat = function(notes) {\n    if (!notes) return false;\n\n    notes.forEach(function(note) {\n      note.postFormat();\n    });\n\n    return true;\n  };\n\n  // ## Prototype Methods\n  //\n  Vex.Inherit(StaveNote, Vex.Flow.StemmableNote, {\n    init: function(note_struct) {\n      StaveNote.superclass.init.call(this, note_struct);\n\n      this.keys = note_struct.keys;\n      this.clef = note_struct.clef;\n      this.octave_shift = note_struct.octave_shift;\n      this.beam = null;\n\n      // Pull note rendering properties\n      this.glyph = Vex.Flow.durationToGlyph(this.duration, this.noteType);\n      if (!this.glyph) {\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Invalid note initialization data (No glyph found): \" +\n            JSON.stringify(note_struct));\n      }\n\n      // if true, displace note to right\n      this.displaced = false;\n      this.dot_shiftY = 0;\n      // per-pitch properties\n      this.keyProps = [];\n      // for displaced ledger lines\n      this.use_default_head_x = false;\n\n      // Drawing\n      this.note_heads = [];\n      this.modifiers = [];\n\n      Vex.Merge(this.render_options, {\n        // font size for note heads and rests\n        glyph_font_scale: 35,\n        // number of stroke px to the left and right of head\n        stroke_px: 3\n      });\n\n      this.calculateKeyProps();\n\n      this.buildStem();\n\n      // Set the stem direction\n      if (note_struct.auto_stem) {\n        this.autoStem();\n      } else {\n        this.setStemDirection(note_struct.stem_direction);\n      }\n\n      this.buildNoteHeads();\n\n      // Calculate left/right padding\n      this.calcExtraPx();\n    },\n\n    // Builds a `Stem` for the note\n    buildStem: function() {\n      var glyph = this.getGlyph();\n\n      var y_extend = 0;\n      if (glyph.code_head == \"v95\" || glyph.code_head == \"v3e\") {\n         y_extend = -4;\n      }\n\n      var stem = new Stem({\n        y_extend: y_extend\n      });\n\n      if (this.isRest()) {\n        stem.hide = true;\n      }\n\n      this.setStem(stem);\n    },\n\n    // Builds a `NoteHead` for each key in the note\n    buildNoteHeads: function() {\n      var stem_direction = this.getStemDirection();\n\n      var keys = this.getKeys();\n\n      var last_line = null;\n      var line_diff = null;\n      var displaced = false;\n\n      // Draw notes from bottom to top.\n      var start_i = 0;\n      var end_i = keys.length;\n      var step_i = 1;\n\n      // For down-stem notes, we draw from top to bottom.\n      if (stem_direction === Stem.DOWN) {\n        start_i = keys.length - 1;\n        end_i = -1;\n        step_i = -1;\n      }\n\n      for (var i = start_i; i != end_i; i += step_i) {\n        var note_props = this.keyProps[i];\n\n        var line = note_props.line;\n\n        // Keep track of last line with a note head, so that consecutive heads\n        // are correctly displaced.\n        if (last_line === null) {\n          last_line = line;\n        } else {\n          line_diff = Math.abs(last_line - line);\n          if (line_diff === 0 || line_diff === 0.5) {\n            displaced = !displaced;\n          } else {\n            displaced = false;\n            this.use_default_head_x = true;\n          }\n        }\n        last_line = line;\n\n        var note_head = new NoteHead({\n          duration: this.duration,\n          note_type: this.noteType,\n          displaced: displaced,\n          stem_direction: stem_direction,\n          custom_glyph_code: note_props.code,\n          glyph_font_scale: this.render_options.glyph_font_scale,\n          x_shift: note_props.shift_right,\n          line: note_props.line\n        });\n\n        this.note_heads[i] = note_head;\n      }\n    },\n\n    // Automatically sets the stem direction based on the keys in the note\n    autoStem: function() {\n      var auto_stem_direction;\n\n      // Figure out optimal stem direction based on given notes\n      this.min_line = this.keyProps[0].line;\n      this.max_line = this.keyProps[this.keyProps.length - 1].line;\n      var decider = (this.min_line + this.max_line) / 2;\n\n      if (decider < 3) {\n        auto_stem_direction = 1;\n      } else {\n        auto_stem_direction = -1;\n      }\n\n      this.setStemDirection(auto_stem_direction);\n    },\n\n    // Calculates and stores the properties for each key in the note\n    calculateKeyProps: function() {\n      var last_line = null;\n      for (var i = 0; i < this.keys.length; ++i) {\n        var key = this.keys[i];\n\n        // All rests use the same position on the line.\n        // if (this.glyph.rest) key = this.glyph.position;\n        if (this.glyph.rest) this.glyph.position = key;\n        var options = { octave_shift: this.octave_shift || 0 };\n        var props = Vex.Flow.keyProperties(key, this.clef, options);\n        if (!props) {\n          throw new Vex.RuntimeError(\"BadArguments\",\n              \"Invalid key for note properties: \" + key);\n        }\n\n        // Override line placement for default rests\n        if (props.key === \"R\") {\n          if (this.duration === \"1\" || this.duration === \"w\") {\n            props.line = 4;\n          } else {\n            props.line = 3;\n          }\n        }\n\n        // Calculate displacement of this note\n        var line = props.line;\n        if (last_line === null) {\n          last_line = line;\n        } else {\n          if (Math.abs(last_line - line) == 0.5) {\n            this.displaced = true;\n            props.displaced = true;\n\n            // Have to mark the previous note as\n            // displaced as well, for modifier placement\n            if (this.keyProps.length > 0) {\n                this.keyProps[i-1].displaced = true;\n            }\n          }\n        }\n\n        last_line = line;\n        this.keyProps.push(props);\n      }\n\n      // Sort the notes from lowest line to highest line\n      this.keyProps.sort(function(a, b) { return a.line - b.line; });\n    },\n\n    // Get the `BoundingBox` for the entire note\n    getBoundingBox: function() {\n      if (!this.preFormatted) throw new Vex.RERR(\"UnformattedNote\",\n          \"Can't call getBoundingBox on an unformatted note.\");\n\n      var metrics = this.getMetrics();\n\n      var w = metrics.width;\n      var x = this.getAbsoluteX() - metrics.modLeftPx - metrics.extraLeftPx;\n\n      var min_y = 0;\n      var max_y = 0;\n      var half_line_spacing = this.getStave().getSpacingBetweenLines() / 2;\n      var line_spacing = half_line_spacing * 2;\n\n      if (this.isRest()) {\n        var y = this.ys[0];\n        var frac = Vex.Flow.durationToFraction(this.duration);\n        if (frac.equals(1) || frac.equals(2)) {\n          min_y = y - half_line_spacing;\n          max_y = y + half_line_spacing;\n        } else {\n          min_y = y - (this.glyph.line_above * line_spacing);\n          max_y = y + (this.glyph.line_below * line_spacing);\n        }\n      } else if (this.glyph.stem) {\n        var ys = this.getStemExtents();\n        ys.baseY += half_line_spacing * this.stem_direction;\n        min_y = Vex.Min(ys.topY, ys.baseY);\n        max_y = Vex.Max(ys.topY, ys.baseY);\n      } else {\n        min_y = null;\n        max_y = null;\n\n        for (var i=0; i < this.ys.length; ++i) {\n          var yy = this.ys[i];\n          if (i === 0) {\n            min_y = yy;\n            max_y = yy;\n          } else {\n            min_y = Vex.Min(yy, min_y);\n            max_y = Vex.Max(yy, max_y);\n          }\n          min_y -= half_line_spacing;\n          max_y += half_line_spacing;\n        }\n      }\n\n      return new Vex.Flow.BoundingBox(x, min_y, w, max_y - min_y);\n    },\n\n    // Gets the line number of the top or bottom note in the chord.\n    // If `is_top_note` is `true` then get the top note\n    getLineNumber: function(is_top_note) {\n      if(!this.keyProps.length) throw new Vex.RERR(\"NoKeyProps\",\n          \"Can't get bottom note line, because note is not initialized properly.\");\n      var result_line = this.keyProps[0].line;\n\n      // No precondition assumed for sortedness of keyProps array\n      for (var i=0; i<this.keyProps.length; i++) {\n        var this_line = this.keyProps[i].line;\n        if (is_top_note) {\n          if (this_line > result_line) result_line = this_line;\n        } else {\n          if (this_line < result_line) result_line = this_line;\n        }\n      }\n\n      return result_line;\n    },\n\n    // Determine if current note is a rest\n    isRest: function() { return this.glyph.rest; },\n\n    // Determine if the current note is a chord\n    isChord: function() { return !this.isRest() && this.keys.length > 1; },\n\n    // Determine if the `StaveNote` has a stem\n    hasStem: function() { return this.glyph.stem; },\n\n    // Get the `y` coordinate for text placed on the top/bottom of a\n    // note at a desired `text_line`\n    getYForTopText: function(text_line) {\n      var extents = this.getStemExtents();\n      return Vex.Min(this.stave.getYForTopText(text_line),\n          extents.topY - (this.render_options.annotation_spacing * (text_line + 1)));\n    },\n    getYForBottomText: function(text_line) {\n      var extents = this.getStemExtents();\n      return Vex.Max(this.stave.getYForTopText(text_line),\n          extents.baseY + (this.render_options.annotation_spacing * (text_line)));\n    },\n\n    // Sets the current note to the provided `stave`. This applies\n    // `y` values to the `NoteHeads`.\n    setStave: function(stave) {\n      var superclass = Vex.Flow.StaveNote.superclass;\n      superclass.setStave.call(this, stave);\n\n      var ys = this.note_heads.map(function(note_head) {\n        note_head.setStave(stave);\n        return note_head.getY();\n      });\n\n      this.setYs(ys);\n\n      var bounds = this.getNoteHeadBounds();\n      if(!this.beam){\n\t       this.stem.setYBounds(bounds.y_top, bounds.y_bottom);\n      }\n\n      return this;\n    },\n\n    // Get the pitches in the note\n    getKeys: function() { return this.keys; },\n\n    // Get the properties for all the keys in the note\n    getKeyProps: function() {\n      return this.keyProps;\n    },\n\n    // Check if note is shifted to the right\n    isDisplaced: function() {\n      return this.displaced;\n    },\n\n    // Sets whether shift note to the right. `displaced` is a `boolean`\n    setNoteDisplaced: function(displaced) {\n      this.displaced = displaced;\n      return this;\n    },\n\n    // Get the starting `x` coordinate for a `StaveTie`\n    getTieRightX: function() {\n      var tieStartX = this.getAbsoluteX();\n      tieStartX += this.glyph.head_width + this.x_shift + this.extraRightPx;\n      if (this.modifierContext) tieStartX += this.modifierContext.getExtraRightPx();\n      return tieStartX;\n    },\n\n    // Get the ending `x` coordinate for a `StaveTie`\n    getTieLeftX: function() {\n      var tieEndX = this.getAbsoluteX();\n      tieEndX += this.x_shift - this.extraLeftPx;\n      return tieEndX;\n    },\n\n    // Get the stave line on which to place a rest\n    getLineForRest: function() {\n      var rest_line = this.keyProps[0].line;\n      if (this.keyProps.length > 1) {\n        var last_line  = this.keyProps[this.keyProps.length - 1].line;\n        var top = Vex.Max(rest_line, last_line);\n        var bot = Vex.Min(rest_line, last_line);\n        rest_line = Vex.MidLine(top, bot);\n      }\n\n      return rest_line;\n    },\n\n    // Get the default `x` and `y` coordinates for the provided `position`\n    // and key `index`\n    getModifierStartXY: function(position, index) {\n      if (!this.preFormatted) throw new Vex.RERR(\"UnformattedNote\",\n          \"Can't call GetModifierStartXY on an unformatted note\");\n\n      if (this.ys.length === 0) throw new Vex.RERR(\"NoYValues\",\n          \"No Y-Values calculated for this note.\");\n\n      var x = 0;\n      if (position == Vex.Flow.Modifier.Position.LEFT) {\n        // extra_left_px\n        x = -1 * 2;\n      } else if (position == Vex.Flow.Modifier.Position.RIGHT) {\n        // extra_right_px\n        x = this.glyph.head_width + this.x_shift + 2;\n      } else if (position == Vex.Flow.Modifier.Position.BELOW ||\n                 position == Vex.Flow.Modifier.Position.ABOVE) {\n        x = this.glyph.head_width / 2;\n      }\n\n      return { x: this.getAbsoluteX() + x, y: this.ys[index] };\n    },\n\n    // Sets the notehead at `index` to the provided coloring `style`.\n    //\n    // `style` is an `object` with the following properties: `shadowColor`,\n    // `shadowBlur`, `fillStyle`, `strokeStyle`\n    setKeyStyle: function(index, style) {\n      this.note_heads[index].setStyle(style);\n      return this;\n    },\n\n    setKeyLine: function(index, line) {\n      this.keyProps[index].line = line;\n      this.note_heads[index].setLine(line);\n      return this;\n    },\n\n    getKeyLine: function(index) {\n      return this.keyProps[index].line;\n    },\n\n    // Add self to modifier context. `mContext` is the `ModifierContext`\n    // to be added to.\n    addToModifierContext: function(mContext) {\n      this.setModifierContext(mContext);\n      for (var i = 0; i < this.modifiers.length; ++i) {\n        this.modifierContext.addModifier(this.modifiers[i]);\n      }\n      this.modifierContext.addModifier(this);\n      this.setPreFormatted(false);\n      return this;\n    },\n\n    // Generic function to add modifiers to a note\n    //\n    // Parameters:\n    // * `index`: The index of the key that we're modifying\n    // * `modifier`: The modifier to add\n    addModifier: function(index, modifier) {\n      modifier.setNote(this);\n      modifier.setIndex(index);\n      this.modifiers.push(modifier);\n      this.setPreFormatted(false);\n      return this;\n    },\n\n    // Helper function to add an accidental to a key\n    addAccidental: function(index, accidental) {\n      return this.addModifier(index, accidental);\n    },\n\n    // Helper function to add an articulation to a key\n    addArticulation: function(index, articulation) {\n      return this.addModifier(index, articulation);\n    },\n\n    // Helper function to add an annotation to a key\n    addAnnotation: function(index, annotation) {\n      return this.addModifier(index, annotation);\n    },\n\n    // Helper function to add a dot on a specific key\n    addDot: function(index) {\n      var dot = new Vex.Flow.Dot();\n      dot.setDotShiftY(this.glyph.dot_shiftY);\n      this.dots++;\n      return this.addModifier(index, dot);\n    },\n\n    // Convenience method to add dot to all keys in note\n    addDotToAll: function() {\n      for (var i = 0; i < this.keys.length; ++i)\n        this.addDot(i);\n      return this;\n    },\n\n    // Get all accidentals in the `ModifierContext`\n    getAccidentals: function() {\n      return this.modifierContext.getModifiers(\"accidentals\");\n    },\n\n    // Get all dots in the `ModifierContext`\n    getDots: function() {\n      return this.modifierContext.getModifiers(\"dots\");\n    },\n\n    // Get the width of the note if it is displaced. Used for `Voice`\n    // formatting\n    getVoiceShiftWidth: function() {\n      // TODO: may need to accomodate for dot here.\n      return this.glyph.head_width * (this.displaced ? 2 : 1);\n    },\n\n    // Calculates and sets the extra pixels to the left or right\n    // if the note is displaced\n    calcExtraPx: function() {\n      this.setExtraLeftPx((this.displaced && this.stem_direction == -1) ?\n          this.glyph.head_width : 0);\n      this.setExtraRightPx((this.displaced && this.stem_direction == 1) ?\n          this.glyph.head_width : 0);\n    },\n\n    // Pre-render formatting\n    preFormat: function() {\n      if (this.preFormatted) return;\n      if (this.modifierContext) this.modifierContext.preFormat();\n\n      var width = this.glyph.head_width + this.extraLeftPx + this.extraRightPx;\n\n      // For upward flagged notes, the width of the flag needs to be added\n      if (this.glyph.flag && this.beam === null && this.stem_direction == 1) {\n        width += this.glyph.head_width;\n      }\n\n      this.setWidth(width);\n      this.setPreFormatted(true);\n    },\n\n    // Gets the staff line and y value for the highest and lowest noteheads\n    getNoteHeadBounds: function() {\n      // Top and bottom Y values for stem.\n      var y_top = null;\n      var y_bottom = null;\n\n      var highest_line = this.stave.getNumLines();\n      var lowest_line = 1;\n\n      this.note_heads.forEach(function(note_head) {\n        var line = note_head.getLine();\n        var y = note_head.getY();\n\n        if (y_top === null || y < y_top)  {\n          y_top = y;\n        }\n\n        if (y_bottom === null || y > y_bottom) {\n          y_bottom = y;\n        }\n\n        highest_line = line > highest_line ? line : highest_line;\n        lowest_line = line < lowest_line ? line : lowest_line;\n\n      }, this);\n\n      return {\n        y_top: y_top,\n        y_bottom: y_bottom,\n        highest_line: highest_line,\n        lowest_line: lowest_line\n      };\n    },\n\n    // Get the starting `x` coordinate for the noteheads\n    getNoteHeadBeginX: function(){\n      return this.getAbsoluteX() + this.x_shift;\n    },\n\n    // Get the ending `x` coordinate for the noteheads\n    getNoteHeadEndX: function(){\n      var x_begin = this.getNoteHeadBeginX();\n      return x_begin + this.glyph.head_width - (Vex.Flow.STEM_WIDTH / 2);\n    },\n\n    // Draw the ledger lines between the stave and the highest/lowest keys\n    drawLedgerLines: function(){\n      if (this.isRest()) { return; }\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n      var ctx = this.context;\n\n      var bounds = this.getNoteHeadBounds();\n      var highest_line = bounds.highest_line;\n      var lowest_line = bounds.lowest_line;\n      var head_x = this.note_heads[0].getAbsoluteX();\n\n      var that = this;\n      function stroke(y) {\n        if (that.use_default_head_x === true)  {\n          head_x = that.getAbsoluteX() + that.x_shift;\n        }\n        var x = head_x - that.render_options.stroke_px;\n        var length = ((head_x + that.glyph.head_width) - head_x) +\n          (that.render_options.stroke_px * 2);\n\n        ctx.fillRect(x, y, length, 1);\n      }\n\n      var line; // iterator\n      for (line = 6; line <= highest_line; ++line) {\n        stroke(this.stave.getYForNote(line));\n      }\n\n      for (line = 0; line >= lowest_line; --line) {\n        stroke(this.stave.getYForNote(line));\n      }\n    },\n\n    // Draw all key modifiers\n    drawModifiers: function(){\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n      var ctx = this.context;\n      for (var i = 0; i < this.modifiers.length; i++) {\n        var mod = this.modifiers[i];\n        var note_head = this.note_heads[mod.getIndex()];\n        var key_style = note_head.getStyle();\n        if(key_style) {\n            ctx.save();\n            note_head.applyStyle(ctx);\n        }\n        mod.setContext(ctx);\n        mod.draw();\n        if(key_style) {\n            ctx.restore();\n        }\n      }\n    },\n\n    // Draw the flag for the note\n    drawFlag: function(){\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n      var ctx = this.context;\n      var glyph = this.getGlyph();\n      var render_flag = this.beam === null;\n      var bounds = this.getNoteHeadBounds();\n\n      var x_begin = this.getNoteHeadBeginX();\n      var x_end = this.getNoteHeadEndX();\n\n      if (glyph.flag && render_flag) {\n        var note_stem_height = this.stem.getHeight();\n        var flag_x, flag_y, flag_code;\n\n        if (this.getStemDirection() === Stem.DOWN) {\n          // Down stems have flags on the left.\n          flag_x = x_begin + 1;\n          flag_y = bounds.y_top - note_stem_height + 2;\n          flag_code = glyph.code_flag_downstem;\n\n        } else {\n          // Up stems have flags on the left.\n          flag_x = x_end + 1;\n          flag_y = bounds.y_bottom - note_stem_height - 2;\n          flag_code = glyph.code_flag_upstem;\n        }\n\n        // Draw the Flag\n        Vex.Flow.renderGlyph(ctx, flag_x, flag_y,\n            this.render_options.glyph_font_scale, flag_code);\n      }\n    },\n\n    // Draw the NoteHeads\n    drawNoteHeads: function(){\n      this.note_heads.forEach(function(note_head) {\n        note_head.setContext(this.context).draw();\n      }, this);\n    },\n\n    // Render the stem onto the canvas\n    drawStem: function(stem_struct){\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n\n      if (stem_struct) {\n        this.setStem(new Stem(stem_struct));\n      }\n\n      this.stem.setContext(this.context).draw();\n    },\n\n    // Draws all the `StaveNote` parts. This is the main drawing method.\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n      if (!this.stave) throw new Vex.RERR(\"NoStave\",\n          \"Can't draw without a stave.\");\n      if (this.ys.length === 0) throw new Vex.RERR(\"NoYValues\",\n          \"Can't draw note without Y values.\");\n\n      var x_begin = this.getNoteHeadBeginX();\n      var x_end = this.getNoteHeadEndX();\n\n      var render_stem = this.hasStem() && !this.beam;\n\n      // Format note head x positions\n      this.note_heads.forEach(function(note_head) {\n        note_head.setX(x_begin);\n      }, this);\n\n      // Format stem x positions\n      this.stem.setNoteHeadXBounds(x_begin, x_end);\n\n      L(\"Rendering \", this.isChord() ? \"chord :\" : \"note :\", this.keys);\n\n      // Draw each part of the note\n      this.drawLedgerLines();\n      if (render_stem) this.drawStem();\n      this.drawNoteHeads();\n      this.drawFlag();\n      this.drawModifiers();\n    }\n  });\n\n  return StaveNote;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// The file implements notes for Tablature notation. This consists of one or\n// more fret positions, and can either be drawn with or without stems.\n//\n// See `tests/tabnote_tests.js` for usage examples\nVex.Flow.TabNote = (function() {\n  function TabNote(tab_struct, draw_stem) {\n    if (arguments.length > 0) this.init(tab_struct, draw_stem);\n  }\n\n  var Stem = Vex.Flow.Stem;\n\n  // ## Prototype Methods\n  Vex.Inherit(TabNote, Vex.Flow.StemmableNote, {\n    // Initialize the TabNote with a `tab_struct` full of properties\n    // and whether to `draw_stem` when rendering the note\n    init: function(tab_struct, draw_stem) {\n      var superclass = Vex.Flow.TabNote.superclass;\n      superclass.init.call(this, tab_struct);\n\n      this.ghost = false; // Renders parenthesis around notes\n      // Note properties\n      //\n      // The fret positions in the note. An array of `{ str: X, fret: X }`\n      this.positions = tab_struct.positions;\n\n      // Render Options\n      Vex.Merge(this.render_options, {\n        // font size for note heads and rests\n        glyph_font_scale: 30,\n        // Flag to draw a stem\n        draw_stem: draw_stem,\n        // Flag to draw dot modifiers\n        draw_dots: draw_stem,\n        // Flag to extend the main stem through the stave and fret positions\n        draw_stem_through_stave: false\n      });\n\n      this.glyph =\n        Vex.Flow.durationToGlyph(this.duration, this.noteType);\n      if (!this.glyph) {\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Invalid note initialization data (No glyph found): \" +\n            JSON.stringify(tab_struct));\n      }\n\n      this.buildStem();\n\n      if (tab_struct.stem_direction){\n        this.setStemDirection(tab_struct.stem_direction);\n      } else {\n        this.setStemDirection(Stem.UP);\n      }\n\n      // Renders parenthesis around notes\n      this.ghost = false;\n      this.updateWidth();\n    },\n\n    // The ModifierContext category\n    getCategory: function() { return \"tabnotes\"; },\n\n    // Set as ghost `TabNote`, surrounds the fret positions with parenthesis.\n    // Often used for indicating frets that are being bent to\n    setGhost: function(ghost) {\n      this.ghost = ghost;\n      this.updateWidth();\n      return this;\n    },\n\n    // Determine if the note has a stem\n    hasStem: function() { return this.render_options.draw_stem; },\n\n    // Get the default stem extension for the note\n    getStemExtension: function(){\n      var glyph = this.getGlyph();\n\n      if (this.stem_extension_override != null) {\n        return this.stem_extension_override;\n      }\n\n      if (glyph) {\n        return this.getStemDirection() === 1 ? glyph.tabnote_stem_up_extension :\n          glyph.tabnote_stem_down_extension;\n      }\n\n      return 0;\n    },\n\n    // Add a dot to the note\n    addDot: function() {\n      var dot = new Vex.Flow.Dot();\n      this.dots++;\n      return this.addModifier(dot, 0);\n    },\n\n    // Calculate and store the width of the note\n    updateWidth: function() {\n      this.glyphs = [];\n      this.width = 0;\n      for (var i = 0; i < this.positions.length; ++i) {\n        var fret = this.positions[i].fret;\n        if (this.ghost) fret = \"(\" + fret + \")\";\n        var glyph = Vex.Flow.tabToGlyph(fret);\n        this.glyphs.push(glyph);\n        this.width = (glyph.width > this.width) ? glyph.width : this.width;\n      }\n    },\n\n    // Set the `stave` to the note\n    setStave: function(stave) {\n      var superclass = Vex.Flow.TabNote.superclass;\n      superclass.setStave.call(this, stave);\n      this.context = stave.context;\n      this.width = 0;\n\n      // Calculate the fret number width based on font used\n      var i;\n      if (this.context) {\n        for (i = 0; i < this.glyphs.length; ++i) {\n          var text = \"\" + this.glyphs[i].text;\n          if (text.toUpperCase() != \"X\")\n            this.glyphs[i].width = this.context.measureText(text).width;\n          this.width = (this.glyphs[i].width > this.width) ?\n            this.glyphs[i].width : this.width;\n        }\n      }\n\n      var ys = [];\n\n      // Setup y coordinates for score.\n      for (i = 0; i < this.positions.length; ++i) {\n        var line = this.positions[i].str;\n        ys.push(this.stave.getYForLine(line - 1));\n      }\n\n      return this.setYs(ys);\n    },\n\n    // Get the fret positions for the note\n    getPositions: function() { return this.positions; },\n\n    // Add self to the provided modifier context `mc`\n    addToModifierContext: function(mc) {\n      this.setModifierContext(mc);\n      for (var i = 0; i < this.modifiers.length; ++i) {\n        this.modifierContext.addModifier(this.modifiers[i]);\n      }\n      this.modifierContext.addModifier(this);\n      this.preFormatted = false;\n      return this;\n    },\n\n    // Get the `x` coordinate to the right of the note\n    getTieRightX: function() {\n      var tieStartX = this.getAbsoluteX();\n      var note_glyph_width = this.glyph.head_width;\n      tieStartX += (note_glyph_width / 2);\n      tieStartX += ((-this.width / 2) + this.width + 2);\n\n      return tieStartX;\n    },\n\n    // Get the `x` coordinate to the left of the note\n    getTieLeftX: function() {\n      var tieEndX = this.getAbsoluteX();\n      var note_glyph_width = this.glyph.head_width;\n      tieEndX += (note_glyph_width / 2);\n      tieEndX -= ((this.width / 2) + 2);\n\n      return tieEndX;\n    },\n\n    // Get the default `x` and `y` coordinates for a modifier at a specific\n    // `position` at a fret position `index`\n    getModifierStartXY: function(position, index) {\n      if (!this.preFormatted) throw new Vex.RERR(\"UnformattedNote\",\n          \"Can't call GetModifierStartXY on an unformatted note\");\n\n      if (this.ys.length === 0) throw new Vex.RERR(\"NoYValues\",\n          \"No Y-Values calculated for this note.\");\n\n      var x = 0;\n      if (position == Vex.Flow.Modifier.Position.LEFT) {\n        x = -1 * 2;  // extra_left_px\n      } else if (position == Vex.Flow.Modifier.Position.RIGHT) {\n        x = this.width + 2; // extra_right_px\n      } else if (position == Vex.Flow.Modifier.Position.BELOW ||\n                 position == Vex.Flow.Modifier.Position.ABOVE) {\n          var note_glyph_width = this.glyph.head_width;\n          x = note_glyph_width / 2;\n      }\n\n      return {x: this.getAbsoluteX() + x, y: this.ys[index]};\n    },\n\n    // Get the default line for rest\n    getLineForRest: function() { return this.positions[0].str; },\n\n    // Pre-render formatting\n    preFormat: function() {\n      if (this.preFormatted) return;\n      if (this.modifierContext) this.modifierContext.preFormat();\n      // width is already set during init()\n      this.setPreFormatted(true);\n    },\n\n    // Get the x position for the stem\n    getStemX: function() { return this.getCenterGlyphX(); },\n\n    // Get the y position for the stem\n    getStemY: function(){\n      var num_lines = this.stave.getNumLines();\n\n      // The decimal staff line amounts provide optimal spacing between the\n      // fret number and the stem\n      var stemUpLine = -0.5;\n      var stemDownLine = num_lines - 0.5;\n      var stemStartLine = Stem.UP === this.stem_direction ? stemUpLine : stemDownLine;\n\n      return this.stave.getYForLine(stemStartLine);\n    },\n\n    // Get the stem extents for the tabnote\n    getStemExtents: function() {\n      var stem_base_y = this.getStemY();\n      var stem_top_y = stem_base_y + (Stem.HEIGHT * -this.stem_direction);\n\n      return { topY: stem_top_y , baseY: stem_base_y};\n    },\n\n    // Draw the fal onto the context\n    drawFlag: function() {\n      var render_stem = this.beam == null && this.render_options.draw_stem;\n      var render_flag = this.beam == null && render_stem;\n\n      // Now it's the flag's turn.\n      if (this.glyph.flag && render_flag) {\n        var flag_x = this.getStemX() + 1 ;\n        var flag_y = this.getStemY() - (this.stem.getHeight());\n        var flag_code;\n\n        if (this.stem_direction == Stem.DOWN) {\n          // Down stems have flags on the left.\n          flag_code = this.glyph.code_flag_downstem;\n        } else {\n          // Up stems have flags on the left.\n          flag_code = this.glyph.code_flag_upstem;\n        }\n\n        // Draw the Flag\n        Vex.Flow.renderGlyph(this.context, flag_x, flag_y,\n            this.render_options.glyph_font_scale, flag_code);\n      }\n    },\n\n    // Render the modifiers onto the context\n    drawModifiers: function() {\n      // Draw the modifiers\n      this.modifiers.forEach(function(modifier) {\n        // Only draw the dots if enabled\n        if (modifier.getCategory() === 'dots' && !this.render_options.draw_dots) return;\n\n        modifier.setContext(this.context);\n        modifier.draw();\n      }, this);\n    },\n\n    // Render the stem extension through the fret positions\n    drawStemThrough: function() {\n      var stem_x = this.getStemX();\n      var stem_y = this.getStemY();\n      var ctx = this.context;\n\n      var stem_through = this.render_options.draw_stem_through_stave;\n      var draw_stem = this.render_options.draw_stem;\n      if (draw_stem && stem_through) {\n        var total_lines = this.stave.getNumLines();\n        var strings_used = this.positions.map(function(position) {\n          return position.str;\n        });\n\n        var unused_strings = getUnusedStringGroups(total_lines, strings_used);\n        var stem_lines = getPartialStemLines(stem_y, unused_strings,\n                              this.getStave(), this.getStemDirection());\n\n        // Fine tune x position to match default stem\n        if (!this.beam || this.getStemDirection() === 1) {\n          stem_x += (Stem.WIDTH / 2);\n        }\n\n        ctx.save();\n        ctx.setLineWidth(Stem.WIDTH);\n        stem_lines.forEach(function(bounds) {\n          ctx.beginPath();\n          ctx.moveTo(stem_x, bounds[0]);\n          ctx.lineTo(stem_x, bounds[bounds.length - 1]);\n          ctx.stroke();\n          ctx.closePath();\n        });\n        ctx.restore();\n      }\n    },\n\n    // Render the fret positions onto the context\n    drawPositions: function() {\n      var ctx = this.context;\n      var x = this.getAbsoluteX();\n      var ys = this.ys;\n      var y;\n\n      for (var i = 0; i < this.positions.length; ++i) {\n        y = ys[i];\n\n        var glyph = this.glyphs[i];\n\n        // Center the fret text beneath the notation note head\n        var note_glyph_width = this.glyph.head_width;\n        var tab_x = x + (note_glyph_width / 2) - (glyph.width / 2);\n\n        ctx.clearRect(tab_x - 2, y - 3, glyph.width + 4, 6);\n\n        if (glyph.code) {\n          Vex.Flow.renderGlyph(ctx, tab_x, y + 5 + glyph.shift_y,\n              this.render_options.glyph_font_scale, glyph.code);\n        } else {\n          var text = glyph.text.toString();\n          ctx.fillText(text, tab_x, y + 5);\n        }\n      }\n    },\n\n    // The main rendering function for the entire note\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n      if (!this.stave) throw new Vex.RERR(\"NoStave\", \"Can't draw without a stave.\");\n      if (this.ys.length === 0) throw new Vex.RERR(\"NoYValues\",\n          \"Can't draw note without Y values.\");\n\n      var render_stem = this.beam == null && this.render_options.draw_stem;\n\n      this.drawPositions();\n      this.drawStemThrough();\n\n      var stem_x = this.getStemX();\n      var stem_y = this.getStemY();\n      if (render_stem) {\n        this.drawStem({\n          x_begin: stem_x,\n          x_end: stem_x,\n          y_top: stem_y,\n          y_bottom: stem_y,\n          y_extend: 0,\n          stem_extension: this.getStemExtension(),\n          stem_direction: this.stem_direction\n        });\n      }\n\n      this.drawFlag();\n      this.drawModifiers();\n    }\n  });\n\n  // ## Private Helpers\n  //\n  // Gets the unused strings grouped together if consecutive.\n  //\n  // Parameters:\n  // * num_lines - The number of lines\n  // * strings_used - An array of numbers representing which strings have fret positions\n  function getUnusedStringGroups(num_lines, strings_used) {\n    var stem_through = [];\n    var group = [];\n    for (var string = 1; string <= num_lines ; string++) {\n      var is_used = strings_used.indexOf(string) > -1;\n\n      if (!is_used) {\n        group.push(string);\n      } else {\n        stem_through.push(group);\n        group = [];\n      }\n    }\n    if (group.length > 0) stem_through.push(group);\n\n    return stem_through;\n  }\n\n  // Gets groups of points that outline the partial stem lines\n  // between fret positions\n  // \n  // Parameters:\n  // * stem_Y - The `y` coordinate the stem is located on\n  // * unused_strings - An array of groups of unused strings\n  // * stave - The stave to use for reference\n  // * stem_direction - The direction of the stem\n  function getPartialStemLines (stem_y, unused_strings, stave, stem_direction) {\n    var up_stem = stem_direction !== 1;\n    var down_stem = stem_direction !== -1;\n\n    var line_spacing = stave.getSpacingBetweenLines();\n    var total_lines = stave.getNumLines();\n\n    var stem_lines = [];\n\n    unused_strings.forEach(function(strings) {\n      var containsLastString = strings.indexOf(total_lines) > -1;\n      var containsFirstString =  strings.indexOf(1) > -1;\n\n      if ((up_stem && containsFirstString) ||\n         (down_stem && containsLastString)) {\n        return;\n      }\n\n      // If there's only one string in the group, push a duplicate value.\n      // We do this because we need 2 strings to convert into upper/lower y\n      // values.\n      if (strings.length === 1) {\n        strings.push(strings[0]);\n      }\n\n      var line_ys = [];\n      // Iterate through each group string and store it's y position\n      strings.forEach(function(string, index, strings) {\n        var isTopBound = string === 1;\n        var isBottomBound = string === total_lines;\n\n        // Get the y value for the appropriate staff line,\n        // we adjust for a 0 index array, since string numbers are index 1\n        var y = stave.getYForLine(string - 1);\n\n        // Unless the string is the first or last, add padding to each side\n        // of the line\n        if (index === 0 && !isTopBound) {\n          y -= line_spacing/2 - 1;\n        } else if (index === strings.length - 1 && !isBottomBound){\n          y += line_spacing/2 - 1;\n        }\n\n        // Store the y value\n        line_ys.push(y);\n\n        // Store a subsequent y value connecting this group to the main\n        // stem above/below the stave if it's the top/bottom string\n        if (stem_direction === 1 && isTopBound) {\n          line_ys.push(stem_y - 2);\n        } else if (stem_direction === -1 && isBottomBound) {\n          line_ys.push(stem_y + 2);\n        }\n      });\n\n      // Add the sorted y values to the\n      stem_lines.push(line_ys.sort(function(a, b) {\n        return a - b;\n      }));\n    });\n\n    return stem_lines;\n  }\n\n  return TabNote;\n}());\n\n// Vex Flow Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n//\n// Requires vex.js.\n\n/** @constructor */\nVex.Flow.GhostNote = (function() {\n  function GhostNote(duration) {\n    if (arguments.length > 0) this.init(duration);\n  }\n\n  Vex.Inherit(GhostNote, Vex.Flow.StemmableNote, {\n    init: function(parameter) {\n      // Sanity check\n      if (!parameter) {\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Ghost note must have valid initialization data to identify \" +\n            \"duration.\");\n      }\n\n      var note_struct;\n\n      // Preserve backwards-compatibility\n      if (typeof(parameter) === \"string\") {\n        note_struct = { duration: parameter };\n      } else if (typeof(parameter) === \"object\") {\n        note_struct = parameter;\n      } else {\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Ghost note must have valid initialization data to identify \" +\n            \"duration.\");\n      }\n\n      GhostNote.superclass.init.call(this, note_struct);\n\n      // Note properties\n      this.setWidth(0);\n    },\n\n    isRest: function() { return true; },\n\n    setStave: function(stave) { GhostNote.superclass.setStave.call(this, stave); },\n\n    addToModifierContext: function()\n      { /* intentionally overridden */ return this; },\n\n    preFormat: function() {\n      this.setPreFormatted(true);\n      return this;\n    },\n\n    draw: function() {\n      if (!this.stave) throw new Vex.RERR(\"NoStave\", \"Can't draw without a stave.\");\n\n      // Draw the modifiers\n      for (var i = 0; i < this.modifiers.length; ++i) {\n        var modifier = this.modifiers[i];\n        modifier.setContext(this.context);\n        modifier.draw();\n      }\n    }\n  });\n\n  return GhostNote;\n}());\n\n// Vex Flow Notation\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\n/** @constructor */\nVex.Flow.ClefNote = (function() {\n  function ClefNote(clef, size, annotation) { this.init(clef, size, annotation); }\n\n  Vex.Inherit(ClefNote, Vex.Flow.Note, {\n    init: function(clef, size, annotation) {\n      ClefNote.superclass.init.call(this, {duration: \"b\"});\n      \n      this.setClef(clef, size, annotation);\n\n      // Note properties\n      this.ignore_ticks = true;\n    },\n\n    setClef: function(clef, size, annotation) {\n      this.clef_obj = new Vex.Flow.Clef(clef, size, annotation);\n      this.clef = this.clef_obj.clef;\n      this.glyph = new Vex.Flow.Glyph(this.clef.code, this.clef.point);\n      this.setWidth(this.glyph.getMetrics().width);\n      return this;\n    },\n\n    getClef: function() {\n      return this.clef;\n    },\n\n    setStave: function(stave) {\n      var superclass = Vex.Flow.ClefNote.superclass;\n      superclass.setStave.call(this, stave);\n    },\n\n    getBoundingBox: function() {\n      return new Vex.Flow.BoundingBox(0, 0, 0, 0);\n    },\n\n    addToModifierContext: function() {\n      /* overridden to ignore */\n      return this;\n    },\n\n    getCategory: function() {\n      return \"clefnote\";\n    },\n\n    preFormat: function() {\n      this.setPreFormatted(true);\n      return this;\n    },\n\n    draw: function() {\n      if (!this.stave) throw new Vex.RERR(\"NoStave\", \"Can't draw without a stave.\");\n      \n      if (!this.glyph.getContext()) {\n        this.glyph.setContext(this.context);\n      }\n      var abs_x = this.getAbsoluteX();\n\n      this.glyph.setStave(this.stave);\n      this.glyph.setYShift(\n        this.stave.getYForLine(this.clef.line) - this.stave.getYForGlyphs());\n      this.glyph.renderToStave(abs_x);\n      \n      // If the Vex.Flow.Clef has an annotation, such as 8va, draw it.\n      if (this.clef_obj.annotation !== undefined) {\n        var attachment = new Vex.Flow.Glyph(this.clef_obj.annotation.code, this.clef_obj.annotation.point);\n        if (!attachment.getContext()) {\n            attachment.setContext(this.context);\n        }\n        attachment.setStave(this.stave);\n        attachment.setYShift(\n          this.stave.getYForLine(this.clef_obj.annotation.line) - this.stave.getYForGlyphs());\n        attachment.setXShift(this.clef_obj.annotation.x_shift);\n        attachment.renderToStave(abs_x);\n      }\n      \n    }\n  });\n\n  return ClefNote;\n}());\n\n// Vex Flow Notation\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\n/** @constructor */\nVex.Flow.TimeSigNote = (function() {\n  function TimeSigNote(timeSpec, customPadding) {\n    if (arguments.length > 0) this.init(timeSpec, customPadding);\n  }\n\n  Vex.Inherit(TimeSigNote, Vex.Flow.Note, {\n    init: function(timeSpec, customPadding) {\n      TimeSigNote.superclass.init.call(this, {duration: \"b\"});\n\n      var timeSignature = new Vex.Flow.TimeSignature(timeSpec, customPadding);\n      this.timeSig = timeSignature.getTimeSig();\n      this.setWidth(this.timeSig.glyph.getMetrics().width);\n\n      // Note properties\n      this.ignore_ticks = true;\n    },\n\n    setStave: function(stave) {\n      var superclass = Vex.Flow.TimeSigNote.superclass;\n      superclass.setStave.call(this, stave);\n    },\n\n    getBoundingBox: function() {\n      return new Vex.Flow.BoundingBox(0, 0, 0, 0);\n    },\n\n    addToModifierContext: function() {\n      /* overridden to ignore */\n      return this;\n    },\n\n    preFormat: function() {\n      this.setPreFormatted(true);\n      return this;\n    },\n\n    draw: function() {\n      if (!this.stave) throw new Vex.RERR(\"NoStave\", \"Can't draw without a stave.\");\n      \n      if (!this.timeSig.glyph.getContext()) {\n        this.timeSig.glyph.setContext(this.context);\n      }\n\n      this.timeSig.glyph.setStave(this.stave);\n      this.timeSig.glyph.setYShift(\n        this.stave.getYForLine(this.timeSig.line) - this.stave.getYForGlyphs());\n      this.timeSig.glyph.renderToStave(this.getAbsoluteX());\n    }\n  });\n\n  return TimeSigNote;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `Beams` that span over a set of `StemmableNotes`.\n//\n// Requires: vex.js, vexmusic.js, note.js\nVex.Flow.Beam = (function() {\n  function Beam(notes, auto_stem) {\n    if (arguments.length > 0) this.init(notes, auto_stem);\n  }\n\n  var Stem = Vex.Flow.Stem;\n\n  // ## Prototype Methods\n  Beam.prototype = {\n    init: function(notes, auto_stem) {\n      if (!notes || notes == []) {\n        throw new Vex.RuntimeError(\"BadArguments\", \"No notes provided for beam.\");\n      }\n\n      if (notes.length == 1) {\n        throw new Vex.RuntimeError(\"BadArguments\", \"Too few notes for beam.\");\n      }\n\n      // Validate beam line, direction and ticks.\n      this.ticks = notes[0].getIntrinsicTicks();\n\n      if (this.ticks >= Vex.Flow.durationToTicks(\"4\")) {\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Beams can only be applied to notes shorter than a quarter note.\");\n      }\n\n      var i; // shared iterator\n      var note;\n\n      this.stem_direction = Stem.UP;\n\n      for (i = 0; i < notes.length; ++i) {\n        note = notes[i];\n        if (note.hasStem()) {\n          this.stem_direction = note.getStemDirection();\n          break;\n        }\n      }\n\n      var stem_direction = this.stem_direction;\n      // Figure out optimal stem direction based on given notes\n      if (auto_stem && notes[0].getCategory() === 'stavenotes')  {\n        stem_direction = calculateStemDirection(notes);\n      } else if (auto_stem && notes[0].getCategory() === 'tabnotes') {\n        // Auto Stem TabNotes\n        var stem_weight = notes.reduce(function(memo, note) {\n          return memo + note.stem_direction;\n        }, 0);\n\n        stem_direction = stem_weight > -1 ? Stem.UP : Stem.DOWN;\n      }\n\n      // Apply stem directions and attach beam to notes\n      for (i = 0; i < notes.length; ++i) {\n        note = notes[i];\n        if (auto_stem) {\n          note.setStemDirection(stem_direction);\n          this.stem_direction = stem_direction;\n        }\n        note.setBeam(this);\n      }\n\n      this.postFormatted = false;\n      this.notes = notes;\n      this.beam_count = this.getBeamCount();\n      this.break_on_indices = [];\n      this.render_options = {\n        beam_width: 5,\n        max_slope: 0.25,\n        min_slope: -0.25,\n        slope_iterations: 20,\n        slope_cost: 100,\n        show_stemlets: false,\n        stemlet_extension: 7,\n        partial_beam_length: 10\n      };\n    },\n\n    // The the rendering `context`\n    setContext: function(context) { this.context = context; return this; },\n\n    // Get the notes in this beam\n    getNotes: function() { return this.notes; },\n\n    // Get the max number of beams in the set of notes\n    getBeamCount: function(){\n      var beamCounts =  this.notes.map(function(note) {\n        return note.getGlyph().beam_count;\n      });\n\n      var maxBeamCount =  beamCounts.reduce(function(max, beamCount) {\n          return beamCount > max ? beamCount : max;\n      });\n\n      return maxBeamCount;\n    },\n\n    // Set which note `indices` to break the secondary beam at\n    breakSecondaryAt: function(indices) {\n      this.break_on_indices = indices;\n      return this;\n    },\n\n    // Return the y coordinate for linear function\n    getSlopeY: function(x, first_x_px, first_y_px, slope) {\n      return first_y_px + ((x - first_x_px) * slope);\n    },\n\n    // Calculate the best possible slope for the provided notes\n    calculateSlope: function() {\n      var first_note = this.notes[0];\n      var first_y_px = first_note.getStemExtents().topY;\n      var first_x_px = first_note.getStemX();\n\n      var inc = (this.render_options.max_slope - this.render_options.min_slope) /\n          this.render_options.slope_iterations;\n      var min_cost = Number.MAX_VALUE;\n      var best_slope = 0;\n      var y_shift = 0;\n\n      // iterate through slope values to find best weighted fit\n      for (var slope = this.render_options.min_slope;\n           slope <= this.render_options.max_slope;\n           slope += inc) {\n        var total_stem_extension = 0;\n        var y_shift_tmp = 0;\n\n        // iterate through notes, calculating y shift and stem extension\n        for (var i = 1; i < this.notes.length; ++i) {\n          var note = this.notes[i];\n\n          var x_px = note.getStemX();\n          var y_px = note.getStemExtents().topY;\n          var slope_y_px = this.getSlopeY(x_px, first_x_px, first_y_px, slope) + y_shift_tmp;\n\n          // beam needs to be shifted up to accommodate note\n          if (y_px * this.stem_direction < slope_y_px * this.stem_direction) {\n            var diff =  Math.abs(y_px - slope_y_px);\n            y_shift_tmp += diff * -this.stem_direction;\n            total_stem_extension += (diff * i);\n          } else { // beam overshoots note, account for the difference\n            total_stem_extension += (y_px - slope_y_px) * this.stem_direction;\n          }\n\n        }\n\n        var last_note = this.notes[this.notes.length - 1];\n        var first_last_slope = ((last_note.getStemExtents().topY - first_y_px) /\n                (last_note.getStemX() - first_x_px));\n        // most engraving books suggest aiming for a slope about half the angle of the\n        // difference between the first and last notes' stem length;\n        var ideal_slope = first_last_slope / 2;\n        var distance_from_ideal = Math.abs(ideal_slope - slope);\n\n        // This tries to align most beams to something closer to the ideal_slope, but\n        // doesn't go crazy. To disable, set this.render_options.slope_cost = 0\n        var cost = this.render_options.slope_cost * distance_from_ideal +\n            Math.abs(total_stem_extension);\n\n        // update state when a more ideal slope is found\n        if (cost < min_cost) {\n          min_cost = cost;\n          best_slope = slope;\n          y_shift = y_shift_tmp;\n        }\n      }\n\n      this.slope = best_slope;\n      this.y_shift = y_shift;\n    },\n\n    // Create new stems for the notes in the beam, so that each stem\n    // extends into the beams.\n    applyStemExtensions: function(){\n      var first_note = this.notes[0];\n      var first_y_px = first_note.getStemExtents().topY;\n      var first_x_px = first_note.getStemX();\n\n      for (var i = 0; i < this.notes.length; ++i) {\n        var note = this.notes[i];\n\n        var x_px = note.getStemX();\n        var y_extents = note.getStemExtents();\n        var base_y_px = y_extents.baseY;\n        var top_y_px = y_extents.topY;\n\n        // For harmonic note heads, shorten stem length by 3 pixels\n        base_y_px += this.stem_direction * note.glyph.stem_offset;\n\n        // Don't go all the way to the top (for thicker stems)\n        var y_displacement = Vex.Flow.STEM_WIDTH;\n\n        if (!note.hasStem()) {\n          if (note.isRest() && this.render_options.show_stemlets) {\n            var centerGlyphX = note.getCenterGlyphX();\n\n            var width = this.render_options.beam_width;\n            var total_width = ((this.beam_count - 1)* width * 1.5) + width;\n\n            var stemlet_height = (total_width - y_displacement +\n              this.render_options.stemlet_extension);\n\n            var beam_y = this.getSlopeY(centerGlyphX, first_x_px,\n                            first_y_px, this.slope) + this.y_shift;\n            var start_y = beam_y + (Vex.Flow.Stem.HEIGHT * this.stem_direction);\n            var end_y = beam_y + (stemlet_height * this.stem_direction);\n\n            // Draw Stemlet\n            note.setStem(new Vex.Flow.Stem({\n              x_begin: centerGlyphX,\n              x_end: centerGlyphX,\n              y_bottom: this.stem_direction === 1 ? end_y : start_y,\n              y_top: this.stem_direction === 1 ? start_y : end_y,\n              y_extend: y_displacement,\n              stem_extension: -1, // To avoid protruding through the beam\n              stem_direction: this.stem_direction\n            }));\n          }\n\n          continue;\n        }\n\n        var slope_y = this.getSlopeY(x_px, first_x_px, first_y_px,\n                        this.slope) + this.y_shift;\n\n        note.setStem(new Vex.Flow.Stem({\n          x_begin: x_px - (Vex.Flow.STEM_WIDTH/2),\n          x_end: x_px,\n          y_top: this.stem_direction === 1 ? top_y_px : base_y_px,\n          y_bottom: this.stem_direction === 1 ? base_y_px :  top_y_px ,\n          y_extend: y_displacement,\n          stem_extension: Math.abs(top_y_px - slope_y) - Stem.HEIGHT - 1,\n          stem_direction: this.stem_direction\n        }));\n      }\n    },\n\n    // Get the x coordinates for the beam lines of specific `duration`\n    getBeamLines: function(duration) {\n      var beam_lines = [];\n      var beam_started = false;\n      var current_beam;\n      var partial_beam_length = this.render_options.partial_beam_length;\n\n      function determinePartialSide (prev_note, next_note){\n          // Compare beam counts and store differences\n          var unshared_beams = 0;\n          if (next_note && prev_note) {\n            unshared_beams = prev_note.getBeamCount() - next_note.getBeamCount();\n          }\n\n          var left_partial = duration !== \"8\" && unshared_beams > 0;\n          var right_partial = duration !== \"8\" && unshared_beams < 0;\n\n          return {\n            left: left_partial,\n            right: right_partial\n          };\n        }\n\n      for (var i = 0; i < this.notes.length; ++i) {\n        var note = this.notes[i];\n        var prev_note = this.notes[i-1];\n        var next_note = this.notes[i+1];\n        var ticks = note.getIntrinsicTicks();\n        var partial = determinePartialSide(prev_note, next_note);\n        var stem_x = note.isRest() ? note.getCenterGlyphX() : note.getStemX();\n\n        // Check whether to apply beam(s)\n        if (ticks < Vex.Flow.durationToTicks(duration)) {\n          if (!beam_started) {\n            var new_line = {start: stem_x, end: null};\n\n            if (partial.left) {\n              new_line.end = stem_x - partial_beam_length;\n            }\n\n            beam_lines.push(new_line);\n            beam_started = true;\n          } else {\n            current_beam = beam_lines[beam_lines.length - 1];\n            current_beam.end = stem_x;\n\n            // Should break secondary beams on note\n            var should_break = this.break_on_indices.indexOf(i) !== -1;\n            // Shorter than or eq an 8th note duration\n            var can_break = parseInt(duration, 10) >= 8;\n            if (should_break  && can_break) {\n              beam_started = false;\n            }\n          }\n        } else {\n          if (!beam_started) {\n            // we don't care\n          } else {\n            current_beam = beam_lines[beam_lines.length - 1];\n            if (current_beam.end == null) {\n              // single note\n              current_beam.end = current_beam.start +\n                                 partial_beam_length;\n            } else {\n              // we don't care\n            }\n          }\n\n          beam_started = false;\n        }\n      }\n\n      if (beam_started === true) {\n        current_beam = beam_lines[beam_lines.length - 1];\n        if (current_beam.end == null) {\n          // single note\n          current_beam.end = current_beam.start -\n              partial_beam_length;\n        }\n      }\n\n      return beam_lines;\n    },\n\n    // Render the stems for each notes\n    drawStems: function() {\n      this.notes.forEach(function(note) {\n        if (note.getStem()) {\n          note.getStem().setContext(this.context).draw();\n        }\n      }, this);\n    },\n\n    // Render the beam lines\n    drawBeamLines: function() {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n\n      var valid_beam_durations = [\"4\", \"8\", \"16\", \"32\", \"64\"];\n\n      var first_note = this.notes[0];\n      var last_note = this.notes[this.notes.length - 1];\n\n      var first_y_px = first_note.getStemExtents().topY;\n      var last_y_px = last_note.getStemExtents().topY;\n\n      var first_x_px = first_note.getStemX();\n\n      var beam_width = this.render_options.beam_width * this.stem_direction;\n\n      // Draw the beams.\n      for (var i = 0; i < valid_beam_durations.length; ++i) {\n        var duration = valid_beam_durations[i];\n        var beam_lines = this.getBeamLines(duration);\n\n        for (var j = 0; j < beam_lines.length; ++j) {\n          var beam_line = beam_lines[j];\n          var first_x = beam_line.start - (this.stem_direction == Stem.DOWN ? Vex.Flow.STEM_WIDTH/2:0);\n          var first_y = this.getSlopeY(first_x, first_x_px, first_y_px, this.slope);\n\n          var last_x = beam_line.end +\n            (this.stem_direction == 1 ? (Vex.Flow.STEM_WIDTH/3):(-Vex.Flow.STEM_WIDTH/3));\n          var last_y = this.getSlopeY(last_x, first_x_px, first_y_px, this.slope);\n\n          this.context.beginPath();\n          this.context.moveTo(first_x, first_y + this.y_shift);\n          this.context.lineTo(first_x, first_y + beam_width + this.y_shift);\n          this.context.lineTo(last_x + 1, last_y + beam_width + this.y_shift);\n          this.context.lineTo(last_x + 1, last_y + this.y_shift);\n          this.context.closePath();\n          this.context.fill();\n        }\n\n        first_y_px += beam_width * 1.5;\n        last_y_px += beam_width * 1.5;\n      }\n    },\n\n    // Pre-format the beam\n    preFormat: function() { return this; },\n\n    // Post-format the beam. This can only be called after\n    // the notes in the beam have both `x` and `y` values. ie: they've \n    // been formatted and have staves\n    postFormat: function() {\n      if (this.postFormatted) return;\n\n      this.calculateSlope();\n      this.applyStemExtensions();\n\n      this.postFormatted = true;\n    },\n\n    // Render the beam to the canvas context\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n\n      if (this.unbeamable) return;\n\n      if (!this.postFormatted) {\n        this.postFormat();\n      }\n\n      this.drawStems();\n      this.drawBeamLines();\n\n      return true;\n    }\n  };\n\n  function calculateStemDirection(notes) {\n    var lineSum = 0;\n    notes.forEach(function(note) {\n      if (note.keyProps) {\n        note.keyProps.forEach(function(keyProp){\n          lineSum += (keyProp.line - 3);\n        });\n      }\n    });\n\n    if (lineSum >= 0)\n      return Stem.DOWN;\n    return Stem.UP;\n  }\n\n  // ## Static Methods\n  //\n  // Gets the default beam groups for a provided time signature.\n  // Attempts to guess if the time signature is not found in table.\n  // Currently this is fairly naive.\n  Beam.getDefaultBeamGroups = function(time_sig){\n    if (!time_sig || time_sig == \"c\") time_sig = \"4/4\";\n\n    var defaults = {\n      '1/2' :  ['1/2'],\n      '2/2' :  ['1/2'],\n      '3/2' :  ['1/2'],\n      '4/2' :  ['1/2'],\n\n      '1/4' :  ['1/4'],\n      '2/4' :  ['1/4'],\n      '3/4' :  ['1/4'],\n      '4/4' :  ['1/4'],\n\n      '1/8' :  ['1/8'],\n      '2/8' :  ['2/8'],\n      '3/8' :  ['3/8'],\n      '4/8' :  ['2/8'],\n\n      '1/16' : ['1/16'],\n      '2/16' : ['2/16'],\n      '3/16' : ['3/16'],\n      '4/16' : ['2/16']\n    };\n\n    var Fraction = Vex.Flow.Fraction;\n    var groups = defaults[time_sig];\n\n    if (!groups) {\n      // If no beam groups found, naively determine\n      // the beam groupings from the time signature\n      var beatTotal = parseInt(time_sig.split('/')[0], 10);\n      var beatValue = parseInt(time_sig.split('/')[1], 10);\n\n      var tripleMeter = beatTotal % 3 === 0;\n\n      if (tripleMeter) {\n        return [new Fraction(3, beatValue)];\n      } else if (beatValue > 4) {\n        return [new Fraction(2, beatValue)];\n      } else if (beatValue <= 4) {\n        return [new Fraction(1, beatValue)];\n      }\n    } else {\n      return groups.map(function(group) {\n        return new Fraction().parse(group);\n      });\n    }\n  };\n\n  // A helper function to automatically build basic beams for a voice. For more\n  // complex auto-beaming use `Beam.generateBeams()`.\n  //\n  // Parameters:\n  // * `voice` - The voice to generate the beams for\n  // * `stem_direction` - A stem direction to apply to the entire voice\n  // * `groups` - An array of `Fraction` representing beat groupings for the beam\n  Beam.applyAndGetBeams = function(voice, stem_direction, groups) {\n    return Beam.generateBeams(voice.getTickables(), {\n      groups: groups,\n      stem_direction: stem_direction\n    });\n  };\n\n  // A helper function to autimatically build beams for a voice with\n  // configuration options.\n  //\n  // Example configuration object:\n  //\n  // ```\n  // config = {\n  //   groups: [new Vex.Flow.Fraction(2, 8)],\n  //   stem_direction: -1,\n  //   beam_rests: true,\n  //   beam_middle_only: true,\n  //   show_stemlets: false\n  // };\n  // ```\n  //\n  // Parameters:\n  // * `notes` - An array of notes to create the beams for\n  // * `config` - The configuration object\n  //    * `groups` - Array of `Fractions` that represent the beat structure to beam the notes\n  //    * `stem_direction` - Set to apply the same direction to all notes\n  //    * `beam_rests` - Set to `true` to include rests in the beams\n  //    * `beam_middle_only` - Set to `true` to only beam rests in the middle of the beat\n  //    * `show_stemlets` - Set to `true` to draw stemlets for rests\n  //    * `maintain_stem_directions` - Set to `true` to not apply new stem directions\n  //\n  Beam.generateBeams = function(notes, config) {\n\n    if (!config) config = {};\n\n    if (!config.groups || !config.groups.length) {\n      config.groups = [new Vex.Flow.Fraction(2, 8)];\n    }\n\n    // Convert beam groups to tick amounts\n    var tickGroups = config.groups.map(function(group) {\n      if (!group.multiply) {\n        throw new Vex.RuntimeError(\"InvalidBeamGroups\",\n          \"The beam groups must be an array of Vex.Flow.Fractions\");\n      }\n      return group.clone().multiply(Vex.Flow.RESOLUTION, 1);\n    });\n\n    var unprocessedNotes = notes;\n    var currentTickGroup = 0;\n    var noteGroups       = [];\n    var currentGroup     = [];\n\n    function getTotalTicks(vf_notes){\n      return vf_notes.reduce(function(memo,note){\n        return note.getTicks().clone().add(memo);\n      }, new Vex.Flow.Fraction(0, 1));\n    }\n\n    function nextTickGroup() {\n      if (tickGroups.length - 1 > currentTickGroup) {\n        currentTickGroup += 1;\n      } else {\n        currentTickGroup = 0;\n      }\n    }\n\n    function createGroups(){\n      var nextGroup = [];\n\n      unprocessedNotes.forEach(function(unprocessedNote){\n        nextGroup    = [];\n        if (unprocessedNote.shouldIgnoreTicks()) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          return; // Ignore untickables (like bar notes)\n        }\n\n        currentGroup.push(unprocessedNote);\n        var ticksPerGroup = tickGroups[currentTickGroup].clone();\n        var totalTicks = getTotalTicks(currentGroup);\n\n        // Double the amount of ticks in a group, if it's an unbeamable tuplet\n        var unbeamable = Vex.Flow.durationToNumber(unprocessedNote.duration) < 8;\n        if (unbeamable && unprocessedNote.tuplet) {\n          ticksPerGroup.numerator *= 2;\n        }\n\n        // If the note that was just added overflows the group tick total\n        if (totalTicks.greaterThan(ticksPerGroup)) {\n          // If the overflow note can be beamed, start the next group\n          // with it. Unbeamable notes leave the group overflowed.\n          if (!unbeamable) {\n            nextGroup.push(currentGroup.pop());\n          }\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        } else if (totalTicks.equals(ticksPerGroup)) {\n          noteGroups.push(currentGroup);\n          currentGroup = nextGroup;\n          nextTickGroup();\n        }\n      });\n\n      // Adds any remainder notes\n      if (currentGroup.length > 0)\n        noteGroups.push(currentGroup);\n    }\n\n    function getBeamGroups() {\n      return noteGroups.filter(function(group){\n          if (group.length > 1) {\n            var beamable = true;\n            group.forEach(function(note) {\n              if (note.getIntrinsicTicks() >= Vex.Flow.durationToTicks(\"4\")) {\n                beamable = false;\n              }\n            });\n            return beamable;\n          }\n          return false;\n      });\n    }\n\n    // Splits up groups by Rest\n    function sanitizeGroups() {\n      var sanitizedGroups = [];\n      noteGroups.forEach(function(group) {\n        var tempGroup = [];\n        group.forEach(function(note, index, group) {\n          var isFirstOrLast = index === 0 || index === group.length - 1;\n          var prevNote = group[index-1];\n\n          var breaksOnEachRest = !config.beam_rests && note.isRest();\n          var breaksOnFirstOrLastRest = (config.beam_rests &&\n            config.beam_middle_only && note.isRest() && isFirstOrLast);\n\n          var breakOnStemChange = false;\n          if (config.maintain_stem_directions && prevNote &&\n              !note.isRest() && !prevNote.isRest()) {\n            var prevDirection = prevNote.getStemDirection();\n            var currentDirection = note.getStemDirection();\n            breakOnStemChange = currentDirection !== prevDirection;\n          }\n\n          var isUnbeamableDuration = parseInt(note.duration, 10) < 8;\n\n          // Determine if the group should be broken at this note\n          var shouldBreak = breaksOnEachRest || breaksOnFirstOrLastRest ||\n                            breakOnStemChange || isUnbeamableDuration;\n\n          if (shouldBreak) {\n            // Add current group\n            if (tempGroup.length > 0) {\n              sanitizedGroups.push(tempGroup);\n            }\n\n            // Start a new group. Include the current note if the group\n            // was broken up by stem direction, as that note needs to start\n            // the next group of notes\n            tempGroup = breakOnStemChange ? [note] : [];\n          } else {\n            // Add note to group\n            tempGroup.push(note);\n          }\n        });\n\n        // If there is a remaining group, add it as well\n        if (tempGroup.length > 0) {\n          sanitizedGroups.push(tempGroup);\n        }\n      });\n\n      noteGroups = sanitizedGroups;\n    }\n\n    function formatStems() {\n      noteGroups.forEach(function(group){\n        var stemDirection;\n        if (config.maintain_stem_directions) {\n          var note = findFirstNote(group);\n          stemDirection = note ? note.getStemDirection() : Stem.UP;\n        } else {\n          if (config.stem_direction){\n            stemDirection = config.stem_direction;\n          } else {\n            stemDirection = calculateStemDirection(group);\n          }\n        }\n        applyStemDirection(group, stemDirection);\n      });\n    }\n\n    function findFirstNote(group) {\n      for (var i = 0; i < group.length; i++) {\n        var note = group[i];\n        if (!note.isRest()) {\n          return note;\n        }\n      }\n\n      return false;\n    }\n\n    function applyStemDirection(group, direction) {\n      group.forEach(function(note){\n        note.setStemDirection(direction);\n      });\n    }\n\n    function getTupletGroups() {\n      return noteGroups.filter(function(group){\n        if (group[0]) return group[0].tuplet;\n      });\n    }\n\n\n    // Using closures to store the variables throughout the various functions\n    // IMO Keeps it this process lot cleaner - but not super consistent with\n    // the rest of the API's style - Silverwolf90 (Cyril)\n    createGroups();\n    sanitizeGroups();\n    formatStems();\n\n    // Get the notes to be beamed\n    var beamedNoteGroups = getBeamGroups();\n\n    // Get the tuplets in order to format them accurately\n    var tupletGroups = getTupletGroups();\n\n    // Create a Vex.Flow.Beam from each group of notes to be beamed\n    var beams = [];\n    beamedNoteGroups.forEach(function(group){\n      var beam = new Vex.Flow.Beam(group);\n\n      if (config.show_stemlets) {\n        beam.render_options.show_stemlets = true;\n      }\n\n      beams.push(beam);\n    });\n\n    // Reformat tuplets\n    tupletGroups.forEach(function(group){\n      var firstNote = group[0];\n      for (var i=0; i<group.length; ++i) {\n        if (group[i].hasStem()) {\n          firstNote = group[i];\n          break;\n        }\n      }\n\n      var tuplet = firstNote.tuplet;\n\n      if (firstNote.beam) tuplet.setBracketed(false);\n      if (firstNote.stem_direction == Stem.DOWN) {\n        tuplet.setTupletLocation(Vex.Flow.Tuplet.LOCATION_BOTTOM);\n      }\n    });\n\n    return beams;\n  };\n\n  return Beam;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the main Voice class. It's mainly a container\n// object to group `Tickables` for formatting.\nVex.Flow.Voice = (function() {\n  function Voice(time) {\n    if (arguments.length > 0) this.init(time);\n  }\n\n  // Modes allow the addition of ticks in three different ways:\n  //\n  // STRICT: This is the default. Ticks must fill the voice.\n  // SOFT:   Ticks can be added without restrictions.\n  // FULL:   Ticks do not need to fill the voice, but can't exceed the maximum\n  //         tick length.\n  Voice.Mode = {\n    STRICT: 1,\n    SOFT:   2,\n    FULL:   3\n  };\n\n  // ## Prototype Methods\n  Voice.prototype = {\n    init: function(time) {\n      this.time = Vex.Merge({\n        num_beats: 4,\n        beat_value: 4,\n        resolution: Vex.Flow.RESOLUTION\n      }, time);\n\n      // Recalculate total ticks.\n      this.totalTicks = new Vex.Flow.Fraction(\n        this.time.num_beats * (this.time.resolution / this.time.beat_value), 1);\n\n      this.resolutionMultiplier = 1;\n\n      // Set defaults\n      this.tickables = [];\n      this.ticksUsed = new Vex.Flow.Fraction(0, 1);\n      this.smallestTickCount = this.totalTicks.clone();\n      this.largestTickWidth = 0;\n      this.stave = null;\n      this.boundingBox = null;\n      // Do we care about strictly timed notes\n      this.mode = Vex.Flow.Voice.Mode.STRICT;\n\n      // This must belong to a VoiceGroup\n      this.voiceGroup = null;\n    },\n\n    // Get the total ticks in the voice\n    getTotalTicks: function() { return this.totalTicks; },\n\n    // Get the total ticks used in the voice by all the tickables\n    getTicksUsed: function() { return this.ticksUsed; },\n\n    // Get the largest width of all the tickables\n    getLargestTickWidth: function() { return this.largestTickWidth; },\n\n    // Get the tick count for the shortest tickable\n    getSmallestTickCount: function() { return this.smallestTickCount; },\n\n    // Get the tickables in the voice\n    getTickables: function() { return this.tickables; },\n\n    // Get/set the voice mode, use a value from `Voice.Mode`\n    getMode: function() { return this.mode; },\n    setMode: function(mode) { this.mode = mode; return this; },\n\n    // Get the resolution multiplier for the voice\n    getResolutionMultiplier: function() { return this.resolutionMultiplier; },\n\n    // Get the actual tick resolution for the voice\n    getActualResolution: function() { return this.resolutionMultiplier * this.time.resolution; },\n\n    // Set the voice's stave\n    setStave: function(stave) {\n      this.stave = stave;\n      this.boundingBox = null; // Reset bounding box so we can reformat\n      return this;\n    },\n\n    // Get the bounding box for the voice\n    getBoundingBox: function() {\n      var stave, boundingBox, bb, i;\n\n      if (!this.boundingBox) {\n        if (!this.stave) throw Vex.RERR(\"NoStave\", \"Can't get bounding box without stave.\");\n        stave = this.stave;\n        boundingBox = null;\n\n        for (i = 0; i < this.tickables.length; ++i) {\n          this.tickables[i].setStave(stave);\n\n          bb = this.tickables[i].getBoundingBox();\n          if (!bb) continue;\n\n          boundingBox = boundingBox ? boundingBox.mergeWith(bb) : bb;\n        }\n\n        this.boundingBox = boundingBox;\n      }\n      return this.boundingBox;\n    },\n\n    // Every tickable must be associated with a voiceGroup. This allows formatters\n    // and preformatters to associate them with the right modifierContexts.\n    getVoiceGroup: function() {\n      if (!this.voiceGroup)\n        throw new Vex.RERR(\"NoVoiceGroup\", \"No voice group for voice.\");\n      return this.voiceGroup;\n    },\n\n    // Set the voice group\n    setVoiceGroup: function(g) { this.voiceGroup = g; return this; },\n\n    // Set the voice mode to strict or soft \n    setStrict: function(strict) {\n      this.mode = strict ? Vex.Flow.Voice.Mode.STRICT : Vex.Flow.Voice.Mode.SOFT;\n      return this;\n    },\n\n    // Determine if the voice is complete according to the voice mode\n    isComplete: function() {\n      if (this.mode == Vex.Flow.Voice.Mode.STRICT ||\n          this.mode == Vex.Flow.Voice.Mode.FULL) {\n        return this.ticksUsed.equals(this.totalTicks);\n      } else {\n        return true;\n      }\n    },\n\n    // Add a tickable to the voice\n    addTickable: function(tickable) {\n      if (!tickable.shouldIgnoreTicks()) {\n        var ticks = tickable.getTicks();\n\n        // Update the total ticks for this line.\n        this.ticksUsed.add(ticks);\n\n        if ((this.mode == Vex.Flow.Voice.Mode.STRICT ||\n             this.mode == Vex.Flow.Voice.Mode.FULL) &&\n             this.ticksUsed.greaterThan(this.totalTicks)) {\n          this.totalTicks.subtract(ticks);\n          throw new Vex.RERR(\"BadArgument\", \"Too many ticks.\");\n        }\n\n        // Track the smallest tickable for formatting.\n        if (ticks.lessThan(this.smallestTickCount)) {\n          this.smallestTickCount = ticks.clone();\n        }\n\n        this.resolutionMultiplier = this.ticksUsed.denominator;\n\n        // Expand total ticks using denominator from ticks used.\n        this.totalTicks.add(0, this.ticksUsed.denominator);\n      }\n\n      // Add the tickable to the line.\n      this.tickables.push(tickable);\n      tickable.setVoice(this);\n      return this;\n    },\n\n    // Add an array of tickables to the voice.\n    addTickables: function(tickables) {\n      for (var i = 0; i < tickables.length; ++i) {\n        this.addTickable(tickables[i]);\n      }\n\n      return this;\n    },\n\n    // Preformats the voice by applying the voice's stave to each note.\n    preFormat: function(){\n      if (this.preFormatted) return;\n\n      this.tickables.forEach(function(tickable) {\n        if (!tickable.getStave()) {\n          tickable.setStave(this.stave);\n        }\n      }, this);\n\n      this.preFormatted = true;\n      return this;\n    },\n\n    // Render the voice onto the canvas `context` and an optional `stave`.\n    // If `stave` is omitted, it is expected that the notes have staves\n    // already set.\n    draw: function(context, stave) {\n      var boundingBox = null;\n      for (var i = 0; i < this.tickables.length; ++i) {\n        var tickable = this.tickables[i];\n\n        // Set the stave if provided\n        if (stave) tickable.setStave(stave);\n\n        if (!tickable.getStave()) {\n          throw new Vex.RuntimeError(\"MissingStave\",\n            \"The voice cannot draw tickables without staves.\");\n        }\n\n        if (i === 0) boundingBox = tickable.getBoundingBox();\n\n        if (i > 0 && boundingBox) {\n          var tickable_bb = tickable.getBoundingBox();\n          if (tickable_bb) boundingBox.mergeWith(tickable_bb);\n        }\n\n       tickable.setContext(context);\n       tickable.draw();\n      }\n\n      this.boundingBox = boundingBox;\n    }\n  };\n\n  return Voice;\n}());\n// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n/** @constructor */\nVex.Flow.VoiceGroup = (function() {\n  function VoiceGroup() {\n    this.init();\n  }\n\n  VoiceGroup.prototype = {\n    init: function() {\n      this.voices = [];\n      this.modifierContexts = [];\n    },\n\n    // Every tickable must be associated with a voiceGroup. This allows formatters\n    // and preformatters to associate them with the right modifierContexts.\n    getVoices: function() { return this.voices; },\n    getModifierContexts: function() { return this.modifierContexts; },\n\n    addVoice: function(voice) {\n      if (!voice) throw new Vex.RERR(\"BadArguments\", \"Voice cannot be null.\");\n      this.voices.push(voice);\n      voice.setVoiceGroup(this);\n    }\n  };\n\n  return VoiceGroup;\n}());\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `Modifier` is an abstract interface for notational elements that modify\n// a `Note`. Examples of modifiers are `Accidental`, `Annotation`, `Stroke`, etc.\n//\n// For a `Modifier` instance to be positioned correctly, it must be part of\n// a `ModifierContext`. All modifiers in the same context are rendered relative to\n// one another.\n//\n// Typically, all modifiers to a note are part of the same `ModifierContext` instance. Also,\n// in multi-voice staves, all modifiers to notes on the same `tick` are part of the same\n// `ModifierContext`. This ensures that multiple voices don't trample all over each other.\n\nVex.Flow.Modifier = (function() {\n  function Modifier() {\n    this.constructor = Modifier;\n    this.init();\n  }\n  Modifier.CATEGORY = \"none\";\n\n    // To enable logging for this class. Set `Vex.Flow.Modifier.DEBUG` to `true`.\n  function L() { if (Modifier.DEBUG) Vex.L(\"Vex.Flow.Modifier\", arguments); }\n\n  // Modifiers can be positioned almost anywhere, relative to a note.\n  Modifier.Position = {\n    LEFT: 1,\n    RIGHT: 2,\n    ABOVE: 3,\n    BELOW: 4\n  };\n\n  // ## Prototype Methods\n  Modifier.prototype = {\n\n    // The constructor sets initial widths and constants.\n    init: function() {\n      this.width = 0;\n      this.context = null;\n\n      // Modifiers are attached to a note and an index. An index is a\n      // specific head in a chord.\n      this.note = null;\n      this.index = null;\n\n      // The `text_line` is reserved space above or below a stave.\n      this.text_line = 0;\n      this.position = Modifier.Position.LEFT;\n      this.modifier_context = null;\n      this.x_shift = 0;\n      this.y_shift = 0;\n      L(\"Created new modifier\");\n    },\n\n    // Every modifier has a category. The `ModifierContext` uses this to determine\n    // the type and order of the modifiers.\n    getCategory: function() { return this.constructor.CATEGORY; },\n\n    // Get and set modifier widths.\n    getWidth: function() { return this.width; },\n    setWidth: function(width) { this.width = width; return this; },\n\n    // Get and set attached note (`StaveNote`, `TabNote`, etc.)\n    getNote: function() { return this.note; },\n    setNote: function(note) { this.note = note; return this; },\n\n    // Get and set note index, which is a specific note in a chord.\n    getIndex: function() { return this.index; },\n    setIndex: function(index) { this.index = index; return this; },\n\n    // Get and set rendering context.\n    getContext: function() { return this.context; },\n    setContext: function(context) { this.context = context; return this; },\n\n    // Every modifier must be part of a `ModifierContext`.\n    getModifierContext: function() { return this.modifier_context; },\n    setModifierContext: function(c) { this.modifier_context = c; return this; },\n\n    // Get and set articulation position.\n    getPosition: function() { return this.position; },\n    setPosition: function(position) { this.position = position; return this; },\n\n    // Set the `text_line` for the modifier.\n    setTextLine: function(line) { this.text_line = line; return this; },\n\n    // Shift modifier down `y` pixels. Negative values shift up.\n    setYShift: function(y) { this.y_shift = y; return this; },\n\n    // Shift modifier `x` pixels in the direction of the modifier. Negative values\n    // shift reverse.\n    setXShift: function(x) {\n      this.x_shift = 0;\n      if (this.position == Modifier.Position.LEFT) {\n        this.x_shift -= x;\n      } else {\n        this.x_shift += x;\n      }\n    },\n\n    // Render the modifier onto the canvas.\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n      throw new Vex.RERR(\"MethodNotImplemented\",\n          \"Draw() not implemented for this modifier.\");\n    }\n  };\n\n  return Modifier;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements various types of modifiers to notes (e.g. bends,\n// fingering positions etc.)\n\nVex.Flow.ModifierContext = (function() {\n  function ModifierContext() {\n    // Current modifiers\n    this.modifiers = {};\n\n    // Formatting data.\n    this.preFormatted = false;\n    this.postFormatted = false;\n    this.width = 0;\n    this.spacing = 0;\n    this.state = {\n      left_shift: 0,\n      right_shift: 0,\n      text_line: 0\n    };\n\n    // Add new modifiers to this array. The ordering is significant -- lower\n    // modifiers are formatted and rendered before higher ones.\n    this.PREFORMAT = [\n      Vex.Flow.StaveNote,\n      Vex.Flow.Dot,\n      Vex.Flow.FretHandFinger,\n      Vex.Flow.Accidental,\n      Vex.Flow.GraceNoteGroup,\n      Vex.Flow.Stroke,\n      Vex.Flow.StringNumber,\n      Vex.Flow.Articulation,\n      Vex.Flow.Ornament,\n      Vex.Flow.Annotation,\n      Vex.Flow.Bend,\n      Vex.Flow.Vibrato\n    ];\n\n    // If post-formatting is required for an element, add it to this array.\n    this.POSTFORMAT = [ Vex.Flow.StaveNote ];\n  }\n\n  // To enable logging for this class. Set `Vex.Flow.ModifierContext.DEBUG` to `true`.\n  function L() { if (ModifierContext.DEBUG) Vex.L(\"Vex.Flow.ModifierContext\", arguments); }\n\n  ModifierContext.prototype = {\n    addModifier: function(modifier) {\n      var type = modifier.getCategory();\n      if (!this.modifiers[type]) this.modifiers[type] = [];\n      this.modifiers[type].push(modifier);\n      modifier.setModifierContext(this);\n      this.preFormatted = false;\n      return this;\n    },\n\n    getModifiers: function(type) { return this.modifiers[type]; },\n    getWidth: function() { return this.width; },\n    getExtraLeftPx: function() { return this.state.left_shift; },\n    getExtraRightPx: function() { return this.state.right_shift; },\n    getState: function() { return this.state; },\n\n    getMetrics: function() {\n      if (!this.formatted) throw new Vex.RERR(\"UnformattedModifier\",\n          \"Unformatted modifier has no metrics.\");\n\n      return {\n        width: this.state.left_shift + this.state.right_shift + this.spacing,\n        spacing: this.spacing,\n        extra_left_px: this.state.left_shift,\n        extra_right_px: this.state.right_shift\n      };\n    },\n\n    preFormat: function() {\n      if (this.preFormatted) return;\n      this.PREFORMAT.forEach(function(modifier) {\n        L(\"Preformatting ModifierContext: \", modifier.CATEGORY);\n        modifier.format(this.getModifiers(modifier.CATEGORY), this.state, this);\n      }, this);\n\n      // Update width of this modifier context\n      this.width = this.state.left_shift + this.state.right_shift;\n      this.preFormatted = true;\n    },\n\n    postFormat: function() {\n      if (this.postFormatted) return;\n      this.POSTFORMAT.forEach(function(modifier) {\n        L(\"Postformatting ModifierContext: \", modifier.CATEGORY);\n        modifier.postFormat(this.getModifiers(modifier.CATEGORY), this);\n      }, this);\n    }\n  };\n\n  return ModifierContext;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements accidentals as modifiers that can be attached to\n// notes. Support is included for both western and microtonal accidentals.\n//\n// See `tests/accidental_tests.js` for usage examples.\n\nVex.Flow.Accidental = (function(){\n  function Accidental(type) {\n    if (arguments.length > 0) this.init(type);\n  }\n  Accidental.CATEGORY = \"accidentals\";\n\n  // To enable logging for this class. Set `Vex.Flow.Accidental.DEBUG` to `true`.\n  function L() { if (Accidental.DEBUG) Vex.L(\"Vex.Flow.Accidental\", arguments); }\n\n  var Modifier = Vex.Flow.Modifier;\n\n  // ## Static Methods\n  //\n  // Arrange accidentals inside a ModifierContext.\n  Accidental.format = function(accidentals, state) {\n    var left_shift = state.left_shift;\n    var accidental_spacing = 2;\n\n    if (!accidentals || accidentals.length === 0) return false;\n\n    var acc_list = [];\n    var hasStave = false;\n    var prev_note = null;\n    var shiftL = 0;\n\n    var i, acc, props_tmp;\n    for (i = 0; i < accidentals.length; ++i) {\n      acc = accidentals[i];\n      var note = acc.getNote();\n      var stave = note.getStave();\n      var props = note.getKeyProps()[acc.getIndex()];\n      if (note != prev_note) {\n         // Iterate through all notes to get the displaced pixels\n         for (var n = 0; n < note.keys.length; ++n) {\n            props_tmp = note.getKeyProps()[n];\n            shiftL = (props_tmp.displaced ? note.getExtraLeftPx() : shiftL);\n          }\n          prev_note = note;\n      }\n      if (stave != null) {\n        hasStave = true;\n        var line_space = stave.options.spacing_between_lines_px;\n        var y = stave.getYForLine(props.line);\n        acc_list.push({ y: y, shift: shiftL, acc: acc, lineSpace: line_space });\n      } else {\n        acc_list.push({ line: props.line, shift: shiftL, acc: acc });\n      }\n    }\n\n    // If stave assigned, format based on note y-position\n    if (hasStave) return Accidental.formatByY(acc_list, state);\n\n    // Sort accidentals by line number.\n    acc_list.sort(function(a, b) { return (b.line - a.line); });\n\n    // If first note left shift in case it is displaced\n    var acc_shift = acc_list[0].shift;\n    var x_width = 0;\n    var top_line = acc_list[0].line;\n    for (i = 0; i < acc_list.length; ++i) {\n      acc = acc_list[i].acc;\n      var line = acc_list[i].line;\n      var shift = acc_list[i].shift;\n\n      // Once you hit three stave lines, you can reset the position of the\n      // accidental.\n      if (line < top_line - 3.0) {\n        top_line = line;\n        acc_shift = shift;\n      }\n\n      acc.setXShift(left_shift + acc_shift);\n      acc_shift += acc.getWidth() + accidental_spacing; // spacing\n      x_width = (acc_shift > x_width) ? acc_shift : x_width;\n    }\n\n    state.left_shift += x_width;\n  };\n\n  Accidental.formatByY = function(acc_list, state) {\n    var left_shift = state.left_shift;\n    var accidental_spacing = 2;\n\n    // Sort accidentals by Y-position.\n    acc_list.sort(function(a, b) { return (b.y - a.y); });\n\n    // If first note is displaced, get the correct left shift\n    var acc_shift = acc_list[0].shift;\n    var x_width = 0;\n    var top_y = acc_list[0].y;\n\n    for (var i = 0; i < acc_list.length; ++i) {\n      var acc = acc_list[i].acc;\n      var y = acc_list[i].y;\n      var shift = acc_list[i].shift;\n\n      // Once you hit three stave lines, you can reset the position of the\n      // accidental.\n      if (top_y - y > 3 * acc_list[i].lineSpace) {\n        top_y = y;\n        acc_shift = shift;\n      }\n\n      acc.setXShift(acc_shift + left_shift);\n      acc_shift += acc.getWidth() + accidental_spacing; // spacing\n      x_width = (acc_shift > x_width) ? acc_shift : x_width;\n    }\n\n    state.left_shift += x_width;\n  };\n\n  // ## Prototype Methods\n  //\n  // An `Accidental` inherits from `Modifier`, and is formatted within a\n  // `ModifierContext`.\n  Vex.Inherit(Accidental, Modifier, {\n    // Create accidental. `type` can be a value from the\n    // `Vex.Flow.accidentalCodes.accidentals` table in `tables.js`. For\n    // example: `#`, `##`, `b`, `n`, etc.\n    init: function(type) {\n      Accidental.superclass.init.call(this);\n    L(\"New accidental: \", type);\n\n      this.note = null;\n      // The `index` points to a specific note in a chord.\n      this.index = null;\n      this.type = type;\n      this.position = Modifier.Position.LEFT;\n\n      this.render_options = {\n        // Font size for glyphs\n        font_scale: 38,\n\n        // Length of stroke across heads above or below the stave.\n        stroke_px: 3\n      };\n\n      this.accidental = Vex.Flow.accidentalCodes(this.type);\n      if (!this.accidental) throw new Vex.RERR(\"ArgumentError\", \"Unknown accidental type: \" + type);\n\n      // Cautionary accidentals have parentheses around them\n      this.cautionary = false;\n      this.paren_left = null;\n      this.paren_right = null;\n\n      // Initial width is set from table.\n      this.setWidth(this.accidental.width);\n    },\n\n    // Attach this accidental to `note`, which must be a `StaveNote`.\n    setNote: function(note){\n      if (!note) throw new Vex.RERR(\"ArgumentError\", \"Bad note value: \" + note);\n      this.note = note;\n\n      // Accidentals attached to grace notes are rendered smaller.\n      if (this.note.getCategory() === 'gracenotes') {\n        this.render_options.font_scale = 25;\n        this.setWidth(this.accidental.gracenote_width);\n      }\n    },\n\n    // If called, draws parenthesis around accidental.\n    setAsCautionary: function() {\n      this.cautionary = true;\n      this.render_options.font_scale = 28;\n      this.paren_left = Vex.Flow.accidentalCodes(\"{\");\n      this.paren_right = Vex.Flow.accidentalCodes(\"}\");\n      var width_adjust = (this.type == \"##\" || this.type == \"bb\") ? 6 : 4;\n\n      // Make sure `width` accomodates for parentheses.\n      this.setWidth(this.paren_left.width + this.accidental.width + this.paren_right.width - width_adjust);\n      return this;\n    },\n\n    // Render accidental onto canvas.\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw accidental without a context.\");\n      if (!(this.note && (this.index != null))) throw new Vex.RERR(\"NoAttachedNote\",\n        \"Can't draw accidental without a note and index.\");\n\n      // Figure out the start `x` and `y` coordinates for this note and index.\n      var start = this.note.getModifierStartXY(this.position, this.index);\n      var acc_x = (start.x + this.x_shift) - this.width;\n      var acc_y = start.y + this.y_shift;\n      L(\"Rendering: \", this.type, acc_x, acc_y);\n\n      if (!this.cautionary) {\n        // Render the accidental alone.\n        Vex.Flow.renderGlyph(this.context, acc_x, acc_y,\n                             this.render_options.font_scale, this.accidental.code);\n      } else {\n        // Render the accidental in parentheses.\n        acc_x += 3;\n        Vex.Flow.renderGlyph(this.context, acc_x, acc_y,\n                             this.render_options.font_scale, this.paren_left.code);\n        acc_x += 2;\n        Vex.Flow.renderGlyph(this.context, acc_x, acc_y,\n                             this.render_options.font_scale, this.accidental.code);\n        acc_x += this.accidental.width - 2;\n        if (this.type == \"##\" || this.type == \"bb\") acc_x -= 2;\n        Vex.Flow.renderGlyph(this.context, acc_x, acc_y,\n                             this.render_options.font_scale, this.paren_right.code);\n      }\n    }\n  });\n\n  // ## Static Methods\n  //\n  // Use this method to automatically apply accidentals to a set of `voices`.\n  // The accidentals will be remembered between all the voices provided.\n  // Optionally, you can also provide an initial `keySignature`.\n  Accidental.applyAccidentals = function(voices, keySignature) {\n    var tickPositions = [];\n    var tickNoteMap = {};\n\n    // Sort the tickables in each voice by their tick position in the voice\n    voices.forEach(function(voice) {\n      var tickPosition = new Vex.Flow.Fraction(0, 1);\n      var notes = voice.getTickables();\n      notes.forEach(function(note) {\n        var notesAtPosition = tickNoteMap[tickPosition.value()];\n\n        if (!notesAtPosition) {\n          tickPositions.push(tickPosition.value());\n          tickNoteMap[tickPosition.value()] = [note];\n        } else {\n          notesAtPosition.push(note);\n        }\n\n        tickPosition.add(note.getTicks());\n      });\n    });\n\n    var music = new Vex.Flow.Music();\n\n    // Default key signature is C major\n    if (!keySignature) keySignature = \"C\";\n\n    // Get the scale map, which represents the current state of each pitch\n    var scaleMap = music.createScaleMap(keySignature);\n\n    tickPositions.forEach(function(tick) {\n      var notes = tickNoteMap[tick];\n\n      // Array to store all pitches that modified accidental states\n      // at this tick position\n      var modifiedPitches = [];\n\n      notes.forEach(function(note) {\n          if (note.isRest()) return;\n\n          // Go through each key and determine if an accidental should be\n          // applied\n          note.keys.forEach(function(keyString, keyIndex) {\n              var key = music.getNoteParts(keyString.split('/')[0]);\n\n              // Force a natural for every key without an accidental\n              var accidentalString = key.accidental || \"n\";\n              var pitch = key.root + accidentalString;\n\n              // Determine if the current pitch has the same accidental\n              // as the scale state\n              var sameAccidental = scaleMap[key.root] === pitch;\n\n              // Determine if an identical pitch in the chord already\n              // modified the accidental state\n              var previouslyModified = modifiedPitches.indexOf(pitch) > -1;\n\n              // Add the accidental to the StaveNote\n              if (!sameAccidental || (sameAccidental && previouslyModified)) {\n                  // Modify the scale map so that the root pitch has an\n                  // updated state\n                  scaleMap[key.root] = pitch;\n\n                  // Create the accidental\n                  var accidental = new Vex.Flow.Accidental(accidentalString);\n\n                  // Attach the accidental to the StaveNote\n                  note.addAccidental(keyIndex, accidental);\n\n                  // Add the pitch to list of pitches that modified accidentals\n                  modifiedPitches.push(pitch);\n              }\n          });\n      });\n    });\n  };\n\n  return Accidental;\n}());\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements dot modifiers for notes.\n\n/**\n * @constructor\n */\nVex.Flow.Dot = (function() {\n  function Dot() {\n    this.init();\n  }\n  Dot.CATEGORY = \"dots\";\n\n  var Modifier = Vex.Flow.Modifier;\n\n  // Arrange dots inside a ModifierContext.\n  Dot.format = function(dots, state) {\n    var right_shift = state.right_shift;\n    var dot_spacing = 1;\n\n    if (!dots || dots.length === 0) return false;\n\n    var i, dot, note, shift;\n    var dot_list = [];\n    for (i = 0; i < dots.length; ++i) {\n      dot = dots[i];\n      note = dot.getNote();\n\n      var props;\n      // Only StaveNote has .getKeyProps()\n      if (typeof note.getKeyProps === 'function') {\n        props = note.getKeyProps()[dot.getIndex()];\n        shift = (props.displaced ? note.getExtraRightPx() : 0);\n      } else { // Else it's a TabNote\n        props = { line: 0.5 }; // Shim key props for dot placement\n        shift = 0;\n      }\n\n      dot_list.push({ line: props.line, shift: shift, note: note, dot: dot });\n    }\n\n    // Sort dots by line number.\n    dot_list.sort(function(a, b) { return (b.line - a.line); });\n\n    var dot_shift = right_shift;\n    var x_width = 0;\n    var last_line = null;\n    var last_note = null;\n    var prev_dotted_space = null;\n    var half_shiftY = 0;\n\n    for (i = 0; i < dot_list.length; ++i) {\n      dot = dot_list[i].dot;\n      note = dot_list[i].note;\n      shift = dot_list[i].shift;\n      var line = dot_list[i].line;\n\n      // Reset the position of the dot every line.\n      if (line != last_line || note != last_note) {\n        dot_shift = shift;\n      }\n\n      if (!note.isRest() && line != last_line) {\n        if (Math.abs(line % 1) == 0.5) {\n          // note is on a space, so no dot shift\n          half_shiftY = 0;\n        } else if (!note.isRest()) {\n          // note is on a line, so shift dot to space above the line\n          half_shiftY = 0.5;\n          if (last_note != null &&\n              !last_note.isRest() && last_line - line == 0.5) {\n            // previous note on a space, so shift dot to space below the line\n            half_shiftY = -0.5;\n          } else if (line + half_shiftY == prev_dotted_space) {\n            // previous space is dotted, so shift dot to space below the line\n             half_shiftY = -0.5;\n          }\n        }\n      }\n\n      // convert half_shiftY to a multiplier for dots.draw()\n      dot.dot_shiftY += (-half_shiftY);\n      prev_dotted_space = line + half_shiftY;\n\n      dot.setXShift(dot_shift);\n      dot_shift += dot.getWidth() + dot_spacing; // spacing\n      x_width = (dot_shift > x_width) ? dot_shift : x_width;\n      last_line = line;\n      last_note = note;\n    }\n\n    // Update state.\n    state.right_shift += x_width;\n  };\n\n  Vex.Inherit(Dot, Modifier, {\n    init: function() {\n      Dot.superclass.init.call(this);\n\n      this.note = null;\n      this.index = null;\n      this.position = Modifier.Position.RIGHT;\n\n      this.radius = 2;\n      this.setWidth(5);\n      this.dot_shiftY = 0;\n    },\n\n    setNote: function(note){\n      this.note = note;\n\n      if (this.note.getCategory() === 'gracenotes') {\n        this.radius *= 0.50;\n        this.setWidth(3);\n      }\n    },\n\n    setDotShiftY: function(y) { this.dot_shiftY = y; return this; },\n\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw dot without a context.\");\n      if (!(this.note && (this.index != null))) throw new Vex.RERR(\"NoAttachedNote\",\n        \"Can't draw dot without a note and index.\");\n\n      var line_space = this.note.stave.options.spacing_between_lines_px;\n\n      var start = this.note.getModifierStartXY(this.position, this.index);\n\n      // Set the starting y coordinate to the base of the stem for TabNotes\n      if (this.note.getCategory() === 'tabnotes') {\n        start.y = this.note.getStemExtents().baseY;\n      }\n\n      var dot_x = (start.x + this.x_shift) + this.width - this.radius;\n      var dot_y = start.y + this.y_shift + (this.dot_shiftY * line_space);\n      var ctx = this.context;\n\n      ctx.beginPath();\n      ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n      ctx.fill();\n    }\n  });\n\n  return Dot;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the formatting and layout algorithms that are used\n// to position notes in a voice. The algorithm can align multiple voices both\n// within a stave, and across multiple staves.\n//\n// To do this, the formatter breaks up voices into a grid of rational-valued\n// `ticks`, to which each note is assigned. Then, minimum widths are assigned\n// to each tick based on the widths of the notes and modifiers in that tick. This\n// establishes the smallest amount of space required for each tick.\n//\n// Finally, the formatter distributes the left over space proportionally to\n// all the ticks, setting the `x` values of the notes in each tick.\n//\n// See `tests/formatter_tests.js` for usage examples. The helper functions included\n// here (`FormatAndDraw`, `FormatAndDrawTab`) also serve as useful usage examples.\n\nVex.Flow.Formatter = (function() {\n  function Formatter() {\n    // Minimum width required to render all the notes in the voices.\n    this.minTotalWidth = 0;\n\n    // This is set to `true` after `minTotalWidth` is calculated.\n    this.hasMinTotalWidth = false;\n\n    // The suggested amount of space for each tick.\n    this.pixelsPerTick = 0;\n\n    // Total number of ticks in the voice.\n    this.totalTicks = new Vex.Flow.Fraction(0, 1);\n\n    // Arrays of tick and modifier contexts.\n    this.tContexts = null;\n    this.mContexts = null;\n  }\n\n  // To enable logging for this class. Set `Vex.Flow.Formatter.DEBUG` to `true`.\n  function L() { if (Formatter.DEBUG) Vex.L(\"Vex.Flow.Formatter\", arguments); }\n\n  // ## Private Helpers\n  //\n  // Helper function to locate the next non-rest note(s).\n  function lookAhead(notes, rest_line, i, compare) {\n    // If no valid next note group, next_rest_line is same as current.\n    var next_rest_line = rest_line;\n\n    // Get the rest line for next valid non-rest note group.\n    i++;\n    while (i < notes.length) {\n      if (!notes[i].isRest() && !notes[i].shouldIgnoreTicks()) {\n        next_rest_line = notes[i].getLineForRest();\n        break;\n      }\n      i++;\n    }\n\n    // Locate the mid point between two lines.\n    if (compare && rest_line != next_rest_line) {\n      var top = Vex.Max(rest_line, next_rest_line);\n      var bot = Vex.Min(rest_line, next_rest_line);\n      next_rest_line = Vex.MidLine(top, bot);\n    }\n    return next_rest_line;\n  }\n\n  // Take an array of `voices` and place aligned tickables in the same context. Returns\n  // a mapping from `tick` to `context_type`, a list of `tick`s, and the resolution\n  // multiplier.\n  //\n  // Params:\n  // * `voices`: Array of `Voice` instances.\n  // * `context_type`: A context class (e.g., `ModifierContext`, `TickContext`)\n  // * `add_fn`: Function to add tickable to context.\n  function createContexts(voices, context_type, add_fn) {\n    if (!voices || !voices.length) throw new Vex.RERR(\"BadArgument\",\n        \"No voices to format\");\n\n    // Initialize tick maps.\n    var totalTicks = voices[0].getTotalTicks();\n    var tickToContextMap = {};\n    var tickList = [];\n    var contexts = [];\n\n    var resolutionMultiplier = 1;\n\n    // Find out highest common multiple of resolution multipliers.\n    // The purpose of this is to find out a common denominator\n    // for all fractional tick values in all tickables of all voices,\n    // so that the values can be expanded and the numerator used\n    // as an integer tick value.\n    var i; // shared iterator\n    var voice;\n    for (i = 0; i < voices.length; ++i) {\n      voice = voices[i];\n      if (!(voice.getTotalTicks().equals(totalTicks))) {\n        throw new Vex.RERR(\"TickMismatch\",\n            \"Voices should have same total note duration in ticks.\");\n      }\n\n      if (voice.getMode() == Vex.Flow.Voice.Mode.STRICT && !voice.isComplete())\n        throw new Vex.RERR(\"IncompleteVoice\",\n          \"Voice does not have enough notes.\");\n\n      var lcm = Vex.Flow.Fraction.LCM(resolutionMultiplier,\n          voice.getResolutionMultiplier());\n      if (resolutionMultiplier < lcm) {\n        resolutionMultiplier = lcm;\n      }\n    }\n\n    // For each voice, extract notes and create a context for every\n    // new tick that hasn't been seen before.\n    for (i = 0; i < voices.length; ++i) {\n      voice = voices[i];\n\n      var tickables = voice.getTickables();\n\n      // Use resolution multiplier as denominator to expand ticks\n      // to suitable integer values, so that no additional expansion\n      // of fractional tick values is needed.\n      var ticksUsed = new Vex.Flow.Fraction(0, resolutionMultiplier);\n\n      for (var j = 0; j < tickables.length; ++j) {\n        var tickable = tickables[j];\n        var integerTicks = ticksUsed.numerator;\n\n        // If we have no tick context for this tick, create one.\n        if (!tickToContextMap[integerTicks]) {\n          var newContext = new context_type();\n          contexts.push(newContext);\n          tickToContextMap[integerTicks] = newContext;\n        }\n\n        // Add this tickable to the TickContext.\n        add_fn(tickable, tickToContextMap[integerTicks]);\n\n        // Maintain a sorted list of tick contexts.\n        tickList.push(integerTicks);\n        ticksUsed.add(tickable.getTicks());\n      }\n    }\n\n    return {\n      map: tickToContextMap,\n      array: contexts,\n      list: Vex.SortAndUnique(tickList, function(a, b) { return a - b; },\n          function(a, b) { return a === b; } ),\n      resolutionMultiplier: resolutionMultiplier\n    };\n  }\n\n\n  // ## Static Methods\n  //\n  // Helper function to format and draw a single voice. Returns a bounding\n  // box for the notation.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `stave` - The stave to which to draw (`Stave` or `TabStave`)\n  // * `notes` - Array of `Note` instances (`StaveNote`, `TextNote`, `TabNote`, etc.)\n  // * `params` - One of below:\n  //    * Setting `autobeam` only `(context, stave, notes, true)` or `(ctx, stave, notes, {autobeam: true})`\n  //    * Setting `align_rests` a struct is needed `(context, stave, notes, {align_rests: true})`\n  //    * Setting both a struct is needed `(context, stave, notes, {autobeam: true, align_rests: true})`\n  //\n  // `autobeam` automatically generates beams for the notes.\n  // `align_rests` aligns rests with nearby notes.\n  Formatter.FormatAndDraw = function(ctx, stave, notes, params) {\n    var opts = {\n      auto_beam: false,\n      align_rests: false\n    };\n\n    if (typeof params == \"object\") {\n      Vex.Merge(opts, params);\n    } else if (typeof params == \"boolean\") {\n      opts.auto_beam = params;\n    }\n\n    // Start by creating a voice and adding all the notes to it.\n    var voice = new Vex.Flow.Voice(Vex.Flow.TIME4_4).\n      setMode(Vex.Flow.Voice.Mode.SOFT);\n    voice.addTickables(notes);\n\n    // Then create beams, if requested.\n    var beams = null;\n    if (opts.auto_beam) {\n      beams = Vex.Flow.Beam.applyAndGetBeams(voice);\n    }\n\n    // Instantiate a `Formatter` and format the notes.\n    new Formatter().\n      joinVoices([voice], {align_rests: opts.align_rests}).\n      formatToStave([voice], stave, {align_rests: opts.align_rests});\n\n    // Render the voice and beams to the stave.\n    voice.setStave(stave);\n    voice.draw(ctx, stave);\n    if (beams != null) {\n      for (var i=0; i<beams.length; ++i) {\n        beams[i].setContext(ctx).draw();\n      }\n    }\n\n    // Return the bounding box of the voice.\n    return voice.getBoundingBox();\n  };\n\n  // Helper function to format and draw aligned tab and stave notes in two\n  // separate staves.\n  //\n  // Parameters:\n  // * `ctx` - The rendering context\n  // * `tabstave` - A `TabStave` instance on which to render `TabNote`s.\n  // * `stave` - A `Stave` instance on which to render `Note`s.\n  // * `notes` - Array of `Note` instances for the stave (`StaveNote`, `BarNote`, etc.)\n  // * `tabnotes` - Array of `Note` instances for the tab stave (`TabNote`, `BarNote`, etc.)\n  // * `autobeam` - Automatically generate beams.\n  // * `params` - A configuration object:\n  //    * `autobeam` automatically generates beams for the notes.\n  //    * `align_rests` aligns rests with nearby notes.\n  Formatter.FormatAndDrawTab = function(ctx,\n      tabstave, stave, tabnotes, notes, autobeam, params) {\n    var opts = {\n      auto_beam: autobeam,\n      align_rests: false\n    };\n\n    if (typeof params == \"object\") {\n      Vex.Merge(opts, params);\n    } else if (typeof params == \"boolean\") {\n      opts.auto_beam = params;\n    }\n\n    // Create a `4/4` voice for `notes`.\n    var notevoice = new Vex.Flow.Voice(Vex.Flow.TIME4_4).\n      setMode(Vex.Flow.Voice.Mode.SOFT);\n    notevoice.addTickables(notes);\n\n    // Create a `4/4` voice for `tabnotes`.\n    var tabvoice = new Vex.Flow.Voice(Vex.Flow.TIME4_4).\n      setMode(Vex.Flow.Voice.Mode.SOFT);\n    tabvoice.addTickables(tabnotes);\n\n    // Generate beams if requested.\n    var beams = null;\n    if (opts.auto_beam) {\n      beams = Vex.Flow.Beam.applyAndGetBeams(notevoice);\n    }\n\n\n    // Instantiate a `Formatter` and align tab and stave notes.\n    new Formatter().\n      joinVoices([notevoice], {align_rests: opts.align_rests}).\n      joinVoices([tabvoice]).\n      formatToStave([notevoice,tabvoice], stave, {align_rests: opts.align_rests});\n\n    // Render voices and beams to staves.\n    notevoice.draw(ctx, stave);\n    tabvoice.draw(ctx, tabstave);\n    if (beams != null) {\n      for (var i=0; i<beams.length; ++i) {\n        beams[i].setContext(ctx).draw();\n      }\n    }\n\n    // Draw a connector between tab and note staves.\n    (new Vex.Flow.StaveConnector(stave, tabstave)).setContext(ctx).draw();\n  };\n\n  // Auto position rests based on previous/next note positions.\n  //\n  // Params:\n  // * `notes`: An array of notes.\n  // * `align_all_notes`: If set to false, only aligns non-beamed notes.\n  // * `align_tuplets`: If set to false, ignores tuplets.\n  Formatter.AlignRestsToNotes = function(notes, align_all_notes, align_tuplets) {\n    for (var i = 0; i < notes.length; ++i) {\n      if (notes[i] instanceof Vex.Flow.StaveNote && notes[i].isRest()) {\n        var note = notes[i];\n\n        if (note.tuplet && !align_tuplets) continue;\n\n        // If activated rests not on default can be rendered as specified.\n        var position = note.getGlyph().position.toUpperCase();\n        if (position != \"R/4\" && position != \"B/4\") {\n          continue;\n        }\n\n        if (align_all_notes || note.beam != null) {\n          // Align rests with previous/next notes.\n          var props = note.getKeyProps()[0];\n          if (i === 0) {\n            props.line = lookAhead(notes, props.line, i, false);\n            note.setKeyLine(0, props.line);\n          } else if (i > 0 && i < notes.length) {\n            // If previous note is a rest, use its line number.\n            var rest_line;\n            if (notes[i-1].isRest()) {\n              rest_line = notes[i-1].getKeyProps()[0].line;\n              props.line = rest_line;\n            } else {\n              rest_line = notes[i-1].getLineForRest();\n              // Get the rest line for next valid non-rest note group.\n              props.line = lookAhead(notes, rest_line, i, true);\n            }\n            note.setKeyLine(0, props.line);\n          }\n        }\n      }\n    }\n\n    return this;\n  };\n\n  // ## Prototype Methods\n  Formatter.prototype = {\n    // Find all the rests in each of the `voices` and align them\n    // to neighboring notes. If `align_all_notes` is `false`, then only\n    // align non-beamed notes.\n    alignRests: function(voices, align_all_notes) {\n      if (!voices || !voices.length) throw new Vex.RERR(\"BadArgument\",\n          \"No voices to format rests\");\n      for (var i = 0; i < voices.length; i++) {\n        new Formatter.AlignRestsToNotes(voices[i].tickables, align_all_notes);\n      }\n    },\n\n    // Calculate the minimum width required to align and format `voices`.\n    preCalculateMinTotalWidth: function(voices) {\n      // Cache results.\n      if (this.hasMinTotalWidth) return;\n\n      // Create tick contexts if not already created.\n      if (!this.tContexts) {\n        if (!voices) {\n          throw new Vex.RERR(\"BadArgument\",\n                             \"'voices' required to run preCalculateMinTotalWidth\");\n        }\n        this.createTickContexts(voices);\n      }\n\n      var contexts = this.tContexts;\n      var contextList = contexts.list;\n      var contextMap = contexts.map;\n\n      this.minTotalWidth = 0;\n\n      // Go through each tick context and calculate total width.\n      for (var i = 0; i < contextList.length; ++i) {\n        var context = contextMap[contextList[i]];\n\n        // `preFormat` gets them to descend down to their tickables and modifier\n        // contexts, and calculate their widths.\n        context.preFormat();\n        this.minTotalWidth += context.getWidth();\n      }\n\n      this.hasMinTotalWidth = true;\n\n      return this.minTotalWidth;\n    },\n\n    // Get minimum width required to render all voices. Either `format` or\n    // `preCalculateMinTotalWidth` must be called before this method.\n    getMinTotalWidth: function() {\n      if (!this.hasMinTotalWidth) {\n        throw new Vex.RERR(\"NoMinTotalWidth\",\n            \"Need to call 'preCalculateMinTotalWidth' or 'preFormat' before\" +\n            \" calling 'getMinTotalWidth'\");\n      }\n\n      return this.minTotalWidth;\n    },\n\n    // Create `ModifierContext`s for each tick in `voices`.\n    createModifierContexts: function(voices) {\n      var contexts = createContexts(voices,\n          Vex.Flow.ModifierContext,\n          function(tickable, context) {\n            tickable.addToModifierContext(context);\n          });\n      this.mContexts = contexts;\n      return contexts;\n    },\n\n    // Create `TickContext`s for each tick in `voices`. Also calculate the\n    // total number of ticks in voices.\n    createTickContexts: function(voices) {\n      var contexts = createContexts(voices,\n          Vex.Flow.TickContext,\n          function(tickable, context) { context.addTickable(tickable); });\n\n      contexts.array.forEach(function(context) {\n        context.tContexts = contexts.array;\n      });\n\n      this.totalTicks = voices[0].getTicksUsed().clone();\n      this.tContexts = contexts;\n      return contexts;\n    },\n\n    // This is the core formatter logic. Format voices and justify them\n    // to `justifyWidth` pixels. `rendering_context` is required to justify elements\n    // that can't retreive widths without a canvas. This method sets the `x` positions\n    // of all the tickables/notes in the formatter.\n    preFormat: function(justifyWidth, rendering_context, voices, stave) {\n      // Initialize context maps.\n      var contexts = this.tContexts;\n      var contextList = contexts.list;\n      var contextMap = contexts.map;\n\n      // If voices and a stave were provided, set the Stave for each voice\n      // and preFormat to apply Y values to the notes;\n      if (voices && stave) {\n        voices.forEach(function(voice) {\n          voice.setStave(stave);\n          voice.preFormat();\n        });\n      }\n\n      // Figure out how many pixels to allocate per tick.\n      if (!justifyWidth) {\n        justifyWidth = 0;\n        this.pixelsPerTick = 0;\n      } else {\n        this.pixelsPerTick = justifyWidth / (this.totalTicks.value() * contexts.resolutionMultiplier);\n      }\n\n      // Now distribute the ticks to each tick context, and assign them their\n      // own X positions.\n      var x = 0;\n      var center_x = justifyWidth / 2;\n      var white_space = 0; // White space to right of previous note\n      var tick_space = 0;  // Pixels from prev note x-pos to curent note x-pos\n      var prev_tick = 0;\n      var prev_width = 0;\n      var lastMetrics = null;\n      var initial_justify_width = justifyWidth;\n      this.minTotalWidth = 0;\n\n      var i, tick, context;\n\n      // Pass 1: Give each note maximum width requested by context.\n      for (i = 0; i < contextList.length; ++i) {\n        tick = contextList[i];\n        context = contextMap[tick];\n        if (rendering_context) context.setContext(rendering_context);\n\n        // Make sure that all tickables in this context have calculated their\n        // space requirements.\n        context.preFormat();\n\n        var thisMetrics = context.getMetrics();\n        var width = context.getWidth();\n        this.minTotalWidth += width;\n        var min_x = 0;\n        var pixels_used = width;\n\n        // Calculate space between last note and next note.\n        tick_space = Math.min((tick - prev_tick) * this.pixelsPerTick, pixels_used);\n\n        // Shift next note up `tick_space` pixels.\n        var set_x = x + tick_space;\n\n        // Calculate the minimum next note position to allow for right modifiers.\n        if (lastMetrics != null) {\n          min_x = x + prev_width - lastMetrics.extraLeftPx;\n        }\n\n        // Determine the space required for the previous tick.\n        // The `shouldIgnoreTicks` bool is true for elements in the stave\n        // that don't consume ticks (bar lines, key and time signatures, etc.)\n        set_x = context.shouldIgnoreTicks() ?\n            (min_x + context.getWidth()) : Math.max(set_x, min_x);\n\n        if (context.shouldIgnoreTicks() && justifyWidth) {\n            // This note stole room... recalculate with new justification width.\n            justifyWidth -= context.getWidth();\n            this.pixelsPerTick = justifyWidth /\n              (this.totalTicks.value() * contexts.resolutionMultiplier);\n        }\n\n        // Determine pixels needed for left modifiers.\n        var left_px = thisMetrics.extraLeftPx;\n\n        // Determine white space to right of previous tick (from right modifiers.)\n        if (lastMetrics != null) {\n          white_space = (set_x - x) - (prev_width -\n                                       lastMetrics.extraLeftPx);\n        }\n\n        // Deduct pixels from white space quota.\n        if (i > 0) {\n          if (white_space > 0) {\n            if (white_space >= left_px) {\n              // Have enough white space for left modifiers - no offset needed.\n              left_px = 0;\n            } else {\n              // Decrease left modifier offset by amount of white space.\n              left_px -= white_space;\n            }\n          }\n        }\n\n        // Adjust the tick x position with the left modifier offset.\n        set_x += left_px;\n\n        // Set the `x` value for the context, which sets the `x` value for all\n        // tickables in this context.\n        context.setX(set_x);\n        context.setPixelsUsed(pixels_used);  // ??? Remove this if nothing breaks\n\n        lastMetrics = thisMetrics;\n        prev_width = width;\n        prev_tick = tick;\n        x = set_x;\n      }\n\n      this.hasMinTotalWidth = true;\n      if (justifyWidth > 0) {\n        // Pass 2: Take leftover width, and distribute it to proportionately to\n        // all notes.\n        var remaining_x = initial_justify_width - (x + prev_width);\n        var leftover_pixels_per_tick = remaining_x / (this.totalTicks.value() * contexts.resolutionMultiplier);\n        var accumulated_space = 0;\n        prev_tick = 0;\n\n        for (i = 0; i < contextList.length; ++i) {\n          tick = contextList[i];\n          context = contextMap[tick];\n          tick_space = (tick - prev_tick) * leftover_pixels_per_tick;\n          accumulated_space = accumulated_space + tick_space;\n          context.setX(context.getX() + accumulated_space);\n          prev_tick = tick;\n\n          // Move center aligned tickables to middle\n          var centeredTickables = context.getCenterAlignedTickables();\n\n          /*jshint -W083 */\n          centeredTickables.forEach(function(tickable) {\n            tickable.center_x_shift = center_x - context.getX();\n          });\n        }\n      }\n    },\n\n    // This is the top-level call for all formatting logic completed\n    // after `x` *and* `y` values have been computed for the notes\n    // in the voices.\n    postFormat: function() {\n      // Postformat modifier contexts\n      this.mContexts.list.forEach(function(mContext) {\n        this.mContexts.map[mContext].postFormat();\n      }, this);\n\n      // Postformat tick contexts\n      this.tContexts.list.forEach(function(tContext) {\n        this.tContexts.map[tContext].postFormat();\n      }, this);\n\n      return this;\n    },\n\n    // Take all `voices` and create `ModifierContext`s out of them. This tells\n    // the formatters that the voices belong on a single stave.\n    joinVoices: function(voices) {\n      this.createModifierContexts(voices);\n      this.hasMinTotalWidth = false;\n      return this;\n    },\n\n    // Align rests in voices, justify the contexts, and position the notes\n    // so voices are aligned and ready to render onto the stave. This method\n    // mutates the `x` positions of all tickables in `voices`.\n    //\n    // Voices are full justified to fit in `justifyWidth` pixels.\n    //\n    // Set `options.context` to the rendering context. Set `options.align_rests`\n    // to true to enable rest alignment.\n    format: function(voices, justifyWidth, options) {\n      var opts = {\n        align_rests: false,\n        context: null,\n        stave: null\n      };\n\n      Vex.Merge(opts, options);\n      this.alignRests(voices, opts.align_rests);\n      this.createTickContexts(voices);\n      this.preFormat(justifyWidth, opts.context, voices, opts.stave);\n\n      // Only postFormat if a stave was supplied for y value formatting\n      if (opts.stave) this.postFormat();\n\n      return this;\n    },\n\n    // This method is just like `format` except that the `justifyWidth` is inferred\n    // from the `stave`.\n    formatToStave: function(voices, stave, options) {\n      var justifyWidth = stave.getNoteEndX() - stave.getNoteStartX() - 10;\n      L(\"Formatting voices to width: \", justifyWidth);\n      var opts = {context: stave.getContext()};\n      Vex.Merge(opts, options);\n      return this.format(voices, justifyWidth, opts);\n    }\n  };\n\n  return Formatter;\n}());\n\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\n/**\n * Create a new tie from the specified notes. The notes must\n * be part of the same line, and have the same duration (in ticks).\n *\n * @constructor\n * @param {!Object} context The canvas context.\n * @param {!Object} notes The notes to tie up.\n * @param {!Object} Options\n */\nVex.Flow.StaveTie = (function() {\n  function StaveTie(notes, text) {\n    if (arguments.length > 0) this.init(notes, text);\n  }\n\n  StaveTie.prototype = {\n    init: function(notes, text) {\n      /**\n       * Notes is a struct that has:\n       *\n       *  {\n       *    first_note: Note,\n       *    last_note: Note,\n       *    first_indices: [n1, n2, n3],\n       *    last_indices: [n1, n2, n3]\n       *  }\n       *\n       **/\n      this.notes = notes;\n      this.context = null;\n      this.text = text;\n\n      this.render_options = {\n          cp1: 8,      // Curve control point 1\n          cp2: 12,      // Curve control point 2\n          text_shift_x: 0,\n          first_x_shift: 0,\n          last_x_shift: 0,\n          y_shift: 7,\n          tie_spacing: 0,\n          font: { family: \"Arial\", size: 10, style: \"\" }\n        };\n\n      this.font = this.render_options.font;\n      this.setNotes(notes);\n    },\n\n    setContext: function(context) { this.context = context; return this; },\n    setFont: function(font) { this.font = font; return this; },\n\n    /**\n     * Set the notes to attach this tie to.\n     *\n     * @param {!Object} notes The notes to tie up.\n     */\n    setNotes: function(notes) {\n      if (!notes.first_note && !notes.last_note)\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Tie needs to have either first_note or last_note set.\");\n\n      if (!notes.first_indices) notes.first_indices = [0];\n      if (!notes.last_indices) notes.last_indices = [0];\n\n      if (notes.first_indices.length != notes.last_indices.length)\n        throw new Vex.RuntimeError(\"BadArguments\", \"Tied notes must have similar\" +\n          \" index sizes\");\n\n      // Success. Lets grab 'em notes.\n      this.first_note = notes.first_note;\n      this.first_indices = notes.first_indices;\n      this.last_note = notes.last_note;\n      this.last_indices = notes.last_indices;\n      return this;\n    },\n\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial: function() {\n      return (!this.first_note || !this.last_note);\n    },\n\n    renderTie: function(params) {\n      if (params.first_ys.length === 0 || params.last_ys.length === 0)\n        throw new Vex.RERR(\"BadArguments\", \"No Y-values to render\");\n\n      var ctx = this.context;\n      var cp1 = this.render_options.cp1;\n      var cp2 = this.render_options.cp2;\n\n      if (Math.abs(params.last_x_px - params.first_x_px) < 10) {\n        cp1 = 2; cp2 = 8;\n      }\n\n      var first_x_shift = this.render_options.first_x_shift;\n      var last_x_shift = this.render_options.last_x_shift;\n      var y_shift = this.render_options.y_shift * params.direction;\n\n      for (var i = 0; i < this.first_indices.length; ++i) {\n        var cp_x = ((params.last_x_px + last_x_shift) +\n                    (params.first_x_px + first_x_shift)) / 2;\n        var first_y_px = params.first_ys[this.first_indices[i]] + y_shift;\n        var last_y_px = params.last_ys[this.last_indices[i]] + y_shift;\n\n        if (isNaN(first_y_px) || isNaN(last_y_px))\n          throw new Vex.RERR(\"BadArguments\", \"Bad indices for tie rendering.\");\n\n        var top_cp_y = ((first_y_px + last_y_px) / 2) + (cp1 * params.direction);\n        var bottom_cp_y = ((first_y_px + last_y_px) / 2) + (cp2 * params.direction);\n\n        ctx.beginPath();\n        ctx.moveTo(params.first_x_px + first_x_shift, first_y_px);\n        ctx.quadraticCurveTo(cp_x, top_cp_y,\n                             params.last_x_px + last_x_shift, last_y_px);\n        ctx.quadraticCurveTo(cp_x, bottom_cp_y,\n                             params.first_x_px + first_x_shift, first_y_px);\n\n        ctx.closePath();\n        ctx.fill();\n      }\n    },\n\n    renderText: function(first_x_px, last_x_px) {\n      if (!this.text) return;\n      var center_x = (first_x_px + last_x_px) / 2;\n      center_x -= this.context.measureText(this.text).width / 2;\n\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.style);\n      this.context.fillText(\n          this.text, center_x + this.render_options.text_shift_x,\n          (this.first_note || this.last_note).getStave().getYForTopText() - 1);\n      this.context.restore();\n    },\n\n    draw: function() {\n      if (!this.context)\n        throw new Vex.RERR(\"NoContext\", \"No context to render tie.\");\n      var first_note = this.first_note;\n      var last_note = this.last_note;\n      var first_x_px, last_x_px, first_ys, last_ys, stem_direction;\n\n      if (first_note) {\n        first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n        stem_direction = first_note.getStemDirection();\n        first_ys = first_note.getYs();\n      } else {\n        first_x_px = last_note.getStave().getTieStartX();\n        first_ys = last_note.getYs();\n        this.first_indices = this.last_indices;\n      }\n\n      if (last_note) {\n        last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n        stem_direction = last_note.getStemDirection();\n        last_ys = last_note.getYs();\n      } else {\n        last_x_px = first_note.getStave().getTieEndX();\n        last_ys = first_note.getYs();\n        this.last_indices = this.first_indices;\n      }\n\n      this.renderTie({\n        first_x_px: first_x_px,\n        last_x_px: last_x_px,\n        first_ys: first_ys,\n        last_ys: last_ys,\n        direction: stem_direction\n      });\n\n      this.renderText(first_x_px, last_x_px);\n      return true;\n    }\n  };\n\n  return StaveTie;\n}());\n\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\n/**\n * Create a new tie from the specified notes. The notes must\n * be part of the same line, and have the same duration (in ticks).\n *\n * @constructor\n * @param {!Object} context The canvas context.\n * @param {!Object} notes The notes to tie up.\n * @param {!Object} Options\n */\nVex.Flow.TabTie = (function() {\n  function TabTie(notes, text) {\n    if (arguments.length > 0) this.init(notes, text);\n  }\n\n  TabTie.createHammeron = function(notes) {\n    return new TabTie(notes, \"H\");\n  };\n\n  TabTie.createPulloff = function(notes) {\n    return new TabTie(notes, \"P\");\n  };\n\n  Vex.Inherit(TabTie, Vex.Flow.StaveTie, {\n    init: function(notes, text) {\n      /**\n       * Notes is a struct that has:\n       *\n       *  {\n       *    first_note: Note,\n       *    last_note: Note,\n       *    first_indices: [n1, n2, n3],\n       *    last_indices: [n1, n2, n3]\n       *  }\n       *\n       **/\n      TabTie.superclass.init.call(this, notes, text);\n      this.render_options.cp1 = 9;\n      this.render_options.cp2 = 11;\n      this.render_options.y_shift = 3;\n\n      this.setNotes(notes);\n    },\n\n    draw: function() {\n      if (!this.context)\n        throw new Vex.RERR(\"NoContext\", \"No context to render tie.\");\n      var first_note = this.first_note;\n      var last_note = this.last_note;\n      var first_x_px, last_x_px, first_ys, last_ys;\n\n      if (first_note) {\n        first_x_px = first_note.getTieRightX() + this.render_options.tie_spacing;\n        first_ys = first_note.getYs();\n      } else {\n        first_x_px = last_note.getStave().getTieStartX();\n        first_ys = last_note.getYs();\n        this.first_indices = this.last_indices;\n      }\n\n      if (last_note) {\n        last_x_px = last_note.getTieLeftX() + this.render_options.tie_spacing;\n        last_ys = last_note.getYs();\n      } else {\n        last_x_px = first_note.getStave().getTieEndX();\n        last_ys = first_note.getYs();\n        this.last_indices = this.first_indices;\n      }\n\n      this.renderTie({\n        first_x_px: first_x_px,\n        last_x_px: last_x_px,\n        first_ys: first_ys,\n        last_ys: last_ys,\n        direction: -1           // Tab tie's are always face up.\n      });\n\n      this.renderText(first_x_px, last_x_px);\n      return true;\n    }\n  });\n\n  return TabTie;\n}());\n\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements varies types of ties between contiguous notes. The\n// ties include: regular ties, hammer ons, pull offs, and slides.\n\n/**\n * Create a new tie from the specified notes. The notes must\n * be part of the same line, and have the same duration (in ticks).\n *\n * @constructor\n * @param {!Object} context The canvas context.\n * @param {!Object} notes The notes to tie up.\n * @param {!Object} Options\n */\nVex.Flow.TabSlide = (function() {\n  function TabSlide(notes, direction) {\n    if (arguments.length > 0) this.init(notes, direction);\n  }\n\n  TabSlide.SLIDE_UP = 1;\n  TabSlide.SLIDE_DOWN = -1;\n\n  TabSlide.createSlideUp = function(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_UP);\n  };\n\n  TabSlide.createSlideDown = function(notes) {\n    return new TabSlide(notes, TabSlide.SLIDE_DOWN);\n  };\n\n  Vex.Inherit(TabSlide, Vex.Flow.TabTie, {\n    init: function(notes, direction) {\n      /**\n       * Notes is a struct that has:\n       *\n       *  {\n       *    first_note: Note,\n       *    last_note: Note,\n       *    first_indices: [n1, n2, n3],\n       *    last_indices: [n1, n2, n3]\n       *  }\n       *\n       **/\n      TabSlide.superclass.init.call(this, notes, \"sl.\");\n      if (!direction) {\n        var first_fret = notes.first_note.getPositions()[0].fret;\n        var last_fret = notes.last_note.getPositions()[0].fret;\n\n        direction = ((parseInt(first_fret, 10) > parseInt(last_fret, 10)) ?\n          TabSlide.SLIDE_DOWN : TabSlide.SLIDE_UP);\n      }\n\n      this.slide_direction = direction;\n      this.render_options.cp1 = 11;\n      this.render_options.cp2 = 14;\n      this.render_options.y_shift = 0.5;\n\n      this.setFont({font: \"Times\", size: 10, style: \"bold italic\"});\n      this.setNotes(notes);\n    },\n\n    renderTie: function(params) {\n      if (params.first_ys.length === 0 || params.last_ys.length === 0)\n        throw new Vex.RERR(\"BadArguments\", \"No Y-values to render\");\n\n      var ctx = this.context;\n      var first_x_px = params.first_x_px;\n      var first_ys = params.first_ys;\n      var last_x_px = params.last_x_px;\n\n      var direction = this.slide_direction;\n      if (direction != TabSlide.SLIDE_UP &&\n          direction != TabSlide.SLIDE_DOWN) {\n        throw new Vex.RERR(\"BadSlide\", \"Invalid slide direction\");\n      }\n\n      for (var i = 0; i < this.first_indices.length; ++i) {\n        var slide_y = first_ys[this.first_indices[i]] +\n          this.render_options.y_shift;\n\n        if (isNaN(slide_y))\n          throw new Vex.RERR(\"BadArguments\", \"Bad indices for slide rendering.\");\n\n        ctx.beginPath();\n        ctx.moveTo(first_x_px, slide_y + (3 * direction));\n        ctx.lineTo(last_x_px, slide_y - (3 * direction));\n        ctx.closePath();\n        ctx.stroke();\n      }\n    }\n  });\n\n  return TabSlide;\n}());\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements tablature bends.\n\n/**\n   @param text Text for bend (\"Full\", \"Half\", etc.) (DEPRECATED)\n   @param release If true, render a release. (DEPRECATED)\n   @param phrase If set, ignore \"text\" and \"release\", and use the more\n                 sophisticated phrase specified.\n\n   Example of a phrase:\n\n     [{\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"half\"\n       width: 8;\n     },\n     {\n       type: UP,\n       text: \"whole\"\n       width: 8;\n     },\n     {\n       type: DOWN,\n       text: \"1 1/2\"\n       width: 8;\n     }]\n */\nVex.Flow.Bend = (function() {\n  function Bend(text, release, phrase) {\n    if (arguments.length > 0) this.init(text, release, phrase);\n  }\n  Bend.CATEGORY = \"bends\";\n\n  Bend.UP = 0;\n  Bend.DOWN = 1;\n\n  var Modifier = Vex.Flow.Modifier;\n\n  // ## Static Methods\n  // Arrange bends in `ModifierContext`\n  Bend.format = function(bends, state) {\n    if (!bends || bends.length === 0) return false;\n\n    var last_width = 0;\n    var text_line = state.text_line;\n\n    // Format Bends\n    for (var i = 0; i < bends.length; ++i) {\n      var bend = bends[i];\n      bend.setXShift(last_width);\n      last_width = bend.getWidth();\n      bend.setTextLine(text_line);\n    }\n\n    state.right_shift += last_width;\n    state.text_line += 1;\n    return true;\n  };\n\n  // ## Prototype Methods\n  Vex.Inherit(Bend, Modifier, {\n    init: function(text, release, phrase) {\n      var superclass = Vex.Flow.Bend.superclass;\n      superclass.init.call(this);\n\n      this.text = text;\n      this.x_shift = 0;\n      this.release = release || false;\n      this.font = \"10pt Arial\";\n      this.render_options = {\n        line_width: 1.5,\n        line_style: \"#777777\",\n        bend_width: 8,\n        release_width: 8\n      };\n\n      if (phrase) {\n        this.phrase = phrase;\n      } else {\n        // Backward compatibility\n        this.phrase = [{type: Bend.UP, text: this.text}];\n        if (this.release) this.phrase.push({type: Bend.DOWN, text: \"\"});\n      }\n\n      this.updateWidth();\n    },\n\n    setXShift: function(value) {\n      this.x_shift = value;\n      this.updateWidth();\n    },\n\n    setFont: function(font) { this.font = font; return this; },\n\n    getText: function() { return this.text; },\n\n    updateWidth: function() {\n      var that = this;\n\n      function measure_text(text) {\n        var text_width;\n        if (that.context) {\n          text_width = that.context.measureText(text).width;\n        } else {\n          text_width = Vex.Flow.textWidth(text);\n        }\n\n        return text_width;\n      }\n\n      var total_width = 0;\n      for (var i=0; i<this.phrase.length; ++i) {\n        var bend = this.phrase[i];\n        if ('width' in bend) {\n          total_width += bend.width;\n        } else {\n          var additional_width = (bend.type == Bend.UP) ?\n            this.render_options.bend_width : this.render_options.release_width;\n\n          bend.width = Vex.Max(additional_width, measure_text(bend.text)) + 3;\n          bend.draw_width = bend.width / 2;\n          total_width += bend.width;\n        }\n      }\n\n      this.setWidth(total_width + this.x_shift);\n      return this;\n    },\n\n    draw: function() {\n        if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw bend without a context.\");\n      if (!(this.note && (this.index != null))) throw new Vex.RERR(\"NoNoteForBend\",\n        \"Can't draw bend without a note or index.\");\n\n      var start = this.note.getModifierStartXY(Modifier.Position.RIGHT,\n          this.index);\n      start.x += 3;\n      start.y += 0.5;\n      var x_shift = this.x_shift;\n\n      var ctx = this.context;\n      var bend_height = this.note.getStave().getYForTopText(this.text_line) + 3;\n      var annotation_y = this.note.getStave().getYForTopText(this.text_line) - 1;\n      var that = this;\n\n      function renderBend(x, y, width, height) {\n        var cp_x = x + width;\n        var cp_y = y;\n\n        ctx.save();\n        ctx.beginPath();\n        ctx.setLineWidth(that.render_options.line_width);\n        ctx.setStrokeStyle(that.render_options.line_style);\n        ctx.setFillStyle(that.render_options.line_style);\n        ctx.moveTo(x, y);\n        ctx.quadraticCurveTo(cp_x, cp_y, x + width, height);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      function renderRelease(x, y, width, height) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.setLineWidth(that.render_options.line_width);\n        ctx.setStrokeStyle(that.render_options.line_style);\n        ctx.setFillStyle(that.render_options.line_style);\n        ctx.moveTo(x, height);\n        ctx.quadraticCurveTo(\n            x + width, height,\n            x + width, y);\n        ctx.stroke();\n        ctx.restore();\n      }\n\n      function renderArrowHead(x, y, direction) {\n        var width = 4;\n        var dir = direction || 1;\n\n        ctx.beginPath();\n        ctx.moveTo(x, y);\n        ctx.lineTo(x - width, y + width * dir);\n        ctx.lineTo(x + width, y + width * dir);\n        ctx.closePath();\n        ctx.fill();\n      }\n\n      function renderText(x, text) {\n        ctx.save();\n        ctx.setRawFont(that.font);\n        var render_x = x - (ctx.measureText(text).width / 2);\n        ctx.fillText(text, render_x, annotation_y);\n        ctx.restore();\n      }\n\n      var last_bend = null;\n      var last_drawn_width = 0;\n      for (var i=0; i<this.phrase.length; ++i) {\n        var bend = this.phrase[i];\n        if (i === 0) bend.draw_width += x_shift;\n\n        last_drawn_width = bend.draw_width + (last_bend?last_bend.draw_width:0) - (i==1?x_shift:0);\n        if (bend.type == Bend.UP) {\n          if (last_bend && last_bend.type == Bend.UP) {\n            renderArrowHead(start.x, bend_height);\n          }\n\n          renderBend(start.x, start.y, last_drawn_width, bend_height);\n        }\n\n        if (bend.type == Bend.DOWN) {\n          if (last_bend && last_bend.type == Bend.UP) {\n            renderRelease(start.x, start.y, last_drawn_width, bend_height);\n          }\n\n          if (last_bend && last_bend.type == Bend.DOWN) {\n            renderArrowHead(start.x, start.y, -1);\n            renderRelease(start.x, start.y, last_drawn_width, bend_height);\n          }\n\n          if (last_bend == null) {\n            last_drawn_width = bend.draw_width;\n            renderRelease(start.x, start.y, last_drawn_width, bend_height);\n          }\n        }\n\n        renderText(start.x + last_drawn_width, bend.text);\n        last_bend = bend;\n        last_bend.x = start.x;\n\n        start.x += last_drawn_width;\n      }\n\n      // Final arrowhead and text\n      if (last_bend.type == Bend.UP) {\n        renderArrowHead(last_bend.x + last_drawn_width, bend_height);\n      } else if (last_bend.type == Bend.DOWN) {\n        renderArrowHead(last_bend.x + last_drawn_width, start.y, -1);\n      }\n    }\n  });\n\n  return Bend;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This class implements vibratos.\n\nVex.Flow.Vibrato = (function() {\n  function Vibrato() { this.init(); }\n  Vibrato.CATEGORY = \"vibratos\";\n\n  var Modifier = Vex.Flow.Modifier;\n\n  // ## Static Methods\n  // Arrange vibratos inside a `ModifierContext`.\n  Vibrato.format = function(vibratos, state, context) {\n    if (!vibratos || vibratos.length === 0) return false;\n\n    var text_line = state.text_line;\n    var width = 0;\n    var shift = state.right_shift - 7;\n\n    // If there's a bend, drop the text line\n    var bends = context.getModifiers(Vex.Flow.Bend.CATEGORY);\n    if (bends && bends.length > 0) {\n      text_line--;\n    }\n\n    // Format Vibratos\n    for (var i = 0; i < vibratos.length; ++i) {\n      var vibrato = vibratos[i];\n      vibrato.setXShift(shift);\n      vibrato.setTextLine(text_line);\n      width += vibrato.getWidth();\n      shift += width;\n    }\n\n    state.right_shift += width;\n    state.text_line += 1;\n    return true;\n  };\n\n  // ## Prototype Methods\n  Vex.Inherit(Vibrato, Modifier, {\n    init: function() {\n      var superclass = Vex.Flow.Vibrato.superclass;\n      superclass.init.call(this);\n\n      this.harsh = false;\n      this.position = Vex.Flow.Modifier.Position.RIGHT;\n      this.render_options = {\n        vibrato_width: 20,\n        wave_height: 6,\n        wave_width: 4,\n        wave_girth: 2\n      };\n\n      this.setVibratoWidth(this.render_options.vibrato_width);\n    },\n\n    setHarsh: function(harsh) { this.harsh = harsh; return this; },\n    setVibratoWidth: function(width) {\n      this.vibrato_width = width;\n      this.setWidth(this.vibrato_width);\n      return this;\n    },\n\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw vibrato without a context.\");\n      if (!this.note) throw new Vex.RERR(\"NoNoteForVibrato\",\n        \"Can't draw vibrato without an attached note.\");\n\n      var start = this.note.getModifierStartXY(Vex.Flow.Modifier.Position.RIGHT,\n          this.index);\n\n      var ctx = this.context;\n      var that = this;\n      var vibrato_width = this.vibrato_width;\n\n      function renderVibrato(x, y) {\n        var wave_width = that.render_options.wave_width;\n        var wave_girth = that.render_options.wave_girth;\n        var wave_height = that.render_options.wave_height;\n        var num_waves = vibrato_width / wave_width;\n\n        ctx.beginPath();\n\n        var i;\n        if (that.harsh) {\n          ctx.moveTo(x, y + wave_girth + 1);\n          for (i = 0; i < num_waves / 2; ++i) {\n            ctx.lineTo(x + wave_width, y - (wave_height / 2));\n            x += wave_width;\n            ctx.lineTo(x + wave_width, y + (wave_height / 2));\n            x += wave_width;\n          }\n          for (i = 0; i < num_waves / 2; ++i) {\n            ctx.lineTo(x - wave_width, (y - (wave_height / 2)) + wave_girth + 1);\n            x -= wave_width;\n            ctx.lineTo(x - wave_width, (y + (wave_height / 2)) + wave_girth + 1);\n            x -= wave_width;\n          }\n          ctx.fill();\n        } else {\n          ctx.moveTo(x, y + wave_girth);\n          for (i = 0; i < num_waves / 2; ++i) {\n            ctx.quadraticCurveTo(x + (wave_width / 2), y - (wave_height / 2),\n              x + wave_width, y);\n            x += wave_width;\n            ctx.quadraticCurveTo(x + (wave_width / 2), y + (wave_height / 2),\n              x + wave_width, y);\n            x += wave_width;\n          }\n\n          for (i = 0; i < num_waves / 2; ++i) {\n            ctx.quadraticCurveTo(\n                x - (wave_width / 2),\n                (y + (wave_height / 2)) + wave_girth,\n                x - wave_width, y + wave_girth);\n            x -= wave_width;\n            ctx.quadraticCurveTo(\n                x - (wave_width / 2),\n                (y - (wave_height / 2)) + wave_girth,\n                x - wave_width, y + wave_girth);\n            x -= wave_width;\n          }\n          ctx.fill();\n        }\n      }\n\n      var vx = start.x + this.x_shift;\n      var vy = this.note.getYForTopText(this.text_line) + 2;\n\n      renderVibrato(vx, vy);\n    }\n  });\n\n  return Vibrato;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements text annotations as modifiers that can be attached to\n// notes.\n//\n// See `tests/annotation_tests.js` for usage examples.\n\nVex.Flow.Annotation = (function() {\n  function Annotation(text) {\n    if (arguments.length > 0) this.init(text);\n  }\n  Annotation.CATEGORY = \"annotations\";\n\n  // To enable logging for this class. Set `Vex.Flow.Annotation.DEBUG` to `true`.\n  function L() { if (Annotation.DEBUG) Vex.L(\"Vex.Flow.Annotation\", arguments); }\n\n  // Text annotations can be positioned and justified relative to the note.\n  Annotation.Justify = {\n    LEFT: 1,\n    CENTER: 2,\n    RIGHT: 3,\n    CENTER_STEM: 4\n  };\n\n  Annotation.VerticalJustify = {\n    TOP: 1,\n    CENTER: 2,\n    BOTTOM: 3,\n    CENTER_STEM: 4\n  };\n\n  // Arrange annotations within a `ModifierContext`\n  Annotation.format = function(annotations, state) {\n    if (!annotations || annotations.length === 0) return false;\n\n    var text_line = state.text_line;\n    var max_width = 0;\n\n    // Format Annotations\n    var width;\n    for (var i = 0; i < annotations.length; ++i) {\n      var annotation = annotations[i];\n      annotation.setTextLine(text_line);\n      width = annotation.getWidth() > max_width ?\n        annotation.getWidth() : max_width;\n      text_line++;\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    return true;\n  };\n\n  // ## Prototype Methods\n  //\n  // Annotations inherit from `Modifier` and is positioned correctly when\n  // in a `ModifierContext`.\n  var Modifier = Vex.Flow.Modifier;\n  Vex.Inherit(Annotation, Modifier, {\n    // Create a new `Annotation` with the string `text`.\n    init: function(text) {\n      Annotation.superclass.init.call(this);\n\n      this.note = null;\n      this.index = null;\n      this.text_line = 0;\n      this.text = text;\n      this.justification = Annotation.Justify.CENTER;\n      this.vert_justification = Annotation.VerticalJustify.TOP;\n      this.font = {\n        family: \"Arial\",\n        size: 10,\n        weight: \"\"\n      };\n\n      // The default width is calculated from the text.\n      this.setWidth(Vex.Flow.textWidth(text));\n    },\n\n    // Set the vertical position of the text relative to the stave.\n    setTextLine: function(line) { this.text_line = line; return this; },\n\n    // Set font family, size, and weight. E.g., `Arial`, `10pt`, `Bold`.\n    setFont: function(family, size, weight) {\n      this.font = { family: family, size: size, weight: weight };\n      return this;\n    },\n\n    // Set vertical position of text (above or below stave). `just` must be\n    // a value in `Annotation.VerticalJustify`.\n    setVerticalJustification: function(just) {\n      this.vert_justification = just;\n      return this;\n    },\n\n    // Get and set horizontal justification. `justification` is a value in\n    // `Annotation.Justify`.\n    getJustification: function() { return this.justification; },\n    setJustification: function(justification) {\n      this.justification = justification; return this; },\n\n    // Render text beside the note.\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw text annotation without a context.\");\n      if (!this.note) throw new Vex.RERR(\"NoNoteForAnnotation\",\n        \"Can't draw text annotation without an attached note.\");\n\n      var start = this.note.getModifierStartXY(Modifier.Position.ABOVE,\n          this.index);\n\n      // We're changing context parameters. Save current state.\n      this.context.save();\n      this.context.setFont(this.font.family, this.font.size, this.font.weight);\n      var text_width = this.context.measureText(this.text).width;\n\n      // Estimate text height to be the same as the width of an 'm'.\n      //\n      // This is a hack to work around the inability to measure text height\n      // in HTML5 Canvas (and SVG).\n      var text_height = this.context.measureText(\"m\").width;\n      var x, y;\n\n      if (this.justification == Annotation.Justify.LEFT) {\n        x = start.x;\n      } else if (this.justification == Annotation.Justify.RIGHT) {\n        x = start.x - text_width;\n      } else if (this.justification == Annotation.Justify.CENTER) {\n        x = start.x - text_width / 2;\n      } else /* CENTER_STEM */ {\n        x = this.note.getStemX() - text_width / 2;\n      }\n\n      var stem_ext, spacing;\n      var has_stem = this.note.hasStem();\n      var stave = this.note.getStave();\n\n      // The position of the text varies based on whether or not the note\n      // has a stem.\n      if (has_stem) {\n        stem_ext = this.note.getStem().getExtents();\n        spacing = stave.getSpacingBetweenLines();\n      }\n\n      if (this.vert_justification == Annotation.VerticalJustify.BOTTOM) {\n        y = stave.getYForBottomText(this.text_line);\n        if (has_stem) {\n          var stem_base = (this.note.getStemDirection() === 1 ? stem_ext.baseY : stem_ext.topY);\n          y = Math.max(y, stem_base + (spacing * (this.text_line + 2)));\n        }\n      } else if (this.vert_justification ==\n                 Annotation.VerticalJustify.CENTER) {\n        var yt = this.note.getYForTopText(this.text_line) - 1;\n        var yb = stave.getYForBottomText(this.text_line);\n        y = yt + ( yb - yt ) / 2 + text_height / 2;\n      } else if (this.vert_justification ==\n                 Annotation.VerticalJustify.TOP) {\n        y = Math.min(stave.getYForTopText(this.text_line), this.note.getYs()[0] - 10);\n        if (has_stem) {\n          y = Math.min(y, (stem_ext.topY - 5) - (spacing * this.text_line));\n        }\n      } else /* CENTER_STEM */{\n        var extents = this.note.getStemExtents();\n        y = extents.topY + (extents.baseY - extents.topY) / 2 +\n          text_height / 2;\n      }\n\n      L(\"Rendering annotation: \", this.text, x, y);\n      this.context.fillText(this.text, x, y);\n      this.context.restore();\n    }\n  });\n\n  return Annotation;\n}());\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns.\n//\n// ## Description\n//\n// This file implements articulations and accents as modifiers that can be\n// attached to notes. The complete list of articulations is available in\n// `tables.js` under `Vex.Flow.articulationCodes`.\n//\n// See `tests/articulation_tests.js` for usage examples.\n\nVex.Flow.Articulation = (function() {\n  function Articulation(type) {\n    if (arguments.length > 0) this.init(type);\n  }\n  Articulation.CATEGORY = \"articulations\";\n\n  // To enable logging for this class. Set `Vex.Flow.Articulation.DEBUG` to `true`.\n  function L() { if (Articulation.DEBUG) Vex.L(\"Vex.Flow.Articulation\", arguments); }\n\n  var Modifier = Vex.Flow.Modifier;\n\n  // ## Static Methods\n  // Arrange articulations inside `ModifierContext`\n  Articulation.format = function(articulations, state) {\n    if (!articulations || articulations.length === 0) return false;\n\n    var text_line = state.text_line;\n    var max_width = 0;\n\n    // Format Articulations\n    var width;\n    for (var i = 0; i < articulations.length; ++i) {\n      var articulation = articulations[i];\n      articulation.setTextLine(text_line);\n      width = articulation.getWidth() > max_width ?\n        articulation.getWidth() : max_width;\n\n      var type = Vex.Flow.articulationCodes(articulation.type);\n      if(type.between_lines)\n        text_line += 1;\n      else\n        text_line += 1.5;\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    state.text_line = text_line;\n    return true;\n  };\n\n  // ## Prototype Methods\n  Vex.Inherit(Articulation, Modifier, {\n    // Create a new articulation of type `type`, which is an entry in\n    // `Vex.Flow.articulationCodes` in `tables.js`.\n    init: function(type) {\n      Articulation.superclass.init.call(this);\n\n      this.note = null;\n      this.index = null;\n      this.type = type;\n      this.position = Modifier.Position.BELOW;\n\n      this.render_options = {\n        font_scale: 38\n      };\n\n      this.articulation = Vex.Flow.articulationCodes(this.type);\n      if (!this.articulation) throw new Vex.RERR(\"ArgumentError\",\n         \"Articulation not found: '\" + this.type + \"'\");\n\n      // Default width comes from articulation table.\n      this.setWidth(this.articulation.width);\n    },\n\n    // Render articulation in position next to note.\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw Articulation without a context.\");\n      if (!(this.note && (this.index !== null))) throw new Vex.RERR(\"NoAttachedNote\",\n        \"Can't draw Articulation without a note and index.\");\n\n      var stem_direction = this.note.getStemDirection();\n      var stave = this.note.getStave();\n\n      var is_on_head = (this.position === Modifier.Position.ABOVE &&\n                        stem_direction === Vex.Flow.StaveNote.STEM_DOWN) ||\n                       (this.position === Modifier.Position.BELOW &&\n                        stem_direction === Vex.Flow.StaveNote.STEM_UP);\n\n      var needsLineAdjustment = function(articulation, note_line, line_spacing) {\n        var offset_direction = (articulation.position === Modifier.Position.ABOVE) ? 1 : -1;\n        var duration = articulation.getNote().getDuration();\n        if(!is_on_head && Vex.Flow.durationToNumber(duration) <= 1){\n          // Add stem length, unless it's on a whole note.\n          note_line += offset_direction * 3.5;\n        }\n\n        var articulation_line = note_line + (offset_direction * line_spacing);\n\n        if(articulation_line >= 1 &&\n           articulation_line <= 5 &&\n           articulation_line % 1 === 0){\n          return true;\n        }\n\n        return false;\n      };\n\n      // Articulations are centered over/under the note head.\n      var start = this.note.getModifierStartXY(this.position, this.index);\n      var glyph_y = start.y;\n      var shiftY = 0;\n      var line_spacing = 1;\n      var spacing = stave.getSpacingBetweenLines();\n      var is_tabnote = this.note.getCategory() === 'tabnotes';\n      var stem_ext = this.note.getStem().getExtents();\n\n      var top = stem_ext.topY;\n      var bottom = stem_ext.baseY;\n\n      if (stem_direction === Vex.Flow.StaveNote.STEM_DOWN) {\n        top = stem_ext.baseY;\n        bottom = stem_ext.topY;\n      }\n\n      // TabNotes don't have stems attached to them. Tab stems are rendered\n      // outside the stave.\n      if (is_tabnote) {\n        if (this.note.hasStem()){\n          if (stem_direction === Vex.Flow.StaveNote.STEM_UP) {\n            bottom = stave.getYForBottomText(this.text_line - 2);\n          } else if (stem_direction === Vex.Flow.StaveNote.STEM_DOWN ) {\n            top = stave.getYForTopText(this.text_line - 1.5);\n          }\n        } else { // Without a stem\n          top = stave.getYForTopText(this.text_line - 1);\n          bottom = stave.getYForBottomText(this.text_line - 2);\n        }\n      }\n\n      var is_above = (this.position === Modifier.Position.ABOVE) ? true : false;\n      var note_line = this.note.getLineNumber(is_above);\n\n      // Beamed stems are longer than quarter note stems.\n      if (!is_on_head && this.note.beam) line_spacing += 0.5;\n\n      // If articulation will overlap a line, reposition it.\n      if (needsLineAdjustment(this, note_line, line_spacing)) line_spacing += 0.5;\n\n      var glyph_y_between_lines;\n      if (this.position === Modifier.Position.ABOVE) {\n        shiftY = this.articulation.shift_up;\n        glyph_y_between_lines = (top - 7) - (spacing * (this.text_line + line_spacing));\n\n        if (this.articulation.between_lines)\n          glyph_y = glyph_y_between_lines;\n        else\n          glyph_y = Math.min(stave.getYForTopText(this.text_line) - 3, glyph_y_between_lines);\n      } else {\n        shiftY = this.articulation.shift_down - 10;\n\n        glyph_y_between_lines = bottom + 10 + spacing * (this.text_line + line_spacing);\n        if (this.articulation.between_lines)\n          glyph_y = glyph_y_between_lines;\n        else\n          glyph_y = Math.max(stave.getYForBottomText(this.text_line), glyph_y_between_lines);\n      }\n\n      var glyph_x = start.x + this.articulation.shift_right;\n      glyph_y += shiftY + this.y_shift;\n\n      L(\"Rendering articulation: \", this.articulation, glyph_x, glyph_y);\n      Vex.Flow.renderGlyph(this.context, glyph_x, glyph_y,\n                           this.render_options.font_scale, this.articulation.code);\n    }\n  });\n\n  return Articulation;\n}());\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements varies types of tunings for tablature.\n\n/**\n * @constructor\n */\nVex.Flow.Tuning = (function() {\n  function Tuning(tuningString) {\n    this.init(tuningString);\n  }\n\n  Tuning.names = {\n    \"standard\": \"E/5,B/4,G/4,D/4,A/3,E/3\",\n    \"dagdad\": \"D/5,A/4,G/4,D/4,A/3,D/3\",\n    \"dropd\": \"E/5,B/4,G/4,D/4,A/3,D/3\",\n    \"eb\": \"Eb/5,Bb/4,Gb/4,Db/4,Ab/3,Db/3\"\n  };\n\n  Tuning.prototype = {\n    init: function(tuningString) {\n      // Default to standard tuning.\n      this.setTuning(tuningString || \"E/5,B/4,G/4,D/4,A/3,E/3,B/2,E/2\");\n    },\n\n    noteToInteger: function(noteString) {\n      return Vex.Flow.keyProperties(noteString).int_value;\n    },\n\n    setTuning: function(noteString) {\n      if (Vex.Flow.Tuning.names[noteString])\n        noteString = Vex.Flow.Tuning.names[noteString];\n\n      this.tuningString = noteString;\n      this.tuningValues = [];\n      this.numStrings = 0;\n\n      var keys = noteString.split(/\\s*,\\s*/);\n      if (keys.length === 0)\n        throw new Vex.RERR(\"BadArguments\", \"Invalid tuning string: \" + noteString);\n\n      this.numStrings = keys.length;\n      for (var i = 0; i < this.numStrings; ++i) {\n        this.tuningValues[i] = this.noteToInteger(keys[i]);\n      }\n    },\n\n    getValueForString: function(stringNum) {\n      var s = parseInt(stringNum, 10);\n      if (s < 1 || s > this.numStrings)\n        throw new Vex.RERR(\"BadArguments\", \"String number must be between 1 and \" +\n            this.numStrings + \": \" + stringNum);\n\n      return this.tuningValues[s - 1];\n    },\n\n    getValueForFret: function(fretNum, stringNum) {\n      var stringValue = this.getValueForString(stringNum);\n      var f = parseInt(fretNum, 10);\n\n      if (f < 0) {\n        throw new Vex.RERR(\"BadArguments\", \"Fret number must be 0 or higher: \" +\n            fretNum);\n      }\n\n      return stringValue + f;\n    },\n\n    getNoteForFret: function(fretNum, stringNum) {\n      var noteValue = this.getValueForFret(fretNum, stringNum);\n\n      var octave = Math.floor(noteValue / 12);\n      var value = noteValue % 12;\n\n      return Vex.Flow.integerToNote(value) + \"/\" + octave;\n    }\n  };\n\n  return Tuning;\n}());\n\n// VexFlow - Music Engraving for HTML5\n//\n// A base class for stave modifiers (e.g. clefs, key signatures)\n//\n\n\n/**\n * @constructor\n */\nVex.Flow.StaveModifier = (function() {\n  function StaveModifier() {\n    this.init();\n  }\n\n  StaveModifier.prototype = {\n    init: function() {\n      this.padding = 10;\n    },\n\n    getCategory: function() {return \"\";},\n    makeSpacer: function(padding) {\n      return {\n        getContext: function() {return true;},\n        setStave: function() {},\n        renderToStave: function() {},\n        getMetrics: function() {\n          return {width: padding};\n        }\n      };\n    },\n\n    placeGlyphOnLine: function(glyph, stave, line) {\n      glyph.setYShift(stave.getYForLine(line) - stave.getYForGlyphs());\n    },\n\n    setPadding: function(padding) {\n      this.padding = padding;\n    },\n\n    addToStave: function(stave, firstGlyph) {\n      if (!firstGlyph) {\n        stave.addGlyph(this.makeSpacer(this.padding));\n      }\n\n      this.addModifier(stave);\n      return this;\n    },\n\n    addToStaveEnd: function(stave, firstGlyph) {\n      if (!firstGlyph) {\n        stave.addEndGlyph(this.makeSpacer(this.padding));\n      }\n      else {\n        stave.addEndGlyph(this.makeSpacer(2));\n      }\n\n      this.addEndModifier(stave);\n      return this;\n    },\n\n    addModifier: function() {\n      throw new Vex.RERR(\"MethodNotImplemented\",\n          \"addModifier() not implemented for this stave modifier.\");\n    },\n\n    addEndModifier: function() {\n      throw new Vex.RERR(\"MethodNotImplemented\",\n          \"addEndModifier() not implemented for this stave modifier.\");\n    }\n  };\n\n  return StaveModifier;\n}());\n\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements key signatures. A key signature sits on a stave\n// and indicates the notes with implicit accidentals.\nVex.Flow.KeySignature = (function() {\n  function KeySignature(keySpec) {\n    if (arguments.length > 0) this.init(keySpec);\n  }\n\n  // Space between natural and following accidental depending\n  // on vertical position\n  KeySignature.accidentalSpacing = {\n    '#': {\n      above: 6,\n      below: 4\n    },\n    'b': {\n      above: 4,\n      below: 7\n    },\n    'n': {\n      above: 3,\n      below: -1\n    }\n  };\n\n  // ## Prototype Methods\n  Vex.Inherit(KeySignature, Vex.Flow.StaveModifier, {\n    // Create a new Key Signature based on a `key_spec`\n    init: function(key_spec) {\n      KeySignature.superclass.init();\n\n      this.glyphFontScale = 38; // TODO(0xFE): Should this match StaveNote?\n      this.accList = Vex.Flow.keySignature(key_spec);\n    },\n\n    // Add an accidental glyph to the `stave`. `acc` is the data of the\n    // accidental to add. If the `next` accidental is also provided, extra\n    // width will be added to the initial accidental for optimal spacing.\n    addAccToStave: function(stave, acc, next) {\n      var glyph_data = Vex.Flow.accidentalCodes(acc.type);\n      var glyph = new Vex.Flow.Glyph(glyph_data.code, this.glyphFontScale);\n\n      // Determine spacing between current accidental and the next accidental\n      var extra_width = 0;\n      if (acc.type === \"n\" && next) {\n        var above = next.line >= acc.line;\n        var space = KeySignature.accidentalSpacing[next.type];\n        extra_width = above ? space.above : space.below;\n      }\n\n      // Set the width and place the glyph on the stave\n      glyph.setWidth(glyph_data.width + extra_width);\n      this.placeGlyphOnLine(glyph, stave, acc.line);\n      stave.addGlyph(glyph);\n    },\n\n    // Cancel out a key signature provided in the `spec` parameter. This will\n    // place appropriate natural accidentals before the key signature.\n    cancelKey: function(spec) {\n      // Get the accidental list for the cancelled key signature\n      var cancel_accList = Vex.Flow.keySignature(spec);\n\n      // If the cancelled key has a different accidental type, ie: # vs b\n      var different_types = this.accList.length > 0 &&\n                            cancel_accList[0].type !== this.accList[0].type;\n\n      // Determine how many naturals needed to add\n      var naturals = 0;\n      if (different_types) {\n        naturals = cancel_accList.length;\n      } else {\n        naturals = cancel_accList.length - this.accList.length;\n      }\n\n      // Return if no naturals needed\n      if (naturals < 1) return;\n\n      // Get the line position for each natural\n      var cancelled = [];\n      for (var i = 0; i < naturals; i++) {\n        var index = i;\n        if (!different_types) {\n          index = cancel_accList.length - naturals + i;\n        }\n\n        var acc = cancel_accList[index];\n        cancelled.push({type: \"n\", line: acc.line});\n      }\n\n      // Combine naturals with main accidental list for the key signature\n      this.accList = cancelled.concat(this.accList);\n\n      return this;\n    },\n\n    // Add the key signature to the `stave`. You probably want to use the \n    // helper method `.addToStave()` instead\n    addModifier: function(stave) {\n      this.convertAccLines(stave.clef, this.accList[0].type);\n      for (var i = 0; i < this.accList.length; ++i) {\n        this.addAccToStave(stave, this.accList[i], this.accList[i+1]);\n      }\n    },\n\n    // Add the key signature to the `stave`, if it's the not the `firstGlyph`\n    // a spacer will be added as well.\n    addToStave: function(stave, firstGlyph) {\n      if (this.accList.length === 0)\n        return this;\n\n      if (!firstGlyph) {\n        stave.addGlyph(this.makeSpacer(this.padding));\n      }\n\n      this.addModifier(stave);\n      return this;\n    },\n\n    // Apply the accidental staff line placement based on the `clef` and\n    // the  accidental `type` for the key signature ('# or 'b').\n    convertAccLines: function(clef, type) {\n      var offset = 0.0; // if clef === \"treble\"\n      var tenorSharps;\n      var isTenorSharps = ((clef === \"tenor\") && (type === \"#\")) ? true : false;\n\n      switch (clef) {\n        case \"bass\":\n          offset = 1;\n          break;\n        case \"alto\":\n          offset = 0.5;\n          break;\n        case \"tenor\":\n          if (!isTenorSharps) {\n            offset = -0.5;\n          }\n          break;\n      }\n\n      // Special-case for TenorSharps\n      var i;\n      if (isTenorSharps) {\n        tenorSharps = [3, 1, 2.5, 0.5, 2, 0, 1.5];\n        for (i = 0; i < this.accList.length; ++i) {\n          this.accList[i].line = tenorSharps[i];\n        }\n      }\n      else {\n        if (clef != \"treble\") {\n          for (i = 0; i < this.accList.length; ++i) {\n            this.accList[i].line += offset;\n          }\n        }\n      }\n    }\n  });\n\n  return KeySignature;\n}());\n// Vex Flow Notation\n// Implements time signatures glyphs for staffs\n// See tables.js for the internal time signatures\n// representation\n//\n\n/**\n * @param {string} timeSpec time signature, i.e. \"4/4\"\n * @param {number} [customPadding] custom padding when using multi-stave/multi-instrument setting\n * to align key/time signature (in pixels), optional\n * @constructor\n */\nVex.Flow.TimeSignature = (function() {\n  function TimeSignature(timeSpec, customPadding) {\n    if (arguments.length > 0) this.init(timeSpec, customPadding);\n  }\n\n  TimeSignature.glyphs = {\n    \"C\": {\n      code: \"v41\",\n      point: 40,\n      line: 2\n    },\n    \"C|\": {\n      code: \"vb6\",\n      point: 40,\n      line: 2\n    }\n  };\n\n  Vex.Inherit(TimeSignature, Vex.Flow.StaveModifier, {\n    init: function(timeSpec, customPadding) {\n      TimeSignature.superclass.init();\n       var padding = customPadding || 15;\n\n      this.setPadding(padding);\n      this.point = 40;\n      this.topLine = 2;\n      this.bottomLine = 4;\n      this.timeSig = this.parseTimeSpec(timeSpec);\n    },\n\n    parseTimeSpec: function(timeSpec) {\n      if (timeSpec == \"C\" || timeSpec == \"C|\") {\n        var glyphInfo = TimeSignature.glyphs[timeSpec];\n        return {num: false, line: glyphInfo.line,\n          glyph: new Vex.Flow.Glyph(glyphInfo.code, glyphInfo.point)};\n      }\n\n      var topNums = [];\n      var i, c;\n      for (i = 0; i < timeSpec.length; ++i) {\n        c = timeSpec.charAt(i);\n        if (c == \"/\") {\n          break;\n        }\n        else if (/[0-9]/.test(c)) {\n          topNums.push(c);\n        }\n        else {\n          throw new Vex.RERR(\"BadTimeSignature\",\n              \"Invalid time spec: \" + timeSpec);\n        }\n      }\n\n      if (i === 0) {\n        throw new Vex.RERR(\"BadTimeSignature\",\n              \"Invalid time spec: \" + timeSpec);\n      }\n\n      // skip the \"/\"\n      ++i;\n\n      if (i == timeSpec.length) {\n        throw new Vex.RERR(\"BadTimeSignature\",\n              \"Invalid time spec: \" + timeSpec);\n      }\n\n\n      var botNums = [];\n      for (; i < timeSpec.length; ++i) {\n        c = timeSpec.charAt(i);\n        if (/[0-9]/.test(c)) {\n          botNums.push(c);\n        }\n        else {\n          throw new Vex.RERR(\"BadTimeSignature\",\n              \"Invalid time spec: \" + timeSpec);\n        }\n      }\n\n\n      return {num: true, glyph: this.makeTimeSignatureGlyph(topNums, botNums)};\n    },\n\n    makeTimeSignatureGlyph: function(topNums, botNums) {\n      var glyph = new Vex.Flow.Glyph(\"v0\", this.point);\n      glyph[\"topGlyphs\"] = [];\n      glyph[\"botGlyphs\"] = [];\n\n      var topWidth = 0;\n      var i, num;\n      for (i = 0; i < topNums.length; ++i) {\n        num = topNums[i];\n        var topGlyph = new Vex.Flow.Glyph(\"v\" + num, this.point);\n\n        glyph.topGlyphs.push(topGlyph);\n        topWidth += topGlyph.getMetrics().width;\n      }\n\n      var botWidth = 0;\n      for (i = 0; i < botNums.length; ++i) {\n        num = botNums[i];\n        var botGlyph = new Vex.Flow.Glyph(\"v\" + num, this.point);\n\n        glyph.botGlyphs.push(botGlyph);\n        botWidth += botGlyph.getMetrics().width;\n      }\n\n      var width = (topWidth > botWidth ? topWidth : botWidth);\n      var xMin = glyph.getMetrics().x_min;\n\n      glyph.getMetrics = function() {\n        return {\n          x_min: xMin,\n          x_max: xMin + width,\n          width: width\n        };\n      };\n\n      var topStartX = (width - topWidth) / 2.0;\n      var botStartX = (width - botWidth) / 2.0;\n\n      var that = this;\n      glyph.renderToStave = function(x) {\n        var start_x = x + topStartX;\n        var i, g;\n        for (i = 0; i < this.topGlyphs.length; ++i) {\n          g = this.topGlyphs[i];\n          Vex.Flow.Glyph.renderOutline(this.context, g.metrics.outline,\n              g.scale, start_x + g.x_shift, this.stave.getYForLine(that.topLine) + 1);\n          start_x += g.getMetrics().width;\n        }\n\n        start_x = x + botStartX;\n        for (i = 0; i < this.botGlyphs.length; ++i) {\n          g = this.botGlyphs[i];\n          that.placeGlyphOnLine(g, this.stave, g.line);\n          Vex.Flow.Glyph.renderOutline(this.context, g.metrics.outline,\n              g.scale, start_x + g.x_shift, this.stave.getYForLine(that.bottomLine) + 1);\n          start_x += g.getMetrics().width;\n        }\n      };\n\n      return glyph;\n    },\n\n    getTimeSig: function() {\n      return this.timeSig;\n    },\n\n    addModifier: function(stave) {\n      if (!this.timeSig.num) {\n        this.placeGlyphOnLine(this.timeSig.glyph, stave, this.timeSig.line);\n      }\n      stave.addGlyph(this.timeSig.glyph);\n    },\n\n    addEndModifier: function(stave) {\n      if (!this.timeSig.num) {\n        this.placeGlyphOnLine(this.timeSig.glyph, stave, this.timeSig.line);\n      }\n      stave.addEndGlyph(this.timeSig.glyph);\n    }\n  });\n\n  return TimeSignature;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna Cheppudira 2013.\n// Co-author: Benjamin W. Bohl\n//\n// ## Description\n//\n// This file implements various types of clefs that can be rendered on a stave.\n//\n// See `tests/clef_tests.js` for usage examples.\n\nVex.Flow.Clef = (function() {\n  function Clef(clef, size, annotation) {\n    if (arguments.length > 0) this.init(clef, size, annotation);\n  }\n\n  // To enable logging for this class, set `Vex.Flow.Clef.DEBUG` to `true`.\n  function L() { if (Vex.Flow.Clef.DEBUG) Vex.L(\"Vex.Flow.Clef\", arguments); }\n\n  // Every clef name is associated with a glyph code from the font file\n  // and a default stave line number.\n  Clef.types = {\n    \"treble\": {\n      code: \"v83\",\n      line: 3\n    },\n    \"bass\": {\n      code: \"v79\",\n      line: 1\n    },\n    \"alto\": {\n      code: \"vad\",\n      line: 2\n    },\n    \"tenor\": {\n      code: \"vad\",\n      line: 1\n    },\n    \"percussion\": {\n      code: \"v59\",\n      line: 2\n    },\n    \"soprano\": {\n      code: \"vad\",\n      line: 4\n    },\n    \"mezzo-soprano\": {\n      code: \"vad\",\n      line: 3\n    },\n    \"baritone-c\": {\n      code: \"vad\",\n      line: 0\n    },\n    \"baritone-f\": {\n      code: \"v79\",\n      line: 2\n    },\n    \"subbass\": {\n      code: \"v79\",\n      line: 0\n    },\n    \"french\": {\n      code: \"v83\",\n      line: 4\n    },\n  };\n  // Sizes affect the point-size of the clef.\n  Clef.sizes = {\n    \"default\": 40,\n    \"small\": 32\n  };\n\n  // Annotations attach to clefs -- such as \"8\" for octave up or down.\n  Clef.annotations = {\n    \"8va\": {\n      code: \"v8\",\n      sizes: {\n        \"default\": {\n          point: 20,\n          attachments: {\n            \"treble\": {\n              line: -1.2,\n              x_shift: 11\n            }\n          }\n        },\n        \"small\": {\n          point: 18,\n          attachments: {\n            \"treble\": {\n              line: -0.4,\n              x_shift: 8\n            }\n          }\n        }\n      }\n    },\n    \"8vb\": {\n      code: \"v8\",\n      sizes: {\n        \"default\": {\n          point: 20,\n          attachments: {\n            \"treble\": {\n              line: 6.3,\n              x_shift: 10\n            },\n            \"bass\": {\n              line: 4,\n              x_shift: 1\n            }\n          }\n        },\n        \"small\": {\n          point: 18,\n          attachments: {\n            \"treble\": {\n              line: 5.8,\n              x_shift: 6\n            },\n            \"bass\": {\n              line: 3.5,\n              x_shift: 0.5\n            }\n          }\n        }\n      }\n    },\n  };\n  // ## Prototype Methods\n  Vex.Inherit(Clef, Vex.Flow.StaveModifier, {\n    // Create a new clef. The parameter `clef` must be a key from\n    // `Clef.types`.\n    init: function(clef, size, annotation) {\n      var superclass = Vex.Flow.Clef.superclass;\n      superclass.init.call(this);\n\n      this.clef = Vex.Flow.Clef.types[clef];\n      if (size === undefined) {\n        this.size = \"default\";\n      } else {\n        this.size = size;\n      }\n      this.clef.point = Vex.Flow.Clef.sizes[this.size];\n\n      // If an annotation, such as 8va, is specified, add it to the Clef object.\n      if (annotation !== undefined) {\n        var anno_dict = Vex.Flow.Clef.annotations[annotation];\n        this.annotation = {\n          code: anno_dict.code,\n          point: anno_dict.sizes[this.size].point,\n          line: anno_dict.sizes[this.size].attachments[clef].line,\n          x_shift: anno_dict.sizes[this.size].attachments[clef].x_shift\n        };\n      }\n      L(\"Creating clef:\", clef);\n    },\n\n    // Add this clef to the start of the given `stave`.\n    addModifier: function(stave) {\n      var glyph = new Vex.Flow.Glyph(this.clef.code, this.clef.point);\n      this.placeGlyphOnLine(glyph, stave, this.clef.line);\n      if (this.annotation !== undefined) {\n        var attachment = new Vex.Flow.Glyph(this.annotation.code, this.annotation.point);\n        attachment.metrics.x_max = 0;\n        attachment.setXShift(this.annotation.x_shift);\n        this.placeGlyphOnLine(attachment, stave, this.annotation.line);\n        stave.addGlyph(attachment);\n      }\n      stave.addGlyph(glyph);\n    },\n\n    // Add this clef to the end of the given `stave`.\n    addEndModifier: function(stave) {\n      var glyph = new Vex.Flow.Glyph(this.clef.code, this.clef.point);\n      this.placeGlyphOnLine(glyph, stave, this.clef.line);\n      stave.addEndGlyph(glyph);\n      if (this.annotation !== undefined) {\n        var attachment = new Vex.Flow.Glyph(this.annotation.code, this.annotation.point);\n        attachment.metrics.x_max = 0;\n        attachment.setXShift(this.annotation.x_shift);\n        this.placeGlyphOnLine(attachment, stave, this.annotation.line);\n        stave.addEndGlyph(attachment);\n      }\n    }\n  });\n\n  return Clef;\n}());\n\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements some standard music theory routines.\n//\n// requires: vex.js   (Vex)\n// requires: flow.js  (Vex.Flow)\n\n/**\n * @constructor\n */\nVex.Flow.Music = (function() {\n  function Music() {\n    this.init();\n  }\n\n  Music.NUM_TONES = 12;\n  Music.roots = [ \"c\", \"d\", \"e\", \"f\", \"g\", \"a\", \"b\" ];\n  Music.root_values = [ 0, 2, 4, 5, 7, 9, 11 ];\n  Music.root_indices = {\n    \"c\": 0,\n    \"d\": 1,\n    \"e\": 2,\n    \"f\": 3,\n    \"g\": 4,\n    \"a\": 5,\n    \"b\": 6\n  };\n\n  Music.canonical_notes = [\n    \"c\", \"c#\", \"d\", \"d#\",\n    \"e\", \"f\", \"f#\", \"g\",\n    \"g#\", \"a\", \"a#\", \"b\"\n  ];\n\n  Music.diatonic_intervals = [\n    \"unison\", \"m2\", \"M2\", \"m3\", \"M3\",\n    \"p4\", \"dim5\", \"p5\", \"m6\", \"M6\",\n    \"b7\", \"M7\", \"octave\"\n  ];\n\n  Music.diatonic_accidentals = {\n    \"unison\": {note: 0, accidental: 0},\n    \"m2\":     {note: 1, accidental: -1},\n    \"M2\":     {note: 1, accidental: 0},\n    \"m3\":     {note: 2, accidental: -1},\n    \"M3\":     {note: 2, accidental: 0},\n    \"p4\":     {note: 3, accidental: 0},\n    \"dim5\":   {note: 4, accidental: -1},\n    \"p5\":     {note: 4, accidental: 0},\n    \"m6\":     {note: 5, accidental: -1},\n    \"M6\":     {note: 5, accidental: 0},\n    \"b7\":     {note: 6, accidental: -1},\n    \"M7\":     {note: 6, accidental: 0},\n    \"octave\": {note: 7, accidental: 0}\n  };\n\n  Music.intervals = {\n    \"u\":  0, \"unison\": 0,\n    \"m2\": 1, \"b2\": 1, \"min2\": 1, \"S\": 1, \"H\": 1,\n    \"2\": 2, \"M2\": 2, \"maj2\": 2, \"T\": 2, \"W\": 2,\n    \"m3\": 3, \"b3\": 3, \"min3\": 3,\n    \"M3\": 4, \"3\": 4, \"maj3\": 4,\n    \"4\":  5, \"p4\":  5,\n    \"#4\": 6, \"b5\": 6, \"aug4\": 6, \"dim5\": 6,\n    \"5\":  7, \"p5\":  7,\n    \"#5\": 8, \"b6\": 8, \"aug5\": 8,\n    \"6\":  9, \"M6\":  9, \"maj6\": 9,\n    \"b7\": 10, \"m7\": 10, \"min7\": 10, \"dom7\": 10,\n    \"M7\": 11, \"maj7\": 11,\n    \"8\": 12, \"octave\": 12\n  };\n\n  Music.scales = {\n    major: [2, 2, 1, 2, 2, 2, 1],\n    dorian: [2, 1, 2, 2, 2, 1, 2],\n    mixolydian: [2, 2, 1, 2, 2, 1, 2],\n    minor: [2, 1, 2, 2, 1, 2, 2]\n  };\n\n  Music.accidentals = [ \"bb\", \"b\", \"n\", \"#\", \"##\" ];\n\n  Music.noteValues = {\n    'c':   { root_index: 0, int_val: 0 },\n    'cn':  { root_index: 0, int_val: 0 },\n    'c#':  { root_index: 0, int_val: 1 },\n    'c##': { root_index: 0, int_val: 2 },\n    'cb':  { root_index: 0, int_val: 11 },\n    'cbb': { root_index: 0, int_val: 10 },\n    'd':   { root_index: 1, int_val: 2 },\n    'dn':  { root_index: 1, int_val: 2 },\n    'd#':  { root_index: 1, int_val: 3 },\n    'd##': { root_index: 1, int_val: 4 },\n    'db':  { root_index: 1, int_val: 1 },\n    'dbb': { root_index: 1, int_val: 0 },\n    'e':   { root_index: 2, int_val: 4 },\n    'en':  { root_index: 2, int_val: 4 },\n    'e#':  { root_index: 2, int_val: 5 },\n    'e##': { root_index: 2, int_val: 6 },\n    'eb':  { root_index: 2, int_val: 3 },\n    'ebb': { root_index: 2, int_val: 2 },\n    'f':   { root_index: 3, int_val: 5 },\n    'fn':  { root_index: 3, int_val: 5 },\n    'f#':  { root_index: 3, int_val: 6 },\n    'f##': { root_index: 3, int_val: 7 },\n    'fb':  { root_index: 3, int_val: 4 },\n    'fbb': { root_index: 3, int_val: 3 },\n    'g':   { root_index: 4, int_val: 7 },\n    'gn':  { root_index: 4, int_val: 7 },\n    'g#':  { root_index: 4, int_val: 8 },\n    'g##': { root_index: 4, int_val: 9 },\n    'gb':  { root_index: 4, int_val: 6 },\n    'gbb': { root_index: 4, int_val: 5 },\n    'a':   { root_index: 5, int_val: 9 },\n    'an':  { root_index: 5, int_val: 9 },\n    'a#':  { root_index: 5, int_val: 10 },\n    'a##': { root_index: 5, int_val: 11 },\n    'ab':  { root_index: 5, int_val: 8 },\n    'abb': { root_index: 5, int_val: 7 },\n    'b':   { root_index: 6, int_val: 11 },\n    'bn':  { root_index: 6, int_val: 11 },\n    'b#':  { root_index: 6, int_val: 0 },\n    'b##': { root_index: 6, int_val: 1 },\n    'bb':  { root_index: 6, int_val: 10 },\n    'bbb': { root_index: 6, int_val: 9 }\n  };\n\n  Music.prototype = {\n    init: function() {},\n\n    isValidNoteValue: function(note) {\n      if (note == null || note < 0 || note >= Vex.Flow.Music.NUM_TONES)\n        return false;\n      return true;\n    },\n\n    isValidIntervalValue: function(interval) {\n      return this.isValidNoteValue(interval);\n    },\n\n    getNoteParts: function(noteString) {\n      if (!noteString || noteString.length < 1)\n        throw new Vex.RERR(\"BadArguments\", \"Invalid note name: \" + noteString);\n\n      if (noteString.length > 3)\n        throw new Vex.RERR(\"BadArguments\", \"Invalid note name: \" + noteString);\n\n      var note = noteString.toLowerCase();\n\n      var regex = /^([cdefgab])(b|bb|n|#|##)?$/;\n      var match = regex.exec(note);\n\n      if (match != null) {\n        var root = match[1];\n        var accidental = match[2];\n\n        return {\n          'root': root,\n          'accidental': accidental\n        };\n      } else {\n        throw new Vex.RERR(\"BadArguments\", \"Invalid note name: \" + noteString);\n      }\n    },\n\n    getKeyParts: function(keyString) {\n      if (!keyString || keyString.length < 1)\n        throw new Vex.RERR(\"BadArguments\", \"Invalid key: \" + keyString);\n\n      var key = keyString.toLowerCase();\n\n      // Support Major, Minor, Melodic Minor, and Harmonic Minor key types.\n      var regex = /^([cdefgab])(b|#)?(mel|harm|m|M)?$/;\n      var match = regex.exec(key);\n\n      if (match != null) {\n        var root = match[1];\n        var accidental = match[2];\n        var type = match[3];\n\n        // Unspecified type implies major\n        if (!type) type = \"M\";\n\n        return {\n          'root': root,\n          'accidental': accidental,\n          'type': type\n        };\n      } else {\n        throw new Vex.RERR(\"BadArguments\", \"Invalid key: \" + keyString);\n      }\n    },\n\n    getNoteValue: function(noteString) {\n      var value = Music.noteValues[noteString];\n      if (value == null)\n        throw new Vex.RERR(\"BadArguments\", \"Invalid note name: \" + noteString);\n\n      return value.int_val;\n    },\n\n    getIntervalValue: function(intervalString) {\n      var value = Music.intervals[intervalString];\n      if (value == null)\n        throw new Vex.RERR(\"BadArguments\",\n                           \"Invalid interval name: \" + intervalString);\n\n      return value;\n    },\n\n    getCanonicalNoteName: function(noteValue) {\n      if (!this.isValidNoteValue(noteValue))\n        throw new Vex.RERR(\"BadArguments\",\n                           \"Invalid note value: \" + noteValue);\n\n      return Music.canonical_notes[noteValue];\n    },\n\n    getCanonicalIntervalName: function(intervalValue) {\n      if (!this.isValidIntervalValue(intervalValue))\n        throw new Vex.RERR(\"BadArguments\",\n                           \"Invalid interval value: \" + intervalValue);\n\n      return Music.diatonic_intervals[intervalValue];\n    },\n\n    /* Given a note, interval, and interval direction, product the\n     * relative note.\n     */\n    getRelativeNoteValue: function(noteValue, intervalValue, direction) {\n      if (direction == null) direction = 1;\n      if (direction != 1 && direction != -1)\n        throw new Vex.RERR(\"BadArguments\", \"Invalid direction: \" + direction);\n\n      var sum = (noteValue + (direction * intervalValue)) % Music.NUM_TONES;\n      if (sum < 0) sum += Music.NUM_TONES;\n\n      return sum;\n    },\n\n    getRelativeNoteName: function(root, noteValue) {\n      var parts = this.getNoteParts(root);\n      var rootValue = this.getNoteValue(parts.root);\n      var interval = noteValue - rootValue;\n\n      if (Math.abs(interval) > Music.NUM_TONES - 3) {\n        var multiplier = 1;\n        if (interval > 0 ) multiplier = -1;\n\n        // Possibly wrap around. (Add +1 for modulo operator)\n        var reverse_interval = (((noteValue + 1) + (rootValue + 1)) %\n          Music.NUM_TONES) * multiplier;\n\n        if (Math.abs(reverse_interval) > 2) {\n          throw new Vex.RERR(\"BadArguments\", \"Notes not related: \" + root + \", \" +\n                            noteValue);\n        } else {\n          interval = reverse_interval;\n        }\n      }\n\n      if (Math.abs(interval) > 2)\n          throw new Vex.RERR(\"BadArguments\", \"Notes not related: \" + root + \", \" +\n                            noteValue);\n\n      var relativeNoteName = parts.root;\n      var i;\n      if (interval > 0) {\n        for (i = 1; i <= interval; ++i)\n          relativeNoteName += \"#\";\n      } else if (interval < 0) {\n        for (i = -1; i >= interval; --i)\n          relativeNoteName += \"b\";\n      }\n\n      return relativeNoteName;\n    },\n\n    /* Return scale tones, given intervals. Each successive interval is\n     * relative to the previous one, e.g., Major Scale:\n     *\n     *   TTSTTTS = [2,2,1,2,2,2,1]\n     *\n     * When used with key = 0, returns C scale (which is isomorphic to\n     * interval list).\n     */\n    getScaleTones: function(key, intervals) {\n      var tones = [];\n      tones.push(key);\n\n      var nextNote = key;\n      for (var i = 0; i < intervals.length; ++i) {\n        nextNote = this.getRelativeNoteValue(nextNote,\n                                             intervals[i]);\n        if (nextNote != key) tones.push(nextNote);\n      }\n\n      return tones;\n    },\n\n    /* Returns the interval of a note, given a diatonic scale.\n     *\n     * E.g., Given the scale C, and the note E, returns M3\n     */\n    getIntervalBetween: function(note1, note2, direction) {\n      if (direction == null) direction = 1;\n      if (direction != 1 && direction != -1)\n        throw new Vex.RERR(\"BadArguments\", \"Invalid direction: \" + direction);\n      if (!this.isValidNoteValue(note1) || !this.isValidNoteValue(note2))\n        throw new Vex.RERR(\"BadArguments\",\n                           \"Invalid notes: \" + note1 + \", \" + note2);\n\n      var difference;\n      if (direction == 1)\n        difference = note2 - note1;\n      else\n        difference = note1 - note2;\n\n      if (difference < 0) difference += Music.NUM_TONES;\n      return difference;\n    },\n\n    // Create a scale map that represents the pitch state for a\n    // `keySignature`. For example, passing a `G` to `keySignature` would \n    // return a scale map with every note naturalized except for `F` which\n    // has an `F#` state.\n    createScaleMap: function(keySignature) {\n      var keySigParts = this.getKeyParts(keySignature);\n      var scaleName = Vex.Flow.KeyManager.scales[keySigParts.type];\n\n      var keySigString = keySigParts.root;\n      if (keySigParts.accidental) keySigString += keySigParts.accidental;\n\n      if (!scaleName) throw new Vex.RERR(\"BadArguments\", \"Unsupported key type: \" + keySignature);\n\n      var scale = this.getScaleTones(this.getNoteValue(keySigString), scaleName);\n      var noteLocation = Vex.Flow.Music.root_indices[keySigParts.root];\n\n      var scaleMap = {};\n      for (var i = 0; i < Vex.Flow.Music.roots.length; ++i) {\n        var index = (noteLocation + i) % Vex.Flow.Music.roots.length;\n        var rootName = Vex.Flow.Music.roots[index];\n        var noteName = this.getRelativeNoteName(rootName, scale[i]);\n\n        if (noteName.length === 1) {\n          noteName += \"n\";\n        }\n\n        scaleMap[rootName] = noteName;\n      }\n\n      return scaleMap;\n    }\n\n  };\n\n  return Music;\n}());\n\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements diatonic key management.\n//\n// requires: vex.js   (Vex)\n// requires: flow.js  (Vex.Flow)\n// requires: music.js (Vex.Flow.Music)\n\n/**\n * @constructor\n */\nVex.Flow.KeyManager = (function() {\n  function KeyManager(key) {\n    this.init(key);\n  }\n\n  KeyManager.scales = {\n    \"M\": Vex.Flow.Music.scales.major,\n    \"m\": Vex.Flow.Music.scales.minor\n  };\n\n  KeyManager.prototype = {\n    init: function(key) {\n      this.music = new Vex.Flow.Music();\n      this.setKey(key);\n    },\n\n    setKey: function(key) {\n      this.key = key;\n      this.reset();\n      return this;\n    },\n\n    getKey: function() { return this.key; },\n\n    reset: function() {\n      this.keyParts = this.music.getKeyParts(this.key);\n\n      this.keyString = this.keyParts.root;\n      if (this.keyParts.accidental) this.keyString += this.keyParts.accidental;\n\n      var is_supported_type = KeyManager.scales[this.keyParts.type];\n      if (!is_supported_type)\n        throw new Vex.RERR(\"BadArguments\", \"Unsupported key type: \" + this.key);\n\n      this.scale = this.music.getScaleTones(\n          this.music.getNoteValue(this.keyString),\n          Vex.Flow.KeyManager.scales[this.keyParts.type]);\n\n      this.scaleMap = {};\n      this.scaleMapByValue = {};\n      this.originalScaleMapByValue = {};\n\n      var noteLocation = Vex.Flow.Music.root_indices[this.keyParts.root];\n\n      for (var i = 0; i < Vex.Flow.Music.roots.length; ++i) {\n        var index = (noteLocation + i) % Vex.Flow.Music.roots.length;\n        var rootName = Vex.Flow.Music.roots[index];\n\n        var noteName = this.music.getRelativeNoteName(rootName, this.scale[i]);\n        this.scaleMap[rootName] = noteName;\n        this.scaleMapByValue[this.scale[i]] = noteName;\n        this.originalScaleMapByValue[this.scale[i]] = noteName;\n      }\n\n      return this;\n    },\n\n    getAccidental: function(key) {\n      var root = this.music.getKeyParts(key).root;\n      var parts = this.music.getNoteParts(this.scaleMap[root]);\n\n      return {\n        note: this.scaleMap[root],\n        accidental: parts.accidental\n      };\n    },\n\n    selectNote: function(note) {\n      note = note.toLowerCase();\n      var parts = this.music.getNoteParts(note);\n\n      // First look for matching note in our altered scale\n      var scaleNote = this.scaleMap[parts.root];\n      var modparts = this.music.getNoteParts(scaleNote);\n\n      if (scaleNote == note) return {\n        \"note\": scaleNote,\n        \"accidental\": parts.accidental,\n        \"change\": false\n      };\n\n      // Then search for a note of equivalent value in our altered scale\n      var valueNote = this.scaleMapByValue[this.music.getNoteValue(note)];\n      if (valueNote != null) {\n        return {\n          \"note\": valueNote,\n          \"accidental\": this.music.getNoteParts(valueNote).accidental,\n          \"change\": false\n        };\n      }\n\n      // Then search for a note of equivalent value in the original scale\n      var originalValueNote = this.originalScaleMapByValue[\n        this.music.getNoteValue(note)];\n      if (originalValueNote != null) {\n        this.scaleMap[modparts.root] = originalValueNote;\n        delete this.scaleMapByValue[this.music.getNoteValue(scaleNote)];\n        this.scaleMapByValue[this.music.getNoteValue(note)] = originalValueNote;\n        return {\n          \"note\": originalValueNote,\n          \"accidental\": this.music.getNoteParts(originalValueNote).accidental,\n          \"change\": true\n        };\n      }\n\n      // Then try to unmodify a currently modified note.\n      if (modparts.root == note) {\n        delete this.scaleMapByValue[\n          this.music.getNoteValue(this.scaleMap[parts.root])];\n        this.scaleMapByValue[this.music.getNoteValue(modparts.root)] =\n          modparts.root;\n        this.scaleMap[modparts.root] = modparts.root;\n        return {\n          \"note\": modparts.root,\n          \"accidental\": null,\n          \"change\": true\n        };\n      }\n\n      // Last resort -- shitshoot\n      delete this.scaleMapByValue[\n        this.music.getNoteValue(this.scaleMap[parts.root])];\n      this.scaleMapByValue[this.music.getNoteValue(note)] = note;\n\n      delete this.scaleMap[modparts.root];\n      this.scaleMap[modparts.root] = note;\n\n      return {\n        \"note\": note,\n        \"accidental\": parts.accidental,\n        \"change\": true\n      };\n    }\n  };\n\n  return KeyManager;\n}());\n\n// Vex Flow\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Support for different rendering contexts: Canvas, Raphael\n//\n// Copyright Mohit Cheppudira 2010\n\n/* global document: false */\n\nVex.Flow.Renderer = (function() {\n  function Renderer(sel, backend) {\n    if (arguments.length > 0) this.init(sel, backend);\n  }\n\n  Renderer.Backends = {\n    CANVAS: 1,\n    RAPHAEL: 2,\n    SVG: 3,\n    VML: 4\n  };\n\n  //End of line types\n  Renderer.LineEndType = {\n      NONE: 1,        // No leg\n      UP: 2,          // Upward leg\n      DOWN: 3         // Downward leg\n  };\n\n  // Set this to true if you're using VexFlow inside a runtime\n  // that does not allow modifiying canvas objects. There is a small\n  // performance degradation due to the extra indirection.\n  Renderer.USE_CANVAS_PROXY = false;\n\n  Renderer.buildContext = function(sel,\n      backend, width, height, background) {\n    var renderer = new Renderer(sel, backend);\n    if (width && height) { renderer.resize(width, height); }\n\n    if (!background) background = \"#eed\";\n    var ctx = renderer.getContext();\n    ctx.setBackgroundFillStyle(background);\n    return ctx;\n  };\n\n  Renderer.getCanvasContext = function(sel, width, height, background) {\n    return Renderer.buildContext(sel, Renderer.Backends.CANVAS,\n        width, height, background);\n  };\n\n  Renderer.getRaphaelContext = function(sel, width, height, background) {\n    return Renderer.buildContext(sel, Renderer.Backends.RAPHAEL,\n        width, height, background);\n  };\n\n  Renderer.bolsterCanvasContext = function(ctx) {\n    if (Renderer.USE_CANVAS_PROXY) {\n      return new Vex.Flow.CanvasContext(ctx);\n    }\n\n    var methods = [\"clear\", \"setFont\", \"setRawFont\", \"setFillStyle\", \"setBackgroundFillStyle\",\n                   \"setStrokeStyle\", \"setShadowColor\", \"setShadowBlur\", \"setLineWidth\",\n                   \"setLineCap\", \"setLineDash\"];\n    ctx.vexFlowCanvasContext = ctx;\n\n    for (var i in methods) {\n      var method = methods[i];\n      ctx[method] = Vex.Flow.CanvasContext.prototype[method];\n    }\n\n    return ctx;\n  };\n\n  //Draw a dashed line (horizontal, vertical or diagonal\n  //dashPattern = [3,3] draws a 3 pixel dash followed by a three pixel space.\n  //setting the second number to 0 draws a solid line.\n  Renderer.drawDashedLine = function(context, fromX, fromY, toX, toY, dashPattern) {\n    context.beginPath();\n\n    var dx = toX - fromX;\n    var dy = toY - fromY;\n    var angle = Math.atan2(dy, dx);\n    var x = fromX;\n    var y = fromY;\n    context.moveTo(fromX, fromY);\n    var idx = 0;\n    var draw = true;\n    while (!((dx < 0 ? x <= toX : x >= toX) && (dy < 0 ? y <= toY : y >= toY))) {\n      var dashLength = dashPattern[idx++ % dashPattern.length];\n      var nx = x + (Math.cos(angle) * dashLength);\n      x = dx < 0 ? Math.max(toX, nx) : Math.min(toX, nx);\n      var ny = y + (Math.sin(angle) * dashLength);\n      y = dy < 0 ? Math.max(toY, ny) : Math.min(toY, ny);\n      if (draw) {\n        context.lineTo(x, y);\n      } else {\n        context.moveTo(x, y);\n      }\n        draw = !draw;\n    }\n\n    context.closePath();\n    context.stroke();\n  };\n\n  Renderer.prototype = {\n    init: function(sel, backend) {\n      // Verify selector\n      this.sel = sel;\n      if (!this.sel) throw new Vex.RERR(\"BadArgument\",\n          \"Invalid selector for renderer.\");\n\n      // Get element from selector\n      this.element = document.getElementById(sel);\n      if (!this.element) this.element = sel;\n\n      // Verify backend and create context\n      this.ctx = null;\n      this.paper = null;\n      this.backend = backend;\n      if (this.backend == Renderer.Backends.CANVAS) {\n        // Create context.\n        if (!this.element.getContext) throw new Vex.RERR(\"BadElement\",\n          \"Can't get canvas context from element: \" + sel);\n        this.ctx = Renderer.bolsterCanvasContext(\n            this.element.getContext('2d'));\n      } else if (this.backend == Renderer.Backends.RAPHAEL) {\n        this.ctx = new Vex.Flow.RaphaelContext(this.element);\n      } else {\n        throw new Vex.RERR(\"InvalidBackend\",\n          \"No support for backend: \" + this.backend);\n      }\n    },\n\n    resize: function(width, height) {\n      if (this.backend == Renderer.Backends.CANVAS) {\n        if (!this.element.getContext) throw new Vex.RERR(\"BadElement\",\n          \"Can't get canvas context from element: \" + this.sel);\n        this.element.width = width;\n        this.element.height = height;\n        this.ctx = Renderer.bolsterCanvasContext(\n            this.element.getContext('2d'));\n      } else {\n        this.ctx.resize(width, height);\n      }\n\n      return this;\n    },\n\n    getContext: function() { return this.ctx; }\n  };\n\n  return Renderer;\n}());\n\n\n\n// Vex Flow\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nVex.Flow.RaphaelContext = (function() {\n  function RaphaelContext(element) {\n    if (arguments.length > 0) this.init(element);\n  }\n\n  RaphaelContext.prototype = {\n    init: function(element) {\n      this.element = element;\n      this.paper = Raphael(element);\n      this.path = \"\";\n      this.pen = {x: 0, y: 0};\n      this.lineWidth = 1.0;\n      this.state = {\n        scale: { x: 1, y: 1 },\n        font_family: \"Arial\",\n        font_size: 8,\n        font_weight: 800\n      };\n\n      this.attributes = {\n        \"stroke-width\": 0.3,\n        \"fill\": \"black\",\n        \"stroke\": \"black\",\n        \"font\": \"10pt Arial\"\n      };\n\n      this.background_attributes = {\n        \"stroke-width\": 0,\n        \"fill\": \"white\",\n        \"stroke\": \"white\",\n        \"font\": \"10pt Arial\"\n      };\n\n      this.shadow_attributes = {\n        width: 0,\n        color: \"black\"\n      };\n\n      this.state_stack= [];\n    },\n\n    setFont: function(family, size, weight) {\n      this.state.font_family = family;\n      this.state.font_size = size;\n      this.state.font_weight = weight;\n      this.attributes.font = (this.state.font_weight || \"\") + \" \" +\n        (this.state.font_size * this.state.scale.x) + \"pt \" +\n        this.state.font_family;\n      return this;\n    },\n\n    setRawFont: function(font) {\n      this.attributes.font = font;\n      return this;\n    },\n\n    setFillStyle: function(style) {\n      this.attributes.fill = style;\n      return this;\n    },\n\n    setBackgroundFillStyle: function(style) {\n      this.background_attributes.fill = style;\n      this.background_attributes.stroke = style;\n      return this;\n    },\n\n    setStrokeStyle: function(style) {\n      this.attributes.stroke = style;\n      return this;\n    },\n\n    setShadowColor: function(style) {\n      this.shadow_attributes.color = style;\n      return this;\n    },\n\n    setShadowBlur: function(blur) {\n      this.shadow_attributes.width = blur;\n      return this;\n    },\n\n    setLineWidth: function(width) {\n      this.attributes[\"stroke-width\"] = width;\n      this.lineWidth = width;\n    },\n\n    // Empty because there is no equivalent in SVG\n    setLineDash: function() { return this; },\n    setLineCap: function() { return this; },\n\n    scale: function(x, y) {\n      this.state.scale = { x: x, y: y };\n      this.attributes.scale = x + \",\" + y + \",0,0\";\n      this.attributes.font = this.state.font_size * this.state.scale.x + \"pt \" +\n        this.state.font_family;\n      this.background_attributes.scale = x + \",\" + y + \",0,0\";\n      this.background_attributes.font = this.state.font_size *\n        this.state.scale.x + \"pt \" +\n        this.state.font_family;\n      return this;\n    },\n\n    clear: function() { this.paper.clear(); },\n\n    resize: function(width, height) {\n      this.element.style.width = width;\n      this.paper.setSize(width, height);\n      return this;\n    },\n\n    // Sets the SVG `viewBox` property, which results in auto scaling images when its container\n    // is resized.\n    //\n    // Usage: `ctx.setViewBox(\"0 0 600 400\")`\n    setViewBox: function(viewBox) {\n      this.paper.canvas.setAttribute('viewBox', viewBox);\n    },\n\n    rect: function(x, y, width, height) {\n      if (height < 0) {\n        y += height;\n        height = -height;\n      }\n\n      this.paper.rect(x, y, width - 0.5, height - 0.5).\n        attr(this.attributes).\n        attr(\"fill\", \"none\").\n        attr(\"stroke-width\", this.lineWidth); return this;\n    },\n\n    fillRect: function(x, y, width, height) {\n      if (height < 0) {\n        y += height;\n        height = -height;\n      }\n\n      this.paper.rect(x, y, width - 0.5, height - 0.5).\n        attr(this.attributes);\n      return this;\n    },\n\n    clearRect: function(x, y, width, height) {\n      if (height < 0) {\n        y += height;\n        height = -height;\n      }\n\n      this.paper.rect(x, y, width - 0.5, height - 0.5).\n        attr(this.background_attributes);\n      return this;\n    },\n\n    beginPath: function() {\n      this.path = \"\";\n      this.pen.x = 0;\n      this.pen.y = 0;\n      return this;\n    },\n\n    moveTo: function(x, y) {\n      this.path += \"M\" + x + \",\" + y;\n      this.pen.x = x;\n      this.pen.y = y;\n      return this;\n    },\n\n    lineTo: function(x, y) {\n      this.path += \"L\" + x + \",\" + y;\n      this.pen.x = x;\n      this.pen.y = y;\n      return this;\n    },\n\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n      this.path += \"C\" +\n        x1 + \",\" +\n        y1 + \",\" +\n        x2 + \",\" +\n        y2 + \",\" +\n        x + \",\" +\n        y;\n      this.pen.x = x;\n      this.pen.y = y;\n      return this;\n    },\n\n    quadraticCurveTo: function(x1, y1, x, y) {\n      this.path += \"Q\" +\n        x1 + \",\" +\n        y1 + \",\" +\n        x + \",\" +\n        y;\n      this.pen.x = x;\n      this.pen.y = y;\n      return this;\n    },\n\n    // This is an attempt (hack) to simulate the HTML5 canvas\n    // arc method.\n    arc: function(x, y, radius, startAngle, endAngle, antiClockwise) {\n      function normalizeAngle(angle) {\n        while (angle < 0) {\n          angle += Math.PI * 2;\n        }\n\n        while (angle > Math.PI * 2) {\n          angle -= Math.PI * 2;\n        }\n        return angle;\n      }\n\n      startAngle = normalizeAngle(startAngle);\n      endAngle = normalizeAngle(endAngle);\n\n      if (startAngle > endAngle) {\n          var tmp = startAngle;\n          startAngle = endAngle;\n          endAngle = tmp;\n          antiClockwise = !antiClockwise;\n      }\n\n      var delta = endAngle - startAngle;\n\n      if (delta > Math.PI) {\n          this.arcHelper(x, y, radius, startAngle, startAngle + delta / 2,\n                         antiClockwise);\n          this.arcHelper(x, y, radius, startAngle + delta / 2, endAngle,\n                         antiClockwise);\n      }\n      else {\n          this.arcHelper(x, y, radius, startAngle, endAngle, antiClockwise);\n      }\n      return this;\n    },\n\n    arcHelper: function(x, y, radius, startAngle, endAngle, antiClockwise) {\n      var x1 = x + radius * Math.cos(startAngle);\n      var y1 = y + radius * Math.sin(startAngle);\n\n      var x2 = x + radius * Math.cos(endAngle);\n      var y2 = y + radius * Math.sin(endAngle);\n\n      var largeArcFlag = 0;\n      var sweepFlag = 0;\n      if (antiClockwise) {\n        sweepFlag = 1;\n        if (endAngle - startAngle < Math.PI)\n          largeArcFlag = 1;\n      }\n      else if (endAngle - startAngle > Math.PI) {\n          largeArcFlag = 1;\n      }\n\n      this.path += \"M\" + x1 + \",\" + y1 + \",\" + \"A\" +\n        radius + \",\" + radius + \",\" + \"0,\" + largeArcFlag + \",\" + sweepFlag + \",\" +\n        x2 + \",\" + y2 + \"M\" + this.pen.x + \",\" + this.pen.y;\n    },\n\n    // Adapted from the source for Raphael's Element.glow\n    glow: function() {\n      var out = this.paper.set();\n      if (this.shadow_attributes.width > 0) {\n        var sa = this.shadow_attributes;\n        var num_paths = sa.width / 2;\n        for (var i = 1; i <= num_paths; i++) {\n          out.push(this.paper.path(this.path).attr({\n            stroke: sa.color,\n            \"stroke-linejoin\": \"round\",\n            \"stroke-linecap\": \"round\",\n            \"stroke-width\": +(sa.width / num_paths * i).toFixed(3),\n            opacity: +((sa.opacity || 0.3) / num_paths).toFixed(3)\n          }));\n        }\n      }\n      return out;\n    },\n\n    fill: function() {\n      var elem = this.paper.path(this.path).\n        attr(this.attributes).\n        attr(\"stroke-width\", 0);\n      this.glow(elem);\n      return this;\n    },\n\n    stroke: function() {\n      var elem = this.paper.path(this.path).\n        attr(this.attributes).\n        attr(\"fill\", \"none\").\n        attr(\"stroke-width\", this.lineWidth);\n      this.glow(elem);\n      return this;\n    },\n\n    closePath: function() {\n      this.path += \"Z\";\n      return this;\n    },\n\n    measureText: function(text) {\n      var txt = this.paper.text(0, 0, text).\n        attr(this.attributes).\n        attr(\"fill\", \"none\").\n        attr(\"stroke\", \"none\");\n      var bounds = txt.getBBox();\n      txt.remove();\n\n      return {\n        width: bounds.width,\n        height: bounds.height\n      };\n    },\n\n    fillText: function(text, x, y) {\n      this.paper.text(x + (this.measureText(text).width / 2),\n          (y - (this.state.font_size / (2.25 * this.state.scale.y))), text).\n        attr(this.attributes);\n      return this;\n    },\n\n    save: function() {\n      // TODO(mmuthanna): State needs to be deep-copied.\n      this.state_stack.push({\n        state: {\n          font_family: this.state.font_family\n        },\n        attributes: {\n          font: this.attributes.font,\n          fill: this.attributes.fill,\n          stroke: this.attributes.stroke,\n          \"stroke-width\": this.attributes[\"stroke-width\"]\n        },\n        shadow_attributes: {\n          width: this.shadow_attributes.width,\n          color: this.shadow_attributes.color\n        }\n      });\n      return this;\n    },\n\n    restore: function() {\n      // TODO(0xfe): State needs to be deep-restored.\n      var state = this.state_stack.pop();\n      this.state.font_family = state.state.font_family;\n      this.attributes.font = state.attributes.font;\n      this.attributes.fill = state.attributes.fill;\n      this.attributes.stroke = state.attributes.stroke;\n      this.attributes[\"stroke-width\"] = state.attributes[\"stroke-width\"];\n      this.shadow_attributes.width = state.shadow_attributes.width;\n      this.shadow_attributes.color = state.shadow_attributes.color;\n      return this;\n    }\n  };\n\n  return RaphaelContext;\n}());\n\n// Vex Flow\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// A rendering context for the Raphael backend.\n//\n// Copyright Mohit Cheppudira 2010\n\n/** @constructor */\nVex.Flow.CanvasContext = (function() {\n  function CanvasContext(context) {\n    if (arguments.length > 0) this.init(context);\n  }\n\n  CanvasContext.WIDTH = 600;\n  CanvasContext.HEIGHT = 400;\n\n  CanvasContext.prototype = {\n    init: function(context) {\n      // Use a name that is unlikely to clash with a canvas context\n      // property\n      this.vexFlowCanvasContext = context;\n      if (!context.canvas) {\n        this.canvas = {\n          width: CanvasContext.WIDTH,\n          height: CanvasContext.HEIGHT\n        };\n      } else {\n        this.canvas = context.canvas;\n      }\n    },\n\n    clear: function() {\n      this.vexFlowCanvasContext.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    },\n\n    setFont: function(family, size, weight) {\n      this.vexFlowCanvasContext.font = (weight || \"\") + \" \" + size + \"pt \" + family;\n      return this;\n    },\n\n    setRawFont: function(font) {\n      this.vexFlowCanvasContext.font = font;\n      return this;\n    },\n\n    setFillStyle: function(style) {\n      this.vexFlowCanvasContext.fillStyle = style;\n      return this;\n    },\n\n    setBackgroundFillStyle: function(style) {\n      this.background_fillStyle = style;\n      return this;\n    },\n\n    setStrokeStyle: function(style) {\n      this.vexFlowCanvasContext.strokeStyle = style;\n      return this;\n    },\n\n    setShadowColor: function(style) {\n      this.vexFlowCanvasContext.shadowColor = style;\n      return this;\n    },\n\n    setShadowBlur: function(blur) {\n      this.vexFlowCanvasContext.shadowBlur = blur;\n      return this;\n    },\n\n    setLineWidth: function(width) {\n      this.vexFlowCanvasContext.lineWidth = width;\n      return this;\n    },\n\n    setLineCap: function(cap_type) {\n      this.vexFlowCanvasContext.lineCap = cap_type;\n      return this;\n    },\n\n    setLineDash: function(dash) {\n      this.vexFlowCanvasContext.lineDash = dash;\n    },\n\n    scale: function(x, y) {\n      return this.vexFlowCanvasContext.scale(parseFloat(x), parseFloat(y));\n    },\n\n    resize: function(width, height) {\n      return this.vexFlowCanvasContext.resize(\n          parseInt(width, 10), parseInt(height, 10));\n    },\n\n    rect: function(x, y, width, height) {\n      return this.vexFlowCanvasContext.rect(x, y, width, height);\n    },\n\n    fillRect: function(x, y, width, height) {\n      return this.vexFlowCanvasContext.fillRect(x, y, width, height);\n    },\n\n    clearRect: function(x, y, width, height) {\n      return this.vexFlowCanvasContext.clearRect(x, y, width, height);\n    },\n\n    beginPath: function() {\n      return this.vexFlowCanvasContext.beginPath();\n    },\n\n    moveTo: function(x, y) {\n      return this.vexFlowCanvasContext.moveTo(x, y);\n    },\n\n    lineTo: function(x, y) {\n      return this.vexFlowCanvasContext.lineTo(x, y);\n    },\n\n    bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n      return this.vexFlowCanvasContext.bezierCurveTo(x1, y1, x2, y2, x, y);\n    },\n\n    quadraticCurveTo: function(x1, y1, x, y) {\n      return this.vexFlowCanvasContext.quadraticCurveTo(x1, y1, x, y);\n    },\n\n    // This is an attempt (hack) to simulate the HTML5 canvas\n    // arc method.\n    arc: function(x, y, radius, startAngle, endAngle, antiClockwise) {\n      return this.vexFlowCanvasContext.arc(x, y, radius, startAngle, endAngle, antiClockwise);\n    },\n\n    // Adapted from the source for Raphael's Element.glow\n    glow: function() {\n      return this.vexFlowCanvasContext.glow();\n    },\n\n    fill: function() {\n      return this.vexFlowCanvasContext.fill();\n    },\n\n    stroke: function() {\n      return this.vexFlowCanvasContext.stroke();\n    },\n\n    closePath: function() {\n      return this.vexFlowCanvasContext.closePath();\n    },\n\n    measureText: function(text) {\n      return this.vexFlowCanvasContext.measureText(text);\n    },\n\n    fillText: function(text, x, y) {\n      return this.vexFlowCanvasContext.fillText(text, x, y);\n    },\n\n    save: function() {\n      return this.vexFlowCanvasContext.save();\n    },\n\n    restore: function() {\n      return this.vexFlowCanvasContext.restore();\n    }\n  };\n\n  return CanvasContext;\n}());\n\n// Vex Flow Notation\n// Author Larry Kuhns 2011\n// Implements barlines (single, double, repeat, end)\n//\n// Requires vex.js.\n\n/**\n * @constructor\n */\nVex.Flow.Barline = (function() {\n  function Barline(type, x) {\n    if (arguments.length > 0) this.init(type, x);\n  }\n\n  Barline.type = {\n    SINGLE: 1,\n    DOUBLE: 2,\n    END: 3,\n    REPEAT_BEGIN: 4,\n    REPEAT_END: 5,\n    REPEAT_BOTH: 6,\n    NONE: 7\n  };\n\n  Vex.Inherit(Barline, Vex.Flow.StaveModifier, {\n    init: function(type, x) {\n      Barline.superclass.init.call(this);\n      this.thickness = Vex.Flow.STAVE_LINE_THICKNESS;\n      this.barline = type;\n      this.x = x;    // Left most x for the stave\n    },\n\n    getCategory: function() { return \"barlines\"; },\n    setX: function(x) { this.x = x; return this; },\n\n    // Draw barlines\n    draw: function(stave, x_shift) {\n      x_shift = typeof x_shift !== 'number' ? 0 : x_shift;\n\n      switch (this.barline) {\n        case Barline.type.SINGLE:\n          this.drawVerticalBar(stave, this.x, false);\n          break;\n        case Barline.type.DOUBLE:\n          this.drawVerticalBar(stave, this.x, true);\n          break;\n        case Barline.type.END:\n          this.drawVerticalEndBar(stave, this.x);\n          break;\n        case Barline.type.REPEAT_BEGIN:\n          // If the barline is shifted over (in front of clef/time/key)\n          // Draw vertical bar at the beginning.\n          if (x_shift > 0) {\n            this.drawVerticalBar(stave, this.x);\n          }\n          this.drawRepeatBar(stave, this.x + x_shift, true);\n          break;\n        case Barline.type.REPEAT_END:\n          this.drawRepeatBar(stave, this.x, false);\n          break;\n        case Barline.type.REPEAT_BOTH:\n          this.drawRepeatBar(stave, this.x, false);\n          this.drawRepeatBar(stave, this.x, true);\n          break;\n        default:\n          // Default is NONE, so nothing to draw\n          break;\n      }\n    },\n\n    drawVerticalBar: function(stave, x, double_bar) {\n      if (!stave.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw stave without canvas context.\");\n      var topY = stave.getYForLine(0);\n      var botY = stave.getYForLine(stave.getNumLines() - 1) + this.thickness;\n      if (double_bar)\n        stave.context.fillRect(x - 3, topY, 1, botY - topY);\n      stave.context.fillRect(x, topY, 1, botY - topY);\n    },\n\n    drawVerticalEndBar: function(stave, x) {\n      if (!stave.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw stave without canvas context.\");\n\n      var topY = stave.getYForLine(0);\n      var botY = stave.getYForLine(stave.getNumLines() - 1) + this.thickness;\n      stave.context.fillRect(x - 5, topY, 1, botY - topY);\n      stave.context.fillRect(x - 2, topY, 3, botY - topY);\n    },\n\n    drawRepeatBar: function(stave, x, begin) {\n      if (!stave.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw stave without canvas context.\");\n\n      var topY = stave.getYForLine(0);\n      var botY = stave.getYForLine(stave.getNumLines() - 1) + this.thickness;\n      var x_shift = 3;\n\n      if (!begin) {\n        x_shift = -5;\n      }\n\n      stave.context.fillRect(x + x_shift, topY, 1, botY - topY);\n      stave.context.fillRect(x - 2, topY, 3, botY - topY);\n\n      var dot_radius = 2;\n\n      // Shift dots left or right\n      if (begin) {\n        x_shift += 4;\n      } else {\n        x_shift -= 4;\n      }\n\n      var dot_x = (x + x_shift) + (dot_radius / 2);\n\n      // calculate the y offset based on number of stave lines\n      var y_offset = (stave.getNumLines() - 1) *\n        stave.getSpacingBetweenLines();\n      y_offset = (y_offset / 2) -\n                 (stave.getSpacingBetweenLines() / 2);\n      var dot_y = topY + y_offset + (dot_radius / 2);\n\n      // draw the top repeat dot\n      stave.context.beginPath();\n      stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n      stave.context.fill();\n\n      //draw the bottom repeat dot\n      dot_y += stave.getSpacingBetweenLines();\n      stave.context.beginPath();\n      stave.context.arc(dot_x, dot_y, dot_radius, 0, Math.PI * 2, false);\n      stave.context.fill();\n    }\n  });\n\n  return Barline;\n}());\n\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// This class by Raffaele Viglianti, 2012 http://itisnotsound.wordpress.com/\n//\n// This class implements hairpins between notes.\n// Hairpins can be either Crescendo or Descrescendo.\n\n/**\n * Create a new hairpin from the specified notes.\n *\n * @constructor\n * @param {!Object} notes The notes to tie up.\n * @param {!Object} type The type of hairpin\n */\nVex.Flow.StaveHairpin = (function() {\n  function StaveHairpin(notes, type) {\n    if (arguments.length > 0) this.init(notes, type);\n  }\n\n  StaveHairpin.type = {\n    CRESC: 1,\n    DECRESC: 2\n  };\n\n  /* Helper function to convert ticks into pixels.\n   * Requires a Formatter with voices joined and formatted (to\n   * get pixels per tick)\n   *\n   * options is struct that has:\n   *\n   *  {\n   *   height: px,\n   *   y_shift: px, //vertical offset\n   *   left_shift_ticks: 0, //left horizontal offset expressed in ticks\n   *   right_shift_ticks: 0 // right horizontal offset expressed in ticks\n   *  }\n   *\n   **/\n  StaveHairpin.FormatByTicksAndDraw = function(ctx, formatter, notes, type, position, options) {\n    var ppt = formatter.pixelsPerTick;\n\n    if (ppt == null){\n      throw new Vex.RuntimeError(\"BadArguments\",\n          \"A valid Formatter must be provide to draw offsets by ticks.\");}\n\n    var l_shift_px = ppt * options.left_shift_ticks;\n    var r_shift_px = ppt * options.right_shift_ticks;\n\n    var hairpin_options = {\n      height: options.height,\n      y_shift:options.y_shift,\n      left_shift_px:l_shift_px,\n      right_shift_px:r_shift_px};\n\n    new StaveHairpin({\n      first_note: notes.first_note,\n      last_note: notes.last_note\n    }, type)\n      .setContext(ctx)\n      .setRenderOptions(hairpin_options)\n      .setPosition(position)\n      .draw();\n  };\n\n  StaveHairpin.prototype = {\n    init: function(notes, type) {\n      /**\n       * Notes is a struct that has:\n       *\n       *  {\n       *    first_note: Note,\n       *    last_note: Note,\n       *  }\n       *\n       **/\n\n      this.notes = notes;\n      this.hairpin = type;\n      this.position = Vex.Flow.Modifier.Position.BELOW;\n\n      this.context = null;\n\n      this.render_options = {\n          height: 10,\n          y_shift: 0, //vertical offset\n          left_shift_px: 0, //left horizontal offset\n          right_shift_px: 0 // right horizontal offset\n        };\n\n      this.setNotes(notes);\n    },\n\n    setContext: function(context) { this.context = context; return this; },\n\n    setPosition: function(position) {\n      if (position == Vex.Flow.Modifier.Position.ABOVE ||\n          position == Vex.Flow.Modifier.Position.BELOW)\n        this.position = position;\n      return this;\n    },\n\n    setRenderOptions: function(options) {\n      if (options.height != null &&\n          options.y_shift != null &&\n          options.left_shift_px != null &&\n          options.right_shift_px != null){\n        this.render_options = options;\n      }\n      return this;\n    },\n\n    /**\n     * Set the notes to attach this hairpin to.\n     *\n     * @param {!Object} notes The start and end notes.\n     */\n    setNotes: function(notes) {\n      if (!notes.first_note && !notes.last_note)\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Hairpin needs to have either first_note or last_note set.\");\n\n      // Success. Lets grab 'em notes.\n      this.first_note = notes.first_note;\n      this.last_note = notes.last_note;\n      return this;\n    },\n\n    renderHairpin: function(params) {\n      var ctx = this.context;\n      var dis = this.render_options.y_shift + 20;\n      var y_shift = params.first_y;\n\n      if (this.position == Vex.Flow.Modifier.Position.ABOVE) {\n        dis = -dis +30;\n        y_shift = params.first_y - params.staff_height;\n      }\n\n      var l_shift = this.render_options.left_shift_px;\n      var r_shift = this.render_options.right_shift_px;\n\n      switch (this.hairpin) {\n        case StaveHairpin.type.CRESC:\n          ctx.moveTo(params.last_x + r_shift, y_shift + dis);\n          ctx.lineTo(params.first_x + l_shift, y_shift +(this.render_options.height/2) + dis);\n          ctx.lineTo(params.last_x + r_shift, y_shift + this.render_options.height + dis);\n          break;\n        case StaveHairpin.type.DECRESC:\n          ctx.moveTo(params.first_x + l_shift, y_shift + dis);\n          ctx.lineTo(params.last_x + r_shift, y_shift +(this.render_options.height/2) + dis);\n          ctx.lineTo(params.first_x + l_shift, y_shift + this.render_options.height + dis);\n          break;\n        default:\n          // Default is NONE, so nothing to draw\n          break;\n      }\n\n      ctx.stroke();\n    },\n\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw Hairpin without a context.\");\n\n      var first_note = this.first_note;\n      var last_note = this.last_note;\n\n      var start = first_note.getModifierStartXY(this.position, 0);\n      var end = last_note.getModifierStartXY(this.position, 0);\n\n      this.renderHairpin({\n        first_x: start.x,\n        last_x: end.x,\n        first_y: first_note.getStave().y + first_note.getStave().height,\n        last_y: last_note.getStave().y + last_note.getStave().height,\n        staff_height: first_note.getStave().height\n      });\n     return true;\n    }\n  };\n  return StaveHairpin;\n}());\n\n\n// Vex Flow Notation\n// Author Larry Kuhns 2011\n// Implements voltas (repeat brackets)\n//\n// Requires vex.js.\n\nVex.Flow.Volta = (function() {\n  function Volta(type, number, x, y_shift) {\n    if (arguments.length > 0) this.init(type, number, x, y_shift);\n  }\n\n  Volta.type = {\n    NONE: 1,\n    BEGIN: 2,\n    MID: 3,\n    END: 4,\n    BEGIN_END: 5\n  };\n\n  Vex.Inherit(Volta, Vex.Flow.StaveModifier, {\n    init: function(type, number, x, y_shift) {\n      Volta.superclass.init.call(this);\n\n      this.volta = type;\n      this.x = x;\n      this.y_shift = y_shift;\n      this.number = number;\n      this.font = {\n        family: \"sans-serif\",\n        size: 9,\n        weight: \"bold\"\n      };\n    },\n\n    getCategory: function() { return \"voltas\"; },\n    setShiftY: function(y) { this.y_shift = y; return this; },\n\n    draw: function(stave, x) {\n      if (!stave.context) throw new Vex.RERR(\"NoCanvasContext\",\n        \"Can't draw stave without canvas context.\");\n      var ctx = stave.context;\n      var width = stave.width;\n      var top_y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n      var vert_height = 1.5 * stave.options.spacing_between_lines_px;\n      switch(this.volta) {\n        case Vex.Flow.Volta.type.BEGIN:\n          ctx.fillRect(this.x + x, top_y, 1, vert_height);\n          break;\n        case Vex.Flow.Volta.type.END:\n          width -= 5;\n          ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n          break;\n        case Vex.Flow.Volta.type.BEGIN_END:\n          width -= 3;\n          ctx.fillRect(this.x + x, top_y, 1, vert_height);\n          ctx.fillRect(this.x + x + width, top_y, 1, vert_height);\n          break;\n      }\n        // If the beginning of a volta, draw measure number\n      if (this.volta == Volta.type.BEGIN ||\n          this.volta == Volta.type.BEGIN_END) {\n        ctx.save();\n        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        ctx.fillText(this.number, this.x + x + 5, top_y + 15);\n        ctx.restore();\n      }\n      ctx.fillRect(this.x + x, top_y, width, 1);\n      return this;\n    }\n  });\n\n  return Volta;\n}());\n// Vex Flow Notation\n// Author Larry Kuhns 2011\n// Implements Repetitions (Coda, signo, D.C., etc.)\n//\n// Requires vex.js.\n\nVex.Flow.Repetition = (function() {\n  function Repetition(type, x, y_shift) {\n    if (arguments.length > 0) this.init(type, x, y_shift);\n  }\n\n  Repetition.type = {\n    NONE: 1,         // no coda or segno\n    CODA_LEFT: 2,    // coda at beginning of stave\n    CODA_RIGHT: 3,   // coda at end of stave\n    SEGNO_LEFT: 4,   // segno at beginning of stave\n    SEGNO_RIGHT: 5,  // segno at end of stave\n    DC: 6,           // D.C. at end of stave\n    DC_AL_CODA: 7,   // D.C. al coda at end of stave\n    DC_AL_FINE: 8,   // D.C. al Fine end of stave\n    DS: 9,           // D.S. at end of stave\n    DS_AL_CODA: 10,  // D.S. al coda at end of stave\n    DS_AL_FINE: 11,  // D.S. al Fine at end of stave\n    FINE: 12         // Fine at end of stave\n  };\n\n  Vex.Inherit(Repetition, Vex.Flow.StaveModifier, {\n    init: function(type, x, y_shift) {\n      Repetition.superclass.init.call(this);\n\n      this.symbol_type = type;\n      this.x = x;\n      this.x_shift = 0;\n      this.y_shift = y_shift;\n      this.font = {\n        family: \"times\",\n        size: 12,\n        weight: \"bold italic\"\n      };\n    },\n\n    getCategory: function() { return \"repetitions\"; },\n    setShiftX: function(x) { this.x_shift = x; return this; },\n    setShiftY: function(y) { this.y_shift = y; return this; },\n\n    draw: function(stave, x) {\n      switch (this.symbol_type) {\n        case Repetition.type.CODA_RIGHT:\n          this.drawCodaFixed(stave, x + stave.width);\n          break;\n        case Repetition.type.CODA_LEFT:\n          this.drawSymbolText(stave, x, \"Coda\", true);\n          break;\n        case Repetition.type.SEGNO_LEFT:\n          this.drawSignoFixed(stave, x);\n          break;\n        case Repetition.type.SEGNO_RIGHT:\n          this.drawSignoFixed(stave, x + stave.width);\n          break;\n        case Repetition.type.DC:\n          this.drawSymbolText(stave, x, \"D.C.\", false);\n          break;\n        case Repetition.type.DC_AL_CODA:\n          this.drawSymbolText(stave, x, \"D.C. al\", true);\n          break;\n        case Repetition.type.DC_AL_FINE:\n          this.drawSymbolText(stave, x, \"D.C. al Fine\", false);\n          break;\n        case Repetition.type.DS:\n          this.drawSymbolText(stave, x, \"D.S.\", false);\n          break;\n        case Repetition.type.DS_AL_CODA:\n          this.drawSymbolText(stave, x, \"D.S. al\", true);\n          break;\n        case Repetition.type.DS_AL_FINE:\n          this.drawSymbolText(stave, x, \"D.S. al Fine\", false);\n          break;\n        case Repetition.type.FINE:\n          this.drawSymbolText(stave, x, \"Fine\", false);\n          break;\n        default:\n          break;\n      }\n\n      return this;\n    },\n\n    drawCodaFixed: function(stave, x) {\n      if (!stave.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw stave without canvas context.\");\n\n      var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n      Vex.Flow.renderGlyph(stave.context, this.x + x + this.x_shift,\n                           y + 25, 40, \"v4d\", true);\n      return this;\n    },\n\n    drawSignoFixed: function(stave, x) {\n      if (!stave.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw stave without canvas context.\");\n      var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n      Vex.Flow.renderGlyph(stave.context, this.x + x + this.x_shift,\n                           y + 25, 30, \"v8c\", true);\n      return this;\n    },\n\n    drawSymbolText: function(stave, x, text, draw_coda) {\n      if (!stave.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw stave without canvas context.\");\n\n      var ctx = stave.context;\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        // Default to right symbol\n      var text_x = 0 + this.x_shift;\n      var symbol_x = x + this.x_shift;\n      if (this.symbol_type == Vex.Flow.Repetition.type.CODA_LEFT) {\n          // Offset Coda text to right of stave beginning\n        text_x = this.x + stave.options.vertical_bar_width;\n        symbol_x = text_x + ctx.measureText(text).width + 12;\n      } else {\n          // Offset Signo text to left stave end\n        symbol_x = this.x + x + stave.width - 5 + this.x_shift;\n        text_x = symbol_x - + ctx.measureText(text).width - 12;\n      }\n      var y = stave.getYForTopText(stave.options.num_lines) + this.y_shift;\n      if (draw_coda) {\n        Vex.Flow.renderGlyph(ctx, symbol_x, y, 40, \"v4d\", true);\n      }\n\n      ctx.fillText(text, text_x, y + 5);\n      ctx.restore();\n\n      return this;\n    }\n  });\n\n  return Repetition;\n}());\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2011\n// Implements stave section names.\n\n/**\n * @constructor\n */\nVex.Flow.StaveSection = (function() {\n  function StaveSection(section, x, shift_y) {\n    if (arguments.length > 0) this.init(section, x, shift_y);\n  }\n\n  var Modifier = Vex.Flow.Modifier;\n  Vex.Inherit(StaveSection, Modifier, {\n    init: function(section, x, shift_y) {\n      StaveSection.superclass.init.call(this);\n\n      this.setWidth(16);\n      this.section = section;\n      this.position = Modifier.Position.ABOVE;\n      this.x = x;\n      this.shift_x = 0;\n      this.shift_y = shift_y;\n      this.font = {\n        family: \"sans-serif\",\n        size: 12,\n        weight: \"bold\"\n      };\n    },\n\n    getCategory: function() { return \"stavesection\"; },\n    setStaveSection: function(section) { this.section = section; return this; },\n    setShiftX: function(x) { this.shift_x = x; return this; },\n    setShiftY: function(y) { this.shift_y = y; return this; },\n\n    draw: function(stave, shift_x) {\n      if (!stave.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw stave section without a context.\");\n\n      var ctx = stave.context;\n\n      ctx.save();\n      ctx.lineWidth = 2;\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      var text_width = ctx.measureText(\"\" + this.section).width;\n      var width = text_width + 6;  // add left & right padding\n      if (width < 18) width = 18;\n      var height = 20;\n        //  Seems to be a good default y\n      var y = stave.getYForTopText(3) + this.shift_y;\n      var x = this.x + shift_x;\n      ctx.beginPath();\n      ctx.lineWidth = 2;\n      ctx.rect(x, y, width, height);\n      ctx.stroke();\n      x += (width - text_width) / 2;\n      ctx.fillText(\"\" + this.section, x, y + 16);\n      ctx.restore();\n      return this;\n    }\n  });\n\n  return StaveSection;\n}());\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Radosaw Eichler 2012\n// Implements tempo marker.\n\n/**\n * @constructor\n * @param {Object} tempo Tempo parameters: { name, duration, dots, bpm }\n */\nVex.Flow.StaveTempo = (function() {\n  function StaveTempo(tempo, x, shift_y) {\n    if (arguments.length > 0) this.init(tempo, x, shift_y);\n  }\n\n  Vex.Inherit(StaveTempo, Vex.Flow.StaveModifier, {\n    init: function(tempo, x, shift_y) {\n      StaveTempo.superclass.init.call(this);\n\n      this.tempo = tempo;\n      this.position = Vex.Flow.Modifier.Position.ABOVE;\n      this.x = x;\n      this.shift_x = 10;\n      this.shift_y = shift_y;\n      this.font = {\n        family: \"times\",\n        size: 14,\n        weight: \"bold\"\n      };\n      this.render_options = {\n        glyph_font_scale: 30  // font size for note\n      };\n    },\n\n    getCategory: function() { return \"stavetempo\"; },\n    setTempo: function(tempo) { this.tempo = tempo; return this; },\n    setShiftX: function(x) { this.shift_x = x; return this; },\n    setShiftY: function(y) { this.shift_y = y; return this; },\n\n    draw: function(stave, shift_x) {\n      if (!stave.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw stave tempo without a context.\");\n\n      var options = this.render_options;\n      var scale = options.glyph_font_scale / 38;\n      var name = this.tempo.name;\n      var duration = this.tempo.duration;\n      var dots = this.tempo.dots;\n      var bpm = this.tempo.bpm;\n      var font = this.font;\n      var ctx = stave.context;\n      var x = this.x + this.shift_x + shift_x;\n      var y = stave.getYForTopText(1) + this.shift_y;\n\n      ctx.save();\n\n      if (name) {\n        ctx.setFont(font.family, font.size, font.weight);\n        ctx.fillText(name, x, y);\n        x += ctx.measureText(name).width;\n      }\n\n      if (duration && bpm) {\n        ctx.setFont(font.family, font.size, 'normal');\n\n        if (name) {\n          x += ctx.measureText(\" \").width;\n          ctx.fillText(\"(\", x, y);\n          x += ctx.measureText(\"(\").width;\n        }\n\n        var code = Vex.Flow.durationToGlyph(duration);\n\n        x += 3 * scale;\n        Vex.Flow.renderGlyph(ctx, x, y, options.glyph_font_scale, code.code_head);\n        x += code.head_width * scale;\n\n        // Draw stem and flags\n        if (code.stem) {\n          var stem_height = 30;\n\n          if (code.beam_count) stem_height += 3 * (code.beam_count - 1);\n\n          stem_height *= scale;\n\n          var y_top = y - stem_height;\n          ctx.fillRect(x, y_top, scale, stem_height);\n\n          if (code.flag) {\n            Vex.Flow.renderGlyph(ctx, x + scale, y_top, options.glyph_font_scale,\n                                 code.code_flag_upstem);\n\n            if (!dots) x += 6 * scale;\n          }\n        }\n\n        // Draw dot\n        for (var i = 0; i < dots; i++) {\n          x += 6 * scale;\n          ctx.beginPath();\n          ctx.arc(x, y + 2 * scale, 2 * scale, 0, Math.PI * 2, false);\n          ctx.fill();\n        }\n\n        ctx.fillText(\" = \" + bpm + (name ? \")\" : \"\"), x + 3 * scale, y);\n      }\n\n      ctx.restore();\n      return this;\n    }\n  });\n\n  return StaveTempo;\n}());\n\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// Author Taehoon Moon 2014\n\n/**\n * @constructor\n */\nVex.Flow.StaveText = (function() {\n  function StaveText(text, position, options) {\n    if (arguments.length > 0) this.init(text, position, options);\n  }\n\n  var Modifier = Vex.Flow.Modifier;\n  Vex.Inherit(StaveText, Modifier, {\n    init: function(text, position, options) {\n      StaveText.superclass.init.call(this);\n\n      this.setWidth(16);\n      this.text = text;\n      this.position = position;\n      this.options = {\n        shift_x: 0,\n        shift_y: 0,\n        justification: Vex.Flow.TextNote.Justification.CENTER\n      };\n      Vex.Merge(this.options, options);\n\n      this.font = {\n        family: \"times\",\n        size: 16,\n        weight: \"normal\"\n      };\n    },\n\n    getCategory: function() { return \"stavetext\"; },\n    setStaveText: function(text) { this.text = text; return this; },\n    setShiftX: function(x) { this.shift_x = x; return this; },\n    setShiftY: function(y) { this.shift_y = y; return this; },\n\n    setFont: function(font) {\n      Vex.Merge(this.font, font);\n    },\n\n    setText: function(text) {\n      this.text = text;\n    },\n\n    draw: function(stave) {\n      if (!stave.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw stave text without a context.\");\n\n      var ctx = stave.context;\n\n      ctx.save();\n      ctx.lineWidth = 2;\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      var text_width = ctx.measureText(\"\" + this.text).width;\n\n      var x, y;\n      var Modifier = Vex.Flow.Modifier;\n      switch(this.position) {\n        case Modifier.Position.LEFT:\n        case Modifier.Position.RIGHT:\n          y = (stave.getYForLine(0) + stave.getBottomLineY()) / 2 + this.options.shift_y;\n          if(this.position == Modifier.Position.LEFT) {\n            x = stave.getX() - text_width - 24 + this.options.shift_x;\n          }\n          else {\n            x = stave.getX() + stave.getWidth() + 24 + this.options.shift_x;\n          }\n          break;\n        case Modifier.Position.ABOVE:\n        case Modifier.Position.BELOW:\n          var Justification = Vex.Flow.TextNote.Justification;\n          x = stave.getX() + this.options.shift_x;\n          if(this.options.justification == Justification.CENTER) {\n            x += stave.getWidth() / 2 - text_width / 2;\n          }\n          else if(this.options.justification == Justification.RIGHT) {\n            x += stave.getWidth() - text_width;\n          }\n          \n          if(this.position == Modifier.Position.ABOVE) {\n            y = stave.getYForTopText(2) + this.options.shift_y;\n          }\n          else {\n            y = stave.getYForBottomText(2) + this.options.shift_y;\n          }\n          break;\n        default:\n          throw new Vex.RERR(\"InvalidPosition\",\n            \"Value Must be in Modifier.Position.\");\n      }\n\n      ctx.fillText(\"\" + this.text, x, y + 4);\n      ctx.restore();\n      return this;\n    }\n  });\n\n  return StaveText;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// A `BarNote` is used to render bar lines (from `barline.js`). `BarNote`s can\n// be added to a voice and rendered in the middle of a stave. Since it has no\n// duration, it consumes no `tick`s, and is dealt with appropriately by the formatter.\n//\n// See `tests/barnote_tests.js` for usage examples.\n\nVex.Flow.BarNote = (function() {\n  function BarNote() { this.init(); }\n\n  // To enable logging for this class. Set `Vex.Flow.BarNote.DEBUG` to `true`.\n  function L() { if (BarNote.DEBUG) Vex.L(\"Vex.Flow.BarNote\", arguments); }\n\n  // ## Prototype Methods\n  Vex.Inherit(BarNote, Vex.Flow.Note, {\n    init: function() {\n      BarNote.superclass.init.call(this, {duration: \"b\"});\n\n      var TYPE = Vex.Flow.Barline.type;\n      this.metrics = {\n        widths: {}\n      };\n\n      // Defined this way to prevent lint errors.\n      this.metrics.widths[TYPE.SINGLE] = 8;\n      this.metrics.widths[TYPE.DOUBLE] = 12;\n      this.metrics.widths[TYPE.END] = 15;\n      this.metrics.widths[TYPE.REPEAT_BEGIN] = 14;\n      this.metrics.widths[TYPE.REPEAT_END] = 14;\n      this.metrics.widths[TYPE.REPEAT_BOTH] = 18;\n      this.metrics.widths[TYPE.NONE] = 0;\n\n      // Tell the formatter that bar notes have no duration.\n      this.ignore_ticks = true;\n      this.type = TYPE.SINGLE;\n\n      // Set width to width of relevant `Barline`.\n      this.setWidth(this.metrics.widths[this.type]);\n    },\n\n    // Get and set the type of Bar note. `type` must be one of `Vex.Flow.Barline.type`.\n    getType: function() { return this.type; },\n    setType: function(type) {\n      this.type = type;\n      this.setWidth(this.metrics.widths[this.type]);\n      return this;\n    },\n\n    getBoundingBox: function() {\n      return new Vex.Flow.BoundingBox(0, 0, 0, 0);\n    },\n\n    addToModifierContext: function() {\n      /* overridden to ignore */\n      return this;\n    },\n\n    preFormat: function() {\n      /* overridden to ignore */\n      this.setPreFormatted(true);\n      return this;\n    },\n\n    // Render note to stave.\n    draw: function() {\n      if (!this.stave) throw new Vex.RERR(\"NoStave\", \"Can't draw without a stave.\");\n      L(\"Rendering bar line at: \", this.getAbsoluteX());\n      var barline = new Vex.Flow.Barline(this.type, this.getAbsoluteX());\n      barline.draw(this.stave);\n    }\n  });\n\n  return BarNote;\n}());\n\n// VexFlow - Music Engraving for HTML5\n// Author: Mike Corrigan <corrigan@gmail.com>\n//\n// This class implements tremolo notation.\n\n/**\n * @constructor\n */\nVex.Flow.Tremolo = (function() {\n  function Tremolo(num) {\n    if (arguments.length > 0) this.init(num);\n  }\n\n  var Modifier = Vex.Flow.Modifier;\n  Vex.Inherit(Tremolo, Modifier, {\n    init: function(num) {\n      Tremolo.superclass.init.call(this);\n\n      this.num = num;\n      this.note = null;\n      this.index = null;\n      this.position = Modifier.Position.CENTER;\n      this.code = \"v74\";\n      this.shift_right = -2;\n      this.y_spacing = 4;\n\n      this.render_options = {\n        font_scale: 35,\n        stroke_px: 3,\n        stroke_spacing: 10\n      };\n\n      this.font = {\n        family: \"Arial\",\n        size: 16,\n        weight: \"\"\n      };\n    },\n\n    getCategory: function() { return \"tremolo\"; },\n\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw Tremolo without a context.\");\n      if (!(this.note && (this.index != null))) throw new Vex.RERR(\"NoAttachedNote\",\n        \"Can't draw Tremolo without a note and index.\");\n\n      var start = this.note.getModifierStartXY(this.position, this.index);\n      var x = start.x;\n      var y = start.y;\n\n      x += this.shift_right;\n      for (var i = 0; i < this.num; ++i) {\n        Vex.Flow.renderGlyph(this.context, x, y,\n                             this.render_options.font_scale, this.code);\n        y += this.y_spacing;\n      }\n    }\n  });\n\n  return Tremolo;\n}());\n\n/**\n * Create a new tuplet from the specified notes. The notes must\n * be part of the same line, and have the same duration (in ticks).\n *\n * @constructor\n * @param {Array.<Vex.Flow.StaveNote>} A set of notes.\n */\nVex.Flow.Tuplet = (function() {\n  function Tuplet(notes, options) {\n    if (arguments.length > 0) this.init(notes, options);\n  }\n\n  Tuplet.LOCATION_TOP = 1;\n  Tuplet.LOCATION_BOTTOM = -1;\n\n  Tuplet.prototype = {\n    init: function(notes, options) {\n      if (!notes || notes == []) {\n        throw new Vex.RuntimeError(\"BadArguments\", \"No notes provided for tuplet.\");\n      }\n\n      if (notes.length == 1) {\n        throw new Vex.RuntimeError(\"BadArguments\", \"Too few notes for tuplet.\");\n      }\n\n      this.options = Vex.Merge({}, options);\n      this.notes = notes;\n      this.num_notes = 'num_notes' in this.options ?\n        this.options.num_notes : notes.length;\n      this.beats_occupied = 'beats_occupied' in this.options ?\n        this.options.beats_occupied : 2;\n      this.bracketed = (notes[0].beam == null);\n      this.ratioed = false;\n      this.point = 28;\n      this.y_pos = 16;\n      this.x_pos = 100;\n      this.width = 200;\n      this.location = Tuplet.LOCATION_TOP;\n\n      Vex.Flow.Formatter.AlignRestsToNotes(notes, true, true);\n      this.resolveGlyphs();\n      this.attach();\n    },\n\n    attach: function () {\n      for (var i = 0; i < this.notes.length; i++) {\n        var note = this.notes[i];\n        note.setTuplet(this);\n      }\n    },\n\n    detach: function () {\n      for (var i = 0; i < this.notes.length; i++) {\n        var note = this.notes[i];\n        note.setTuplet(null);\n      }\n    },\n\n    setContext: function(context) {\n      this.context = context;\n      return this;\n    },\n\n    /**\n     * Set whether or not the bracket is drawn.\n     */\n    setBracketed: function(bracketed) {\n      this.bracketed = bracketed ? true : false;\n      return this;\n    },\n\n    /**\n     * Set whether or not the ratio is shown.\n     */\n    setRatioed: function(ratioed) {\n      this.ratioed = ratioed ? true : false;\n      return this;\n    },\n\n    /**\n     * Set the tuplet to be displayed either on the top or bottom of the stave\n     */\n    setTupletLocation: function(location) {\n      if (!location) location = Tuplet.LOCATION_TOP;\n      else if (location != Tuplet.LOCATION_TOP &&\n          location != Tuplet.LOCATION_BOTTOM) {\n        throw new Vex.RERR(\"BadArgument\", \"Invalid tuplet location: \" + location);\n      }\n\n      this.location = location;\n      return this;\n    },\n\n    getNotes: function() {\n      return this.notes;\n    },\n\n    getNoteCount: function() {\n      return this.num_notes;\n    },\n\n    getBeatsOccupied: function() {\n      return this.beats_occupied;\n    },\n\n    setBeatsOccupied: function(beats) {\n      this.detach();\n      this.beats_occupied = beats;\n      this.resolveGlyphs();\n      this.attach();\n    },\n\n    resolveGlyphs: function() {\n      this.num_glyphs = [];\n      var n = this.num_notes;\n      while (n >= 1) {\n        this.num_glyphs.push(new Vex.Flow.Glyph(\"v\" + (n % 10), this.point));\n        n = parseInt(n / 10, 10);\n      }\n\n      this.denom_glyphs = [];\n      n = this.beats_occupied;\n      while (n >= 1) {\n        this.denom_glyphs.push(new Vex.Flow.Glyph(\"v\" + (n % 10), this.point));\n        n = parseInt(n / 10, 10);\n      }\n    },\n\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n\n      // determine x value of left bound of tuplet\n      var first_note = this.notes[0];\n      var last_note = this.notes[this.notes.length - 1];\n\n      if (!this.bracketed) {\n        this.x_pos = first_note.getStemX();\n        this.width = last_note.getStemX() - this.x_pos;\n      }\n      else {\n        this.x_pos = first_note.getTieLeftX() - 5;\n        this.width = last_note.getTieRightX() - this.x_pos + 5;\n      }\n\n      // determine y value for tuplet\n      var i;\n      if (this.location == Tuplet.LOCATION_TOP) {\n        this.y_pos = first_note.getStave().getYForLine(0) - 15;\n        //this.y_pos = first_note.getStemExtents().topY - 10;\n\n        for (i=0; i<this.notes.length; ++i) {\n          var top_y = this.notes[i].getStemDirection() === Vex.Flow.Stem.UP ?\n              this.notes[i].getStemExtents().topY - 10\n            : this.notes[i].getStemExtents().baseY - 20;\n          if (top_y < this.y_pos)\n            this.y_pos = top_y;\n        }\n      }\n      else {\n        this.y_pos = first_note.getStave().getYForLine(4) + 20;\n\n        for (i=0; i<this.notes.length; ++i) {\n          var bottom_y = this.notes[i].getStemDirection() === Vex.Flow.Stem.UP ?\n              this.notes[i].getStemExtents().baseY + 20\n            : this.notes[i].getStemExtents().topY + 10;\n          if (bottom_y > this.y_pos)\n            this.y_pos = bottom_y;\n        }\n      }\n\n      // calculate total width of tuplet notation\n      var width = 0;\n      var glyph;\n      for (glyph in this.num_glyphs) {\n        width += this.num_glyphs[glyph].getMetrics().width;\n      }\n      if (this.ratioed) {\n        for (glyph in this.denom_glyphs) {\n          width += this.denom_glyphs[glyph].getMetrics().width;\n        }\n        width += this.point * 0.32;\n      }\n\n      var notation_center_x = this.x_pos + (this.width/2);\n      var notation_start_x = notation_center_x - (width/2);\n\n      // draw bracket if the tuplet is not beamed\n      if (this.bracketed) {\n        var line_width = this.width/2 - width/2 - 5;\n\n        // only draw the bracket if it has positive length\n        if (line_width > 0) {\n          this.context.fillRect(this.x_pos, this.y_pos,line_width, 1);\n          this.context.fillRect(this.x_pos + this.width / 2 + width / 2 + 5,\n                                this.y_pos,line_width, 1);\n          this.context.fillRect(this.x_pos,\n              this.y_pos + (this.location == Tuplet.LOCATION_BOTTOM),\n              1, this.location * 10);\n          this.context.fillRect(this.x_pos + this.width,\n              this.y_pos + (this.location == Tuplet.LOCATION_BOTTOM),\n              1, this.location * 10);\n        }\n      }\n\n      // draw numerator glyphs\n      var x_offset = 0;\n      var size = this.num_glyphs.length;\n      for (glyph in this.num_glyphs) {\n        this.num_glyphs[size-glyph-1].render(\n            this.context, notation_start_x + x_offset,\n            this.y_pos + (this.point/3) - 2);\n        x_offset += this.num_glyphs[size-glyph-1].getMetrics().width;\n      }\n\n      // display colon and denominator if the ratio is to be shown\n      if (this.ratioed) {\n        var colon_x = notation_start_x + x_offset + this.point*0.16;\n        var colon_radius = this.point * 0.06;\n        this.context.beginPath();\n        this.context.arc(colon_x, this.y_pos - this.point*0.08,\n                         colon_radius, 0, Math.PI*2, true);\n        this.context.closePath();\n        this.context.fill();\n        this.context.beginPath();\n        this.context.arc(colon_x, this.y_pos + this.point*0.12,\n                         colon_radius, 0, Math.PI*2, true);\n        this.context.closePath();\n        this.context.fill();\n        x_offset += this.point*0.32;\n        size = this.denom_glyphs.length;\n        for (glyph in this.denom_glyphs) {\n          this.denom_glyphs[size-glyph-1].render(\n              this.context, notation_start_x + x_offset,\n              this.y_pos + (this.point/3) - 2);\n          x_offset += this.denom_glyphs[size-glyph-1].getMetrics().width;\n        }\n      }\n    }\n  };\n\n  return Tuplet;\n}());\n\n// Vex Music Notation\n// Mohit Muthanna <mohit@muthanna.com>\n//\n// Copyright Mohit Muthanna 2010\n\n// Bounding boxes for interactive notation\n\n/** @constructor */\nVex.Flow.BoundingBox = (function() {\n  function BoundingBox(x, y, w, h) { this.init(x, y, w, h); }\n  BoundingBox.copy = function(that) {\n    return new BoundingBox(that.x, that.y, that.w, that.h); };\n\n  BoundingBox.prototype = {\n    init: function(x, y, w, h) {\n      this.x = x;\n      this.y = y;\n      this.w = w;\n      this.h = h;\n    },\n\n    getX: function() { return this.x; },\n    getY: function() { return this.y; },\n    getW: function() { return this.w; },\n    getH: function() { return this.h; },\n\n    setX: function(x) { this.x = x; return this; },\n    setY: function(y) { this.y = y; return this; },\n    setW: function(w) { this.w = w; return this; },\n    setH: function(h) { this.h = h; return this; },\n\n    move: function(x, y) { this.x += x; this.y += y; },\n    clone: function() { return BoundingBox.copy(this); },\n\n    // Merge my box with given box. Creates a bigger bounding box unless\n    // the given box is contained in this one.\n    mergeWith: function(boundingBox, ctx) {\n      var that = boundingBox;\n\n      var new_x = this.x < that.x ? this.x : that.x;\n      var new_y = this.y < that.y ? this.y : that.y;\n      var new_w = (this.x + this.w) < (that.x + that.w) ? (that.x + that.w) - this.x : (this.x + this.w) - Vex.Min(this.x, that.x);\n      var new_h = (this.y + this.h) < (that.y + that.h) ? (that.y + that.h) - this.y : (this.y + this.h) - Vex.Min(this.y, that.y);\n\n      this.x = new_x;\n      this.y = new_y;\n      this.w = new_w;\n      this.h = new_h;\n\n      if (ctx) this.draw(ctx);\n      return this;\n    },\n\n    draw: function(ctx, x, y) {\n      if (!x) x = 0;\n      if (!y) y = 0;\n      ctx.rect(this.x + x, this.y + y, this.w, this.h);\n      ctx.stroke();\n    }\n  };\n\n  return BoundingBox;\n}());\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// `TextNote` is a notation element that is positioned in time. Generally \n// meant for objects that sit above/below the staff and inline with each other.\n// Examples of this would be such as dynamics, lyrics, chord changes, etc.\nVex.Flow.TextNote = (function() {\n  function TextNote(text_struct) {\n    if (arguments.length > 0) this.init(text_struct);\n  }\n\n  TextNote.Justification = {\n    LEFT: 1,\n    CENTER: 2,\n    RIGHT: 3\n  };\n\n  // Glyph data\n  TextNote.GLYPHS = {\n    \"segno\": {\n      code: \"v8c\",\n      point: 40,\n      x_shift: 0,\n      y_shift: -10\n      // width: 10 // optional\n    },\n    \"tr\": {\n      code: \"v1f\",\n      point: 40,\n      x_shift: 0,\n      y_shift: 0\n      // width: 10 // optional\n    },\n    \"mordent_upper\": {\n      code: \"v1e\",\n      point: 40,\n      x_shift: 0,\n      y_shift: 0\n      // width: 10 // optional\n    },\n    \"mordent_lower\": {\n      code: \"v45\",\n      point: 40,\n      x_shift: 0,\n      y_shift: 0\n      // width: 10 // optional\n    },\n    \"f\": {\n      code: \"vba\",\n      point: 40,\n      x_shift: 0,\n      y_shift: 0\n      // width: 10 // optional\n    },\n    \"p\": {\n      code: \"vbf\",\n      point: 40,\n      x_shift: 0,\n      y_shift: 0\n      // width: 10 // optional\n    },\n    \"m\": {\n      code: \"v62\",\n      point: 40,\n      x_shift: 0,\n      y_shift: 0\n      // width: 10 // optional\n    },\n    \"s\": {\n      code: \"v4a\",\n      point: 40,\n      x_shift: 0,\n      y_shift: 0\n      // width: 10 // optional\n    },\n    \"z\": {\n      code: \"v80\",\n      point: 40,\n      x_shift: 0,\n      y_shift: 0\n      // width: 10 // optional\n    },\n    \"coda\": {\n      code: \"v4d\",\n      point: 40,\n      x_shift: 0,\n      y_shift: -8\n      // width: 10 // optional\n    },\n    \"pedal_open\": {\n      code: \"v36\",\n      point:40,\n      x_shift:0,\n      y_shift:0\n    },\n    \"pedal_close\": {\n      code: \"v5d\",\n      point:40,\n      x_shift:0,\n      y_shift:3\n    },\n    \"caesura_straight\": {\n      code: \"v34\",\n      point:40,\n      x_shift:0,\n      y_shift:2\n    },\n    \"caesura_curved\": {\n      code: \"v4b\",\n      point:40,\n      x_shift:0,\n      y_shift:2\n    },\n    \"breath\": {\n      code: \"v6c\",\n      point:40,\n      x_shift:0,\n      y_shift:0\n    },\n    \"tick\": {\n      code: \"v6f\",\n      point:50,\n      x_shift:0,\n      y_shift:0\n    },\n    \"turn\": {\n      code: \"v72\",\n      point:40,\n      x_shift:0,\n      y_shift:0\n    },\n    \"turn_inverted\": {\n      code: \"v33\",\n      point:40,\n      x_shift:0,\n      y_shift:0\n    },\n\n    // DEPRECATED - please use \"mordent_upper\" or \"mordent_lower\"\n    \"mordent\": {\n      code: \"v1e\",\n      point: 40,\n      x_shift: 0,\n      y_shift: 0\n      // width: 10 // optional\n    },\n  };\n\n  // ## Prototype Methods\n  Vex.Inherit(TextNote, Vex.Flow.Note, {\n    init: function(text_struct) {\n      TextNote.superclass.init.call(this, text_struct);\n\n      // Note properties\n      this.text = text_struct.text;\n      this.superscript = text_struct.superscript;\n      this.subscript = text_struct.subscript;\n      this.glyph_type = text_struct.glyph;\n      this.glyph = null;\n      this.font = {\n        family: \"Arial\",\n        size: 12,\n        weight: \"\"\n      };\n\n      // Set font\n      if (text_struct.font) this.font = text_struct.font;\n\n      // Determine and set initial note width. Note that the text width is \n      // an approximation and isn't very accurate. The only way to accurately\n      // measure the length of text is with `canvasContext.measureText()`\n      if (this.glyph_type) {\n        var struct = TextNote.GLYPHS[this.glyph_type];\n        if (!struct) throw new Vex.RERR(\"Invalid glyph type: \" + this.glyph_type);\n\n        this.glyph = new Vex.Flow.Glyph(struct.code, struct.point, {cache: false});\n\n        if (struct.width)\n          this.setWidth(struct.width);\n        else\n          this.setWidth(this.glyph.getMetrics().width);\n\n        this.glyph_struct = struct;\n      } else {\n        this.setWidth(Vex.Flow.textWidth(this.text));\n      }\n      this.line = text_struct.line || 0;\n      this.smooth = text_struct.smooth || false;\n      this.ignore_ticks = text_struct.ignore_ticks || false;\n      this.justification = TextNote.Justification.LEFT;\n    },\n\n    // Set the horizontal justification of the TextNote\n    setJustification: function(just) {\n      this.justification = just;\n      return this;\n    },\n\n    // Set the Stave line on which the note should be placed\n    setLine: function(line) {\n      this.line = line;\n      return this;\n    },\n\n    // Pre-render formatting\n    preFormat: function() {\n      if (!this.context) throw new Vex.RERR(\"NoRenderContext\",\n          \"Can't measure text without rendering context.\");\n      if (this.preFormatted) return;\n\n      if (this.smooth) {\n        this.setWidth(0);\n      } else {\n        if (this.glyph) {\n          // Width already set.\n        } else {\n          this.setWidth(this.context.measureText(this.text).width);\n        }\n      }\n\n      if (this.justification == TextNote.Justification.CENTER) {\n        this.extraLeftPx = this.width / 2;\n      } else if (this.justification == TextNote.Justification.RIGHT) {\n        this.extraLeftPx = this.width;\n      }\n\n      this.setPreFormatted(true);\n    },\n\n    // Renders the TextNote\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoCanvasContext\",\n          \"Can't draw without a canvas context.\");\n      if (!this.stave) throw new Vex.RERR(\"NoStave\", \"Can't draw without a stave.\");\n\n      var ctx = this.context;\n      var x = this.getAbsoluteX();\n      if (this.justification == TextNote.Justification.CENTER) {\n        x -= this.getWidth() / 2;\n      } else if (this.justification == TextNote.Justification.RIGHT) {\n        x -= this.getWidth();\n      }\n\n      var y;\n      if (this.glyph) {\n        y = this.stave.getYForLine(this.line + (-3));\n        this.glyph.render(this.context,\n                          x + this.glyph_struct.x_shift,\n                          y + this.glyph_struct.y_shift);\n      } else {\n        y = this.stave.getYForLine(this.line + (-3));\n        ctx.save();\n        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n        ctx.fillText(this.text, x, y);\n\n        // Width of the letter M gives us the approximate height of the text\n        var height = ctx.measureText(\"M\").width;\n        // Get accurate width of text\n        var width = ctx.measureText(this.text).width;\n\n        // Write superscript\n        if (this.superscript) {\n          ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n          ctx.fillText(this.superscript, x + width + 2, y - (height/2.2));\n        }\n\n        // Write subscript\n        if (this.subscript) {\n          ctx.setFont(this.font.family, this.font.size / 1.3, this.font.weight);\n          ctx.fillText(this.subscript, x + width + 2, y + (height/2.2) - 1);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  return TextNote;\n}());\n\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n// Author Larry Kuhns 2013\n// Class to draws string numbers into the notation.\n\n/**\n * @constructor\n */\nVex.Flow.FretHandFinger = (function() {\n  function FretHandFinger(number) {\n    if (arguments.length > 0) this.init(number);\n  }\n  FretHandFinger.CATEGORY = \"frethandfinger\";\n\n  var Modifier = Vex.Flow.Modifier;\n\n  // Arrange fingerings inside a ModifierContext.\n  FretHandFinger.format = function(nums, state) {\n    var left_shift = state.left_shift;\n    var right_shift = state.right_shift;\n    var num_spacing = 1;\n\n    if (!nums || nums.length === 0) return false;\n\n    var nums_list = [];\n    var prev_note = null;\n    var shift_left = 0;\n    var shift_right = 0;\n\n    var i, num, note, pos, props_tmp;\n    for (i = 0; i < nums.length; ++i) {\n      num = nums[i];\n      note = num.getNote();\n      pos = num.getPosition();\n      var props = note.getKeyProps()[num.getIndex()];\n      if (note != prev_note) {\n        for (var n = 0; n < note.keys.length; ++n) {\n          props_tmp = note.getKeyProps()[n];\n          if (left_shift === 0)\n            shift_left = (props_tmp.displaced ? note.getExtraLeftPx() : shift_left);\n          if (right_shift === 0)\n            shift_right = (props_tmp.displaced ? note.getExtraRightPx() : shift_right);\n        }\n        prev_note = note;\n      }\n\n      nums_list.push({ line: props.line, pos: pos, shiftL: shift_left, shiftR: shift_right, note: note, num: num });\n    }\n\n    // Sort fingernumbers by line number.\n    nums_list.sort(function(a, b) { return (b.line - a.line); });\n\n    var num_shiftL = 0;\n    var num_shiftR = 0;\n    var x_widthL = 0;\n    var x_widthR = 0;\n    var last_line = null;\n    var last_note = null;\n\n    for (i = 0; i < nums_list.length; ++i) {\n      var num_shift = 0;\n      note = nums_list[i].note;\n      pos = nums_list[i].pos;\n      num = nums_list[i].num;\n      var line = nums_list[i].line;\n      var shiftL = nums_list[i].shiftL;\n      var shiftR = nums_list[i].shiftR;\n\n      // Reset the position of the string number every line.\n      if (line != last_line || note != last_note) {\n        num_shiftL = left_shift + shiftL;\n        num_shiftR = right_shift + shiftR;\n      }\n\n      var num_width = num.getWidth() + num_spacing;\n      if (pos == Vex.Flow.Modifier.Position.LEFT) {\n        num.setXShift(left_shift + num_shiftL);\n        num_shift = left_shift + num_width; // spacing\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\n      } else if (pos == Vex.Flow.Modifier.Position.RIGHT) {\n        num.setXShift(num_shiftR);\n        num_shift = shift_right + num_width; // spacing\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\n      }\n      last_line = line;\n      last_note = note;\n    }\n\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n  };\n\n  Vex.Inherit(FretHandFinger, Modifier, {\n    init: function(number) {\n      var superclass = Vex.Flow.FretHandFinger.superclass;\n      superclass.init.call(this);\n\n      this.note = null;\n      this.index = null;\n      this.finger = number;\n      this.width = 7;\n      this.position = Modifier.Position.LEFT;  // Default position above stem or note head\n      this.x_shift = 0;\n      this.y_shift = 0;\n      this.x_offset = 0;       // Horizontal offset from default\n      this.y_offset = 0;       // Vertical offset from default\n      this.font = {\n        family: \"sans-serif\",\n        size: 9,\n        weight: \"bold\"\n      };\n    },\n\n    getNote: function() { return this.note; },\n    setNote: function(note) { this.note = note; return this; },\n    getIndex: function() { return this.index; },\n    setIndex: function(index) { this.index = index; return this; },\n    getPosition: function() { return this.position; },\n    setPosition: function(position) {\n      if (position >= Modifier.Position.LEFT &&\n          position <= Modifier.Position.BELOW)\n        this.position = position;\n      return this;\n    },\n    setFretHandFinger: function(number) { this.finger = number; return this; },\n    setOffsetX: function(x) { this.x_offset = x; return this; },\n    setOffsetY: function(y) { this.y_offset = y; return this; },\n\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw string number without a context.\");\n      if (!(this.note && (this.index != null))) throw new Vex.RERR(\"NoAttachedNote\",\n        \"Can't draw string number without a note and index.\");\n\n      var ctx = this.context;\n      var start = this.note.getModifierStartXY(this.position, this.index);\n      var dot_x = (start.x + this.x_shift + this.x_offset);\n      var dot_y = start.y + this.y_shift + this.y_offset + 5;\n\n      switch (this.position) {\n        case Modifier.Position.ABOVE:\n          dot_x -= 4;\n          dot_y -= 12;\n          break;\n        case Modifier.Position.BELOW:\n          dot_x -= 2;\n          dot_y += 10;\n          break;\n        case Modifier.Position.LEFT:\n          dot_x -= this.width;\n          break;\n        case Modifier.Position.RIGHT:\n          dot_x += 1;\n          break;\n      }\n\n      ctx.save();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      ctx.fillText(\"\" + this.finger, dot_x, dot_y);\n\n      ctx.restore();\n    }\n  });\n\n  return FretHandFinger;\n}());\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n//\n// This file implements the `StringNumber` class which renders string\n// number annotations beside notes.\n\nVex.Flow.StringNumber = (function() {\n  function StringNumber(number) {\n    if (arguments.length > 0) this.init(number);\n  }\n  StringNumber.CATEGORY = \"stringnumber\";\n\n  var Modifier = Vex.Flow.Modifier;\n\n  // ## Static Methods\n  // Arrange string numbers inside a `ModifierContext`\n  StringNumber.format = function(nums, state) {\n    var left_shift = state.left_shift;\n    var right_shift = state.right_shift;\n    var num_spacing = 1;\n\n    if (!nums || nums.length === 0) return this;\n\n    var nums_list = [];\n    var prev_note = null;\n    var shift_left = 0;\n    var shift_right = 0;\n\n    var i, num, note, pos, props_tmp;\n    for (i = 0; i < nums.length; ++i) {\n      num = nums[i];\n      note = num.getNote();\n\n      for (i = 0; i < nums.length; ++i) {\n        num = nums[i];\n        note = num.getNote();\n        pos = num.getPosition();\n        var props = note.getKeyProps()[num.getIndex()];\n\n        if (note != prev_note) {\n          for (var n = 0; n < note.keys.length; ++n) {\n            props_tmp = note.getKeyProps()[n];\n            if (left_shift === 0)\n              shift_left = (props_tmp.displaced ? note.getExtraLeftPx() : shift_left);\n            if (right_shift === 0)\n              shift_right = (props_tmp.displaced ? note.getExtraRightPx() : shift_right);\n          }\n          prev_note = note;\n        }\n\n        nums_list.push({ line: props.line, pos: pos, shiftL: shift_left, shiftR: shift_right, note: note, num: num });\n      }\n    }\n\n    // Sort string numbers by line number.\n    nums_list.sort(function(a, b) { return (b.line - a.line); });\n\n    var num_shiftL = 0;\n    var num_shiftR = 0;\n    var x_widthL = 0;\n    var x_widthR = 0;\n    var last_line = null;\n    var last_note = null;\n    for (i = 0; i < nums_list.length; ++i) {\n      var num_shift = 0;\n      note = nums_list[i].note;\n      pos = nums_list[i].pos;\n      num = nums_list[i].num;\n      var line = nums_list[i].line;\n      var shiftL = nums_list[i].shiftL;\n      var shiftR = nums_list[i].shiftR;\n\n      // Reset the position of the string number every line.\n      if (line != last_line || note != last_note) {\n        num_shiftL = left_shift + shiftL;\n        num_shiftR = right_shift + shiftR;\n      }\n\n      var num_width = num.getWidth() + num_spacing;\n      if (pos == Vex.Flow.Modifier.Position.LEFT) {\n        num.setXShift(left_shift);\n        num_shift = shift_left + num_width; // spacing\n        x_widthL = (num_shift > x_widthL) ? num_shift : x_widthL;\n      } else if (pos == Vex.Flow.Modifier.Position.RIGHT) {\n        num.setXShift(num_shiftR);\n        num_shift += num_width; // spacing\n        x_widthR = (num_shift > x_widthR) ? num_shift : x_widthR;\n      }\n      last_line = line;\n      last_note = note;\n    }\n\n    state.left_shift += x_widthL;\n    state.right_shift += x_widthR;\n    return true;\n  };\n\n  // ## Prototype Methods\n  Vex.Inherit(StringNumber, Modifier, {\n    init: function(number) {\n      StringNumber.superclass.init.call(this);\n\n      this.note = null;\n      this.last_note = null;\n      this.index = null;\n      this.string_number = number;\n      this.setWidth(20);                                 // ???\n      this.position = Modifier.Position.ABOVE;  // Default position above stem or note head\n      this.x_shift = 0;\n      this.y_shift = 0;\n      this.x_offset = 0;                               // Horizontal offset from default\n      this.y_offset = 0;                               // Vertical offset from default\n      this.dashed = true;                              // true - draw dashed extension  false - no extension\n      this.leg = Vex.Flow.Renderer.LineEndType.NONE;   // draw upward/downward leg at the of extension line\n      this.radius = 8;\n      this.font = {\n        family: \"sans-serif\",\n        size: 10,\n        weight: \"bold\"\n      };\n    },\n\n    getNote: function() { return this.note; },\n    setNote: function(note) { this.note = note; return this; },\n    getIndex: function() { return this.index; },\n    setIndex: function(index) { this.index = index; return this; },\n\n    setLineEndType: function(leg) {\n      if (leg >= Vex.Flow.Renderer.LineEndType.NONE &&\n          leg <= Vex.Flow.Renderer.LineEndType.DOWN)\n        this.leg = leg;\n      return this;\n    },\n\n    getPosition: function() { return this.position; },\n    setPosition: function(position) {\n      if (position >= Modifier.Position.LEFT &&\n          position <= Modifier.Position.BELOW)\n        this.position = position;\n      return this;\n    },\n\n    setStringNumber: function(number) { this.string_number = number; return this; },\n    setOffsetX: function(x) { this.x_offset = x; return this; },\n    setOffsetY: function(y) { this.y_offset = y; return this; },\n    setLastNote: function(note) { this.last_note = note; return this; },\n    setDashed: function(dashed) { this.dashed = dashed; return this; },\n\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw string number without a context.\");\n      if (!(this.note && (this.index != null))) throw new Vex.RERR(\"NoAttachedNote\",\n        \"Can't draw string number without a note and index.\");\n\n      var ctx = this.context;\n      var line_space = this.note.stave.options.spacing_between_lines_px;\n\n      var start = this.note.getModifierStartXY(this.position, this.index);\n      var dot_x = (start.x + this.x_shift + this.x_offset);\n      var dot_y = start.y + this.y_shift + this.y_offset;\n\n      switch (this.position) {\n        case Modifier.Position.ABOVE:\n        case Modifier.Position.BELOW:\n          var stem_ext = this.note.getStemExtents();\n          var top = stem_ext.topY;\n          var bottom = stem_ext.baseY + 2;\n\n          if (this.note.stem_direction == Vex.Flow.StaveNote.STEM_DOWN) {\n            top = stem_ext.baseY;\n            bottom = stem_ext.topY - 2;\n          }\n\n          if (this.position == Modifier.Position.ABOVE) {\n            dot_y = this.note.hasStem() ? top - (line_space * 1.75)\n                                        : start.y - (line_space * 1.75);\n        } else {\n            dot_y = this.note.hasStem() ? bottom + (line_space * 1.5)\n                                        : start.y + (line_space * 1.75);\n          }\n\n          dot_y += this.y_shift + this.y_offset;\n\n          break;\n        case Modifier.Position.LEFT:\n          dot_x -= (this.radius / 2) + 5;\n          break;\n        case Modifier.Position.RIGHT:\n          dot_x += (this.radius / 2) + 6;\n          break;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(dot_x, dot_y, this.radius, 0, Math.PI * 2, false);\n      ctx.lineWidth = 1.5;\n      ctx.stroke();\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      var x = dot_x - ctx.measureText(this.string_number).width / 2;\n      ctx.fillText(\"\" + this.string_number, x, dot_y + 4.5);\n\n      if (this.last_note != null) {\n        var end = this.last_note.getStemX() - this.note.getX() + 5;\n        ctx.strokeStyle=\"#000000\";\n        ctx.lineCap = \"round\";\n        ctx.lineWidth = 0.6;\n        if (this.dashed)\n          Vex.Flow.Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3,3]);\n        else\n          Vex.Flow.Renderer.drawDashedLine(ctx, dot_x + 10, dot_y, dot_x + end, dot_y, [3,0]);\n\n        var len, pattern;\n        switch (this.leg) {\n          case Vex.Flow.Renderer.LineEndType.UP:\n            len = -10;\n            pattern = this.dashed ? [3,3] : [3,0];\n            Vex.Flow.Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n            break;\n          case Vex.Flow.Renderer.LineEndType.DOWN:\n            len = 10;\n            pattern = this.dashed ? [3,3] : [3,0];\n            Vex.Flow.Renderer.drawDashedLine(ctx, dot_x + end, dot_y, dot_x + end, dot_y + len, pattern);\n            break;\n        }\n      }\n\n      ctx.restore();\n    }\n  });\n\n  return StringNumber;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Larry Kuhns\n//\n// ## Description\n//\n// This file implements the `Stroke` class which renders chord strokes\n// that can be arpeggiated, brushed, rasquedo, etc.\n\nVex.Flow.Stroke = (function() {\n  function Stroke(type, options) {\n    if (arguments.length > 0) this.init(type, options);\n  }\n  Stroke.CATEGORY = \"strokes\";\n\n  Stroke.Type = {\n    BRUSH_DOWN: 1,\n    BRUSH_UP: 2,\n    ROLL_DOWN: 3,        // Arpegiated chord\n    ROLL_UP: 4,          // Arpegiated chord\n    RASQUEDO_DOWN: 5,\n    RASQUEDO_UP: 6\n  };\n\n  var Modifier = Vex.Flow.Modifier;\n\n  // ## Static Methods\n\n  // Arrange strokes inside `ModifierContext`\n  Stroke.format = function(strokes, state) {\n    var left_shift = state.left_shift;\n    var stroke_spacing = 0;\n\n    if (!strokes || strokes.length === 0) return this;\n\n    var str_list = [];\n    var i, str, shift;\n    for (i = 0; i < strokes.length; ++i) {\n      str = strokes[i];\n      var note = str.getNote();\n      var props;\n      if (note instanceof Vex.Flow.StaveNote) {\n        props = note.getKeyProps()[str.getIndex()];\n        shift = (props.displaced ? note.getExtraLeftPx() : 0);\n        str_list.push({ line: props.line, shift: shift, str: str });\n      } else {\n        props = note.getPositions()[str.getIndex()];\n        str_list.push({ line: props.str, shift: 0, str: str });\n      }\n    }\n\n    var str_shift = left_shift;\n    var x_shift = 0;\n\n    // There can only be one stroke .. if more than one, they overlay each other\n    for (i = 0; i < str_list.length; ++i) {\n      str = str_list[i].str;\n      shift = str_list[i].shift;\n\n      str.setXShift(str_shift + shift);\n      x_shift = Math.max(str.getWidth() + stroke_spacing, x_shift);\n    }\n\n    state.left_shift += x_shift;\n    return true;\n  };\n\n  // ## Prototype Methods\n  Vex.Inherit(Stroke, Modifier, {\n    init: function(type, options) {\n      Stroke.superclass.init.call(this);\n\n      this.note = null;\n      this.options = Vex.Merge({}, options);\n\n      // multi voice - span stroke across all voices if true\n      this.all_voices = 'all_voices' in this.options ?\n        this.options.all_voices : true;\n\n      // multi voice - end note of stroke, set in draw()\n      this.note_end = null;\n      this.index = null;\n      this.type = type;\n      this.position = Modifier.Position.LEFT;\n\n      this.render_options = {\n        font_scale: 38,\n        stroke_px: 3,\n        stroke_spacing: 10\n      };\n\n      this.font = {\n       family: \"serif\",\n       size: 10,\n       weight: \"bold italic\"\n     };\n\n      this.setXShift(0);\n      this.setWidth(10);\n    },\n\n    getPosition: function() { return this.position; },\n    addEndNote: function(note) { this.note_end = note; return this; },\n\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw stroke without a context.\");\n      if (!(this.note && (this.index != null))) throw new Vex.RERR(\"NoAttachedNote\",\n        \"Can't draw stroke without a note and index.\");\n      var start = this.note.getModifierStartXY(this.position, this.index);\n      var ys = this.note.getYs();\n      var topY = start.y;\n      var botY = start.y;\n      var x = start.x - 5;\n      var line_space = this.note.stave.options.spacing_between_lines_px;\n\n      var notes = this.getModifierContext().getModifiers(this.note.getCategory());\n      var i;\n      for (i = 0; i < notes.length; i++) {\n        ys = notes[i].getYs();\n        for (var n = 0; n < ys.length; n++) {\n          if (this.note == notes[i] || this.all_voices) {\n            topY = Vex.Min(topY, ys[n]);\n            botY = Vex.Max(botY, ys[n]);\n          }\n        }\n      }\n\n      var arrow, arrow_shift_x, arrow_y, text_shift_x, text_y;\n      switch (this.type) {\n        case Stroke.Type.BRUSH_DOWN:\n          arrow = \"vc3\";\n          arrow_shift_x = -3;\n          arrow_y = topY - (line_space / 2) + 10;\n          botY += (line_space / 2);\n          break;\n        case Stroke.Type.BRUSH_UP:\n          arrow = \"v11\";\n          arrow_shift_x = 0.5;\n          arrow_y = botY + (line_space / 2);\n          topY -= (line_space / 2);\n          break;\n        case Stroke.Type.ROLL_DOWN:\n        case Stroke.Type.RASQUEDO_DOWN:\n          arrow = \"vc3\";\n          arrow_shift_x = -3;\n          text_shift_x = this.x_shift + arrow_shift_x - 2;\n          if (this.note instanceof Vex.Flow.StaveNote) {\n            topY += 1.5 * line_space;\n            if ((botY - topY) % 2 !== 0) {\n              botY += 0.5 * line_space;\n            } else {\n              botY += line_space;\n            }\n            arrow_y = topY - line_space;\n            text_y = botY + line_space + 2;\n          } else {\n            topY += 1.5 * line_space;\n            botY += line_space;\n            arrow_y = topY - 0.75 * line_space;\n            text_y = botY + 0.25 * line_space;\n          }\n          break;\n        case Stroke.Type.ROLL_UP:\n        case Stroke.Type.RASQUEDO_UP:\n          arrow = \"v52\";\n          arrow_shift_x = -4;\n          text_shift_x = this.x_shift + arrow_shift_x - 1;\n          if (this.note instanceof Vex.Flow.StaveNote) {\n            arrow_y = line_space / 2;\n            topY += 0.5 * line_space;\n            if ((botY - topY) % 2 === 0) {\n              botY += line_space / 2;\n            }\n            arrow_y = botY + 0.5 * line_space;\n            text_y = topY - 1.25 * line_space;\n          } else {\n            topY += 0.25 * line_space;\n            botY += 0.5 * line_space;\n            arrow_y = botY + 0.25 * line_space;\n            text_y = topY - line_space;\n          }\n          break;\n      }\n\n      // Draw the stroke\n      if (this.type == Stroke.Type.BRUSH_DOWN ||\n          this.type == Stroke.Type.BRUSH_UP) {\n        this.context.fillRect(x + this.x_shift, topY, 1, botY - topY);\n      } else {\n        if (this.note instanceof Vex.Flow.StaveNote) {\n          for (i = topY; i <= botY; i += line_space) {\n            Vex.Flow.renderGlyph(this.context, x + this.x_shift - 4,\n                                 i,\n                                 this.render_options.font_scale, \"va3\");\n          }\n        } else {\n          for (i = topY; i <= botY; i+= 10) {\n            Vex.Flow.renderGlyph(this.context, x + this.x_shift - 4,\n                                 i,\n                                 this.render_options.font_scale, \"va3\");\n          }\n          if (this.type == Vex.Flow.Stroke.Type.RASQUEDO_DOWN)\n            text_y = i + 0.25 * line_space;\n        }\n      }\n\n      // Draw the arrow head\n      Vex.Flow.renderGlyph(this.context, x + this.x_shift + arrow_shift_x, arrow_y,\n                           this.render_options.font_scale, arrow);\n\n      // Draw the rasquedo \"R\"\n      if (this.type == Stroke.Type.RASQUEDO_DOWN ||\n          this.type == Stroke.Type.RASQUEDO_UP) {\n        this.context.save();\n        this.context.setFont(this.font.family, this.font.size, this.font.weight);\n        this.context.fillText(\"R\", x + text_shift_x, text_y);\n        this.context.restore();\n      }\n    }\n  });\n\n  return Stroke;\n}());\n// VexFlow - Music Engraving for HTML5\n// Copyright Mohit Muthanna 2010\n//\n// This class implements curves (for slurs)\n\nVex.Flow.Curve = (function() {\n  // from: Start note\n  // to: End note\n  // options:\n  //    cps: List of control points\n  //    x_shift: pixels to shift\n  //    y_shift: pixels to shift\n  function Curve(from, to, options) {\n    if (arguments.length > 0) this.init(from, to, options);\n  }\n\n  Curve.Position = {\n    NEAR_HEAD: 1,\n    NEAR_TOP: 2\n  };\n\n  Curve.DEBUG = true;\n\n  Curve.prototype = {\n    init: function(from, to, options) {\n      this.render_options = {\n        spacing: 2,\n        thickness: 2,\n        x_shift: 0,\n        y_shift: 10,\n        position: Curve.Position.NEAR_HEAD,\n        invert: false,\n        cps: [{x: 0, y: 10}, {x: 0, y: 10}]\n      };\n\n      Vex.Merge(this.render_options, options);\n      this.setNotes(from, to);\n    },\n\n    setContext: function(context) { this.context = context; return this; },\n    setNotes: function(from, to) {\n      if (!from && !to)\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Curve needs to have either first_note or last_note set.\");\n\n      this.from = from;\n      this.to = to;\n      return this;\n    },\n\n    /**\n     * @return {boolean} Returns true if this is a partial bar.\n     */\n    isPartial: function() {\n      return (!this.from || !this.to);\n    },\n\n    renderCurve: function(params) {\n      var ctx = this.context;\n      var cps = this.render_options.cps;\n\n      var x_shift = this.render_options.x_shift;\n      var y_shift = this.render_options.y_shift * params.direction;\n\n      var first_x = params.first_x + x_shift;\n      var first_y = params.first_y + y_shift;\n      var last_x = params.last_x - x_shift;\n      var last_y = params.last_y + y_shift;\n      var thickness = this.render_options.thickness;\n\n      var cp_spacing = (last_x - first_x) / (cps.length + 2);\n\n      ctx.beginPath();\n      ctx.moveTo(first_x, first_y);\n      ctx.bezierCurveTo(first_x + cp_spacing + cps[0].x,\n                        first_y + (cps[0].y * params.direction),\n                        last_x - cp_spacing + cps[1].x,\n                        last_y + (cps[1].y * params.direction),\n                        last_x, last_y);\n      ctx.bezierCurveTo(last_x - cp_spacing + cps[1].x,\n                        last_y + ((cps[1].y + thickness) * params.direction),\n                        first_x + cp_spacing + cps[0].x,\n                        first_y + ((cps[0].y + thickness) * params.direction),\n                        first_x, first_y);\n      ctx.stroke();\n      ctx.closePath();\n      ctx.fill();\n    },\n\n    draw: function() {\n      if (!this.context)\n        throw new Vex.RERR(\"NoContext\", \"No context to render tie.\");\n      var first_note = this.from;\n      var last_note = this.to;\n      var first_x, last_x, first_y, last_y, stem_direction;\n\n      var metric = \"baseY\";\n      var end_metric = \"baseY\";\n      var position = this.render_options.position;\n      var position_end = this.render_options.position_end;\n\n      if (position === Curve.Position.NEAR_TOP) {\n        metric = \"topY\";\n        end_metric = \"topY\";\n      }\n\n      if (position_end == Curve.Position.NEAR_HEAD) {\n        end_metric = \"baseY\";\n      } else if (position_end == Curve.Position.NEAR_TOP) {\n        end_metric = \"topY\";\n      }\n\n      if (first_note) {\n        first_x = first_note.getTieRightX();\n        stem_direction = first_note.getStemDirection();\n        first_y = first_note.getStemExtents()[metric];\n      } else {\n        first_x = last_note.getStave().getTieStartX();\n        first_y = last_note.getStemExtents()[metric];\n      }\n\n      if (last_note) {\n        last_x = last_note.getTieLeftX();\n        stem_direction = last_note.getStemDirection();\n        last_y = last_note.getStemExtents()[end_metric];\n      } else {\n        last_x = first_note.getStave().getTieEndX();\n        last_y = first_note.getStemExtents()[end_metric];\n      }\n\n      this.renderCurve({\n        first_x: first_x,\n        last_x: last_x,\n        first_y: first_y,\n        last_y: last_y,\n        direction: stem_direction *\n          (this.render_options.invert === true ? -1 : 1)\n      });\n      return true;\n    }\n  };\n\n  return Curve;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `StaveLine` which are simply lines that connect\n// two notes. This object is highly configurable, see the `render_options`.\n// A simple line is often used for notating glissando articulations, but you\n// can format a `StaveLine` with arrows or colors for more pedagogical\n// purposes, such as diagrams.\nVex.Flow.StaveLine = (function() {\n  function StaveLine(notes) {\n    if (arguments.length > 0) this.init(notes);\n  }\n\n  // Text Positioning\n  StaveLine.TextVerticalPosition = {\n    TOP: 1,\n    BOTTOM: 2\n  };\n\n  StaveLine.TextJustification = {\n    LEFT: 1,\n    CENTER: 2,\n    RIGHT: 3\n  };\n\n  // ## Prototype Methods\n  StaveLine.prototype = {\n    // Initialize the StaveLine with the given `notes`.\n    //\n    // `notes` is a struct that has:\n    //\n    //  ```\n    //  {\n    //    first_note: Note,\n    //    last_note: Note,\n    //    first_indices: [n1, n2, n3],\n    //    last_indices: [n1, n2, n3]\n    //  }\n    //  ```\n    init: function(notes) {\n      this.notes = notes;\n      this.context = null;\n\n      this.text = \"\";\n\n      this.font = {\n        family: \"Arial\",\n        size: 10,\n        weight: \"\"\n      };\n\n      this.render_options = {\n        // Space to add to the left or the right\n        padding_left: 4,\n        padding_right: 3,\n\n        // The width of the line in pixels\n        line_width: 1,\n        // An array of line/space lengths. Unsupported with Raphael (SVG)\n        line_dash: null,\n        // Can draw rounded line end, instead of a square. Unsupported with Raphael (SVG)\n        rounded_end: true,\n        // The color of the line and arrowheads\n        color: null,\n\n        // Flags to draw arrows on each end of the line\n        draw_start_arrow: false,\n        draw_end_arrow: false,\n\n        // The length of the arrowhead sides\n        arrowhead_length: 10,\n        // The angle of the arrowhead\n        arrowhead_angle: Math.PI / 8,\n\n        // The position of the text\n        text_position_vertical: StaveLine.TextVerticalPosition.TOP,\n        text_justification: StaveLine.TextJustification.CENTER\n      };\n\n      this.setNotes(notes);\n    },\n\n    // Set the rendering context\n    setContext: function(context) { this.context = context; return this; },\n    // Set the font for the `StaveLine` text\n    setFont: function(font) { this.font = font; return this; },\n    // The the annotation for the `StaveLine`\n    setText: function(text) { this.text = text; return this; },\n\n    // Set the notes for the `StaveLine`\n    setNotes: function(notes) {\n      if (!notes.first_note && !notes.last_note)\n        throw new Vex.RuntimeError(\"BadArguments\",\n            \"Notes needs to have either first_note or last_note set.\");\n\n      if (!notes.first_indices) notes.first_indices = [0];\n      if (!notes.last_indices) notes.last_indices = [0];\n\n      if (notes.first_indices.length != notes.last_indices.length)\n        throw new Vex.RuntimeError(\"BadArguments\", \"Connected notes must have similar\" +\n          \" index sizes\");\n\n      // Success. Lets grab 'em notes.\n      this.first_note = notes.first_note;\n      this.first_indices = notes.first_indices;\n      this.last_note = notes.last_note;\n      this.last_indices = notes.last_indices;\n      return this;\n    },\n\n    // Apply the style of the `StaveLine` to the context\n    applyLineStyle: function() {\n      if (!this.context) {\n        throw new Vex.RERR(\"NoContext\",\"No context to apply the styling to\");\n      }\n\n      var render_options = this.render_options;\n      var ctx = this.context;\n\n      if (render_options.line_dash) {\n        ctx.setLineDash(render_options.line_dash);\n      }\n\n      if (render_options.line_width) {\n        ctx.setLineWidth(render_options.line_width);\n      }\n\n      if (render_options.rounded_end) {\n        ctx.setLineCap(\"round\");\n      } else {\n        ctx.setLineCap(\"square\");\n      }\n    },\n\n    // Apply the text styling to the context\n    applyFontStyle: function() {\n      if (!this.context) {\n        throw new Vex.RERR(\"NoContext\",\"No context to apply the styling to\");\n      }\n\n      var ctx = this.context;\n\n      if (this.font) {\n        ctx.setFont(this.font.family, this.font.size, this.font.weight);\n      }\n\n      if (this.render_options.color) {\n        ctx.setStrokeStyle(this.render_options.color);\n        ctx.setFillStyle(this.render_options.color);\n      }\n    },\n\n    // Renders the `StaveLine` on the context\n    draw: function() {\n      if (!this.context) {\n        throw new Vex.RERR(\"NoContext\", \"No context to render StaveLine.\");\n      }\n\n      var ctx = this.context;\n      var first_note = this.first_note;\n      var last_note = this.last_note;\n      var render_options = this.render_options;\n\n      ctx.save();\n      this.applyLineStyle();\n\n      // Cycle through each set of indices and draw lines\n      var start_position;\n      var end_position;\n      this.first_indices.forEach(function(first_index, i) {\n        var last_index = this.last_indices[i];\n\n        // Get initial coordinates for the start/end of the line\n        start_position = first_note.getModifierStartXY(2, first_index);\n        end_position = last_note.getModifierStartXY(1, last_index);\n        var upwards_slope = start_position.y > end_position.y;\n\n        // Adjust `x` coordinates for modifiers\n        start_position.x += first_note.getMetrics().modRightPx +\n                            render_options.padding_left;\n        end_position.x -= last_note.getMetrics().modLeftPx +\n                          render_options.padding_right;\n\n\n        // Adjust first `x` coordinates for displacements\n        var notehead_width = first_note.getGlyph().head_width;\n        var first_displaced = first_note.getKeyProps()[first_index].displaced;\n        if (first_displaced && first_note.getStemDirection() === 1) {\n          start_position.x += notehead_width + render_options.padding_left;\n        }\n\n        // Adjust last `x` coordinates for displacements\n        var last_displaced = last_note.getKeyProps()[last_index].displaced;\n        if (last_displaced && last_note.getStemDirection() === -1) {\n          end_position.x -= notehead_width + render_options.padding_right;\n        }\n\n        // Adjust y position better if it's not coming from the center of the note\n        start_position.y += upwards_slope ? -3 : 1;\n        end_position.y += upwards_slope ? 2 : 0;\n\n        drawArrowLine(ctx, start_position, end_position, this.render_options);\n\n      }, this);\n\n      ctx.restore();\n\n      // Determine the x coordinate where to start the text\n      var text_width = ctx.measureText(this.text).width;\n      var justification = render_options.text_justification;\n      var x = 0;\n      if (justification === StaveLine.TextJustification.LEFT) {\n        x = start_position.x;\n      } else if (justification === StaveLine.TextJustification.CENTER) {\n        var delta_x = (end_position.x - start_position.x);\n        var center_x = (delta_x / 2 ) + start_position.x;\n        x = center_x - (text_width / 2);\n      } else if (justification === StaveLine.TextJustification.RIGHT) {\n        x = end_position.x  -  text_width;\n      }\n\n      // Determine the y value to start the text\n      var y;\n      var vertical_position = render_options.text_position_vertical;\n      if (vertical_position === StaveLine.TextVerticalPosition.TOP) {\n        y = first_note.getStave().getYForTopText();\n      } else if (vertical_position === StaveLine.TextVerticalPosition.BOTTOM) {\n        y = first_note.getStave().getYForBottomText();\n      }\n\n      // Draw the text\n      ctx.save();\n      this.applyFontStyle();\n      ctx.fillText(this.text, x, y);\n      ctx.restore();\n\n      return this;\n    }\n  };\n\n  // ## Private Helpers\n  // \n  // Attribution: Arrow rendering implementations based off of\n  // Patrick Horgan's article, \"Drawing lines and arcs with \n  // arrow heads on  HTML5 Canvas\"\n  // \n  // Draw an arrow head that connects between 3 coordinates\n  function drawArrowHead(ctx, x0, y0, x1, y1, x2, y2) {\n    // all cases do this.\n    ctx.beginPath();\n    ctx.moveTo(x0,y0);\n    ctx.lineTo(x1,y1);\n    ctx.lineTo(x2,y2);\n    ctx.lineTo(x0, y0);\n    ctx.closePath();\n\n    ctx.fill();\n  }\n\n  // Helper function to draw a line with arrow heads\n  function drawArrowLine(ctx, point1, point2, config) {\n    var both_arrows = config.draw_start_arrow && config.draw_end_arrow;\n\n    var x1 = point1.x;\n    var y1 = point1.y;\n    var x2 = point2.x;\n    var y2 = point2.y;\n\n    // For ends with arrow we actually want to stop before we get to the arrow\n    // so that wide lines won't put a flat end on the arrow.\n    var distance = Math.sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));\n    var ratio = (distance - config.arrowhead_length/3) / distance;\n    var end_x, end_y, start_x, start_y;\n    if (config.draw_end_arrow || both_arrows) {\n      end_x = Math.round(x1 + (x2 - x1) * ratio);\n      end_y = Math.round(y1 + (y2 - y1) * ratio);\n    } else {\n      end_x = x2;\n      end_y = y2;\n    }\n\n    if (config.draw_start_arrow || both_arrows) {\n      start_x = x1 + (x2 - x1) * (1 - ratio);\n      start_y = y1 + (y2 - y1) * (1 - ratio);\n    } else {\n      start_x = x1;\n      start_y = y1;\n    }\n\n    if (config.color) {\n      ctx.setStrokeStyle(config.color);\n      ctx.setFillStyle(config.color);\n    }\n\n    // Draw the shaft of the arrow\n    ctx.beginPath();\n    ctx.moveTo(start_x, start_y);\n    ctx.lineTo(end_x,end_y);\n    ctx.stroke();\n    ctx.closePath();\n\n    // calculate the angle of the line\n    var line_angle = Math.atan2(y2 - y1, x2 - x1);\n    // h is the line length of a side of the arrow head\n    var h = Math.abs(config.arrowhead_length / Math.cos(config.arrowhead_angle));\n\n    var angle1, angle2;\n    var top_x, top_y;\n    var bottom_x, bottom_y;\n\n    if (config.draw_end_arrow || both_arrows) {\n      angle1 = line_angle + Math.PI + config.arrowhead_angle;\n      top_x = x2 + Math.cos(angle1) * h;\n      top_y = y2 + Math.sin(angle1) * h;\n\n      angle2 = line_angle + Math.PI - config.arrowhead_angle;\n      bottom_x = x2 + Math.cos(angle2) * h;\n      bottom_y = y2 + Math.sin(angle2) * h;\n\n      drawArrowHead(ctx, top_x, top_y, x2, y2, bottom_x, bottom_y);\n    }\n\n    if (config.draw_start_arrow || both_arrows) {\n      angle1 = line_angle + config.arrowhead_angle;\n      top_x = x1 + Math.cos(angle1) * h;\n      top_y = y1 + Math.sin(angle1) * h;\n\n      angle2 = line_angle - config.arrowhead_angle;\n      bottom_x = x1 + Math.cos(angle2) * h;\n      bottom_y = y1 + Math.sin(angle2) * h;\n\n      drawArrowHead(ctx, top_x, top_y, x1, y1, bottom_x, bottom_y);\n    }\n  }\n\n  return StaveLine;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `Crescendo` object which draws crescendos and\n// decrescendo dynamics markings. A `Crescendo` is initialized with a\n// duration and formatted as part of a `Voice` like any other `Note`\n// type in VexFlow. This object would most likely be formatted in a Voice\n// with `TextNotes` - which are used to represent other dynamics markings.\nVex.Flow.Crescendo = (function() {\n  function Crescendo(note_struct) {\n    if (arguments.length > 0) this.init(note_struct);\n  }\n\n  // To enable logging for this class. Set `Vex.Flow.Crescendo.DEBUG` to `true`.\n  function L() { if (Crescendo.DEBUG) Vex.L(\"Vex.Flow.Crescendo\", arguments); }\n\n  // Private helper to draw the hairpin\n  function renderHairpin(ctx, params) {\n    var begin_x = params.begin_x;\n    var end_x = params.end_x;\n    var y = params.y;\n    var half_height =  params.height / 2;\n\n    ctx.beginPath();\n\n    if (params.reverse) {\n        ctx.moveTo(begin_x, y - half_height);\n        ctx.lineTo(end_x,  y);\n        ctx.lineTo(begin_x, y + half_height);\n    } else {\n        ctx.moveTo(end_x,  y - half_height);\n        ctx.lineTo(begin_x, y);\n        ctx.lineTo(end_x,  y + half_height);\n    }\n\n    ctx.stroke();\n    ctx.closePath();\n  }\n\n  // ## Prototype Methods\n  Vex.Inherit(Crescendo, Vex.Flow.Note, {\n    // Initialize the crescendo's properties\n    init: function(note_struct) {\n      Crescendo.superclass.init.call(this, note_struct);\n\n      // Whether the object is a decrescendo\n      this.decrescendo = false;\n\n      // The staff line to be placed on\n      this.line = note_struct.line || 0;\n\n      // The height at the open end of the cresc/decresc\n      this.height = 15;\n\n      Vex.Merge(this.render_options, {\n        // Extensions to the length of the crescendo on either side\n        extend_left: 0,\n        extend_right: 0,\n        // Vertical shift\n        y_shift: 0\n      });\n    },\n\n    // Set the line to center the element on\n    setLine: function(line) { this.line = line; return this; },\n\n    // Set the full height at the open end\n    setHeight: function(height) { this.height = height; return this; },\n\n    // Set whether the sign should be a descresendo by passing a bool\n    // to `decresc`\n    setDecrescendo: function(decresc) {\n      this.decrescendo = decresc;\n      return this;\n    },\n\n    // Preformat the note\n    preFormat: function() { this.preFormatted = true; return this; },\n\n    // Render the Crescendo object onto the canvas\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw Hairpin without a context.\");\n\n      var tick_context = this.getTickContext();\n      var next_context = Vex.Flow.TickContext.getNextContext(tick_context);\n\n      var begin_x = this.getAbsoluteX();\n      var end_x;\n      if (next_context) {\n        end_x = next_context.getX();\n      } else {\n        end_x = this.stave.x + this.stave.width;\n      }\n\n      var y = this.stave.getYForLine(this.line + (-3)) + 1;\n\n      L(\"Drawing \",  this.decrescendo ? \"decrescendo \" : \"crescendo \",\n        this.height, \"x\", begin_x - end_x);\n\n      renderHairpin(this.context, {\n        begin_x: begin_x - this.render_options.extend_left,\n        end_x: end_x + this.render_options.extend_right,\n        y: y + this.render_options.y_shift,\n        height: this.height,\n        reverse: this.decrescendo\n      });\n    }\n  });\n\n  return Crescendo;\n})();\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implements ornaments as modifiers that can be\n// attached to notes. The complete list of ornaments is available in\n// `tables.js` under `Vex.Flow.ornamentCodes`.\n//\n// See `tests/ornament_tests.js` for usage examples.\n\nVex.Flow.Ornament = (function() {\n  function Ornament(type) {\n    if (arguments.length > 0) this.init(type);\n  }\n  Ornament.CATEGORY = \"ornaments\";\n\n  // Accidental position modifications for each glyph\n  var acc_mods = {\n    \"n\": {\n      shift_x: 1,\n      shift_y_upper:0,\n      shift_y_lower:0,\n      height: 17\n    },\n    \"#\": {\n      shift_x: 0,\n      shift_y_upper: -2,\n      shift_y_lower: -2,\n      height: 20\n    },\n    \"b\": {\n      shift_x: 1,\n      shift_y_upper: 0,\n      shift_y_lower: 3,\n      height: 18\n    },\n    \"##\": {\n      shift_x: 0,\n      shift_y_upper: 0,\n      shift_y_lower: 0,\n      height: 12,\n    },\n    \"bb\": {\n      shift_x: 0,\n      shift_y_upper: 0,\n      shift_y_lower: 4,\n      height: 17\n    },\n    \"db\": {\n      shift_x: -3,\n      shift_y_upper: 0,\n      shift_y_lower: 4,\n      height: 17\n    },\n    \"bbs\": {\n      shift_x: 0,\n      shift_y_upper: 0,\n      shift_y_lower: 4,\n      height: 17\n    },\n    \"d\": {\n      shift_x: 0,\n      shift_y_upper: 0,\n      shift_y_lower: 0,\n      height: 17\n    },\n    \"++\": {\n      shift_x: -2,\n      shift_y_upper: -6,\n      shift_y_lower: -3,\n      height: 22\n    },\n    \"+\": {\n      shift_x: 1,\n      shift_y_upper: -4,\n      shift_y_lower: -2,\n      height: 20\n    }\n  };\n\n  // To enable logging for this class. Set `Vex.Flow.Ornament.DEBUG` to `true`.\n  function L() { if (Ornament.DEBUG) Vex.L(\"Vex.Flow.Ornament\", arguments); }\n\n  var Modifier = Vex.Flow.Modifier;\n\n  // ## Static Methods\n  // Arrange ornaments inside `ModifierContext`\n  Ornament.format = function(ornaments, state) {\n   if (!ornaments || ornaments.length === 0) return false;\n\n    var text_line = state.text_line;\n    var max_width = 0;\n\n    // Format Articulations\n    var width;\n    for (var i = 0; i < ornaments.length; ++i) {\n      var ornament = ornaments[i];\n      ornament.setTextLine(text_line);\n      width = ornament.getWidth() > max_width ?\n        ornament.getWidth() : max_width;\n\n      var type = Vex.Flow.ornamentCodes(ornament.type);\n      if(type.between_lines)\n        text_line += 1;\n      else\n        text_line += 1.5;\n    }\n\n    state.left_shift += width / 2;\n    state.right_shift += width / 2;\n    state.text_line = text_line;\n    return true;\n  };\n\n  // ## Prototype Methods\n  Vex.Inherit(Ornament, Modifier, {\n    // Create a new ornament of type `type`, which is an entry in\n    // `Vex.Flow.ornamentCodes` in `tables.js`.\n    init: function(type) {\n      Ornament.superclass.init.call(this);\n\n      this.note = null;\n      this.index = null;\n      this.type = type;\n      this.position = Modifier.Position.ABOVE;\n      this.delayed = false;\n\n      this.accidental_upper = \"\";\n      this.accidental_lower = \"\";\n\n      this.render_options = {\n        font_scale: 38\n      };\n\n      this.ornament = Vex.Flow.ornamentCodes(this.type);\n      if (!this.ornament) throw new Vex.RERR(\"ArgumentError\",\n         \"Ornament not found: '\" + this.type + \"'\");\n\n      // Default width comes from ornament table.\n      this.setWidth(this.ornament.width);\n    },\n\n    // Set whether the ornament is to be delayed\n    setDelayed: function(delayed) { this.delayed = delayed; return this; },\n\n    // Set the upper accidental for the ornament\n    setUpperAccidental: function(acc) {\n      this.accidental_upper = acc;\n      return this;\n    },\n\n    // Set the lower accidental for the ornament\n    setLowerAccidental: function(acc) {\n      this.accidental_lower = acc;\n      return this;\n    },\n\n    // Render ornament in position next to note.\n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw Ornament without a context.\");\n      if (!(this.note && (this.index !== null))) throw new Vex.RERR(\"NoAttachedNote\",\n        \"Can't draw Ornament without a note and index.\");\n\n      var ctx = this.context;\n      var stem_direction = this.note.getStemDirection();\n      var stave = this.note.getStave();\n\n      // Get stem extents\n      var stem_ext = this.note.getStem().getExtents();\n      var top, bottom;\n      if (stem_direction === Vex.Flow.StaveNote.STEM_DOWN) {\n        top = stem_ext.baseY;\n        bottom = stem_ext.topY;\n      } else {\n        top = stem_ext.topY;\n        bottom = stem_ext.baseY;\n      }\n\n      // TabNotes don't have stems attached to them. Tab stems are rendered\n      // outside the stave.\n      var is_tabnote = this.note.getCategory() === 'tabnotes';\n      if (is_tabnote) {\n        if (this.note.hasStem()){\n          if (stem_direction === Vex.Flow.StaveNote.STEM_UP) {\n            bottom = stave.getYForBottomText(this.text_line - 2);\n          } else if (stem_direction === Vex.Flow.StaveNote.STEM_DOWN ) {\n            top = stave.getYForTopText(this.text_line - 1.5);\n          }\n        } else { // Without a stem\n          top = stave.getYForTopText(this.text_line - 1);\n          bottom = stave.getYForBottomText(this.text_line - 2);\n        }\n      }\n\n      var is_on_head = stem_direction === Vex.Flow.StaveNote.STEM_DOWN;\n      var spacing = stave.getSpacingBetweenLines();\n      var line_spacing = 1;\n\n      // Beamed stems are longer than quarter note stems, adjust accordingly\n      if (!is_on_head && this.note.beam) {\n        line_spacing += 0.5;\n      }\n\n      var total_spacing = spacing * (this.text_line + line_spacing);\n      var glyph_y_between_lines = (top - 7) - total_spacing;\n\n      // Get initial coordinates for the modifier position\n      var start = this.note.getModifierStartXY(this.position, this.index);\n      var glyph_x = start.x + this.ornament.shift_right;\n      var glyph_y = Math.min(stave.getYForTopText(this.text_line) - 3, glyph_y_between_lines);\n      glyph_y += this.ornament.shift_up + this.y_shift;\n\n      // Ajdust x position if ornament is delayed\n      if (this.delayed) {\n        glyph_x += this.ornament.width;\n        var next_context = Vex.Flow.TickContext.getNextContext(this.note.getTickContext());\n        if (next_context) {\n          glyph_x += (next_context.getX() - glyph_x) * 0.5;\n        } else {\n          glyph_x += (stave.x + stave.width - glyph_x) * 0.5;\n        }\n      }\n\n      var ornament = this;\n      function drawAccidental(ctx, code, upper) {\n        var accidental = Vex.Flow.accidentalCodes(code);\n\n        var acc_x = glyph_x - 3;\n        var acc_y = glyph_y + 2;\n\n        // Special adjustments for trill glyph\n        if (upper) {\n          acc_y -= mods ? mods.height : 18;\n          acc_y +=  ornament.type === \"tr\" ? -8 : 0;\n        } else {\n          acc_y +=  ornament.type === \"tr\" ? -6 : 0;\n        }\n\n        // Fine tune position of accidental glyph\n        var mods = acc_mods[code];\n        if (mods) {\n          acc_x += mods.shift_x;\n          acc_y += upper ? mods.shift_y_upper : mods.shift_y_lower;\n        }\n\n        // Render the glyph\n        var scale = ornament.render_options.font_scale/1.3;\n        Vex.Flow.renderGlyph(ctx, acc_x, acc_y, scale, accidental.code);\n\n        // If rendered a bottom accidental, increase the y value by the\n        // accidental height so that the ornament's glyph is shifted up\n        if (!upper) {\n          glyph_y -= mods ? mods.height : 18;\n        }\n      }\n\n      // Draw lower accidental for ornament\n      if (this.accidental_lower) {\n        drawAccidental(ctx, this.accidental_lower, false, glyph_x, glyph_y);\n      }\n\n      L(\"Rendering ornament: \", this.ornament, glyph_x, glyph_y);\n      Vex.Flow.renderGlyph(ctx, glyph_x, glyph_y,\n                           this.render_options.font_scale, this.ornament.code);\n\n      // Draw upper accidental for ornament\n      if (this.accidental_upper) {\n        drawAccidental(ctx, this.accidental_upper, true, glyph_x, glyph_y);\n      }\n\n    }\n  });\n\n  return Ornament;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements different types of pedal markings. These notation\n// elements indicate to the performer when to depress and release the a pedal.\n//\n// In order to create \"Sostenuto\", and \"una corda\" markings, you must set\n// custom text for the release/depress pedal markings.\nVex.Flow.PedalMarking = (function() {\n  function PedalMarking(type) {\n    if (arguments.length > 0) this.init(type);\n  }\n\n  // To enable logging for this class. Set `Vex.Flow.PedalMarking.DEBUG` to `true`.\n  function L() { if (PedalMarking.DEBUG) Vex.L(\"Vex.Flow.PedalMarking\", arguments); }\n\n  // Glyph data\n  PedalMarking.GLYPHS = {\n    \"pedal_depress\": {\n      code: \"v36\",\n      x_shift:-10,\n      y_shift:0\n    },\n    \"pedal_release\": {\n      code: \"v5d\",\n      x_shift:-2,\n      y_shift:3\n    },\n  };\n\n  PedalMarking.Styles = {\n    TEXT: 1,\n    BRACKET: 2,\n    MIXED: 3\n  };\n\n\n  // ## Public helpers\n  //\n  // Create a sustain pedal marking. Returns the defaults PedalMarking.\n  // Which uses the traditional \"Ped\" and \"*\"\" markings.\n  PedalMarking.createSustain = function(notes) {\n    var pedal = new PedalMarking(notes);\n    return pedal;\n  };\n\n  // Create a sostenuto pedal marking\n  PedalMarking.createSostenuto = function(notes) {\n    var pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.MIXED);\n    pedal.setCustomText(\"Sost. Ped.\");\n    return pedal;\n  };\n\n  // Create an una corda pedal marking\n  PedalMarking.createUnaCorda = function(notes){\n    var pedal = new PedalMarking(notes);\n    pedal.setStyle(PedalMarking.Styles.TEXT);\n    pedal.setCustomText(\"una corda\", \"tre corda\");\n    return pedal;\n  };\n\n  // ## Prototype Methods\n  PedalMarking.prototype =  {\n    init: function(notes) {\n      this.notes = notes;\n      this.style = Vex.Flow.PedalMarking.TEXT;\n      this.line = 0;\n\n      // Custom text for the release/depress markings\n      this.custom_depress_text = \"\";\n      this.custom_release_text = \"\";\n\n      this.font = {\n        family: \"Times New Roman\",\n        size: 12,\n        weight: \"italic bold\"\n      };\n\n      this.render_options = {\n        bracket_height: 10,\n        text_margin_right: 6,\n        bracket_line_width: 1,\n        glyph_point_size: 40,\n        color: \"black\"\n      };\n    },\n\n    // Set custom text for the `depress`/`release` pedal markings. No text is\n    // set if the parameter is falsy.\n    setCustomText: function(depress, release) {\n      this.custom_depress_text = depress || \"\";\n      this.custom_release_text = release || \"\";\n      return this;\n    },\n\n    // Set the pedal marking style\n    setStyle: function(style){\n      if (style < 1 && style > 3)  {\n        throw new Vex.RERR(\"InvalidParameter\",\n          \"The style must be one found in PedalMarking.Styles\");\n      }\n\n      this.style = style;\n      return this;\n    },\n\n    // Set the staff line to render the markings on\n    setLine: function(line) { this.line = line; return this; },\n\n    // Set the rendering context\n    setContext: function(context) { this.context = context; return this; },\n\n    // Draw the bracket based pedal markings\n    drawBracketed: function() {\n      var ctx = this.context;\n      var is_pedal_depressed = false;\n      var prev_x;\n      var prev_y;\n      var pedal = this;\n\n      // Iterate through each note\n      this.notes.forEach(function(note, index, notes) {\n        // Each note triggers the opposite pedal action\n        is_pedal_depressed = !is_pedal_depressed;\n\n        // Get the initial coordinates for the note\n        var x = note.getAbsoluteX();\n        var y = note.getStave().getYForBottomText(pedal.line + 3);\n\n        // Throw if current note is positioned before the previous note\n        if (x < prev_x) throw new Vex.RERR('InvalidConfiguration',\n          'The notes provided must be in order of ascending x positions');\n\n        // Determine if the previous or next note are the same\n        // as the current note. We need to keep track of this for\n        // when adjustments are made for the release+depress action\n        var next_is_same = notes[index+1] === note;\n        var prev_is_same = notes[index-1] === note;\n\n        var x_shift = 0;\n        if (is_pedal_depressed) {\n          // Adjustment for release+depress\n          x_shift =  prev_is_same ? 5 : 0;\n\n          if (pedal.style === PedalMarking.Styles.MIXED && !prev_is_same) {\n            // For MIXED style, start with text instead of bracket\n            if (pedal.custom_depress_text) {\n              // If we have custom text, use instead of the default \"Ped\" glyph\n              var text_width = ctx.measureText(pedal.custom_depress_text).width;\n              ctx.fillText(pedal.custom_depress_text, x - (text_width/2), y);\n              x_shift = (text_width / 2) + pedal.render_options.text_margin_right;\n            } else {\n              // Render the Ped glyph in position\n              drawPedalGlyph('pedal_depress', ctx, x, y, pedal.render_options.glyph_point_size);\n              x_shift = 20 + pedal.render_options.text_margin_right;\n            }\n          } else {\n            // Draw start bracket\n            ctx.beginPath();\n            ctx.moveTo(x, y - pedal.render_options.bracket_height);\n            ctx.lineTo(x + x_shift, y);\n            ctx.stroke();\n            ctx.closePath();\n          }\n        } else {\n          // Adjustment for release+depress\n          x_shift = next_is_same ? -5 : 0;\n\n          // Draw end bracket\n          ctx.beginPath();\n          ctx.moveTo(prev_x, prev_y);\n          ctx.lineTo(x + x_shift, y);\n          ctx.lineTo(x, y - pedal.render_options.bracket_height);\n          ctx.stroke();\n          ctx.closePath();\n        }\n\n        // Store previous coordinates\n        prev_x = x + x_shift;\n        prev_y = y;\n      });\n    },\n\n    // Draw the text based pedal markings. This defaults to the traditional\n    // \"Ped\" and \"*\"\" symbols if no custom text has been provided.\n    drawText: function() {\n      var ctx = this.context;\n      var is_pedal_depressed = false;\n      var pedal = this;\n\n      // The glyph point size\n      var point = pedal.render_options.glyph_point_size;\n\n      // Iterate through each note, placing glyphs or custom text accordingly\n      this.notes.forEach(function(note) {\n        is_pedal_depressed = !is_pedal_depressed;\n        var stave = note.getStave();\n        var x = note.getAbsoluteX();\n        var y = stave.getYForBottomText(pedal.line + 3);\n\n        var text_width = 0;\n        if (is_pedal_depressed) {\n          if (pedal.custom_depress_text) {\n            text_width = ctx.measureText(pedal.custom_depress_text).width;\n            ctx.fillText(pedal.custom_depress_text, x - (text_width/2), y);\n          } else {\n            drawPedalGlyph(\"pedal_depress\", ctx, x, y, point);\n          }\n        } else {\n          if (pedal.custom_release_text) {\n            text_width = ctx.measureText(pedal.custom_release_text).width;\n            ctx.fillText(pedal.custom_release_text, x - (text_width/2), y);\n          } else {\n            drawPedalGlyph(\"pedal_release\", ctx, x, y, point);\n          }\n        }\n      });\n    },\n\n    // Render the pedal marking in position on the rendering context \n    draw: function() {\n      if (!this.context) throw new Vex.RERR(\"NoContext\",\n        \"Can't draw PedalMarking without a context.\");\n      var ctx = this.context;\n\n      ctx.save();\n      ctx.setStrokeStyle(this.render_options.color);\n      ctx.setFillStyle(this.render_options.color);\n      ctx.setFont(this.font.family, this.font.size, this.font.weight);\n\n      L(\"Rendering Pedal Marking\");\n\n      if (this.style === PedalMarking.Styles.BRACKET ||\n          this.style === PedalMarking.Styles.MIXED) {\n        ctx.setLineWidth(this.render_options.bracket_line_width);\n        this.drawBracketed();\n      } else if (this.style === Vex.Flow.PedalMarking.Styles.TEXT) {\n        this.drawText();\n      }\n\n      ctx.restore();\n    }\n  };\n\n  // ## Private Helper\n  // \n  // Draws a pedal glyph with the provided `name` on a rendering `context` \n  // at the coordinates `x` and `y. Takes into account the glyph data\n  // coordinate shifts.\n  function drawPedalGlyph(name, context, x, y, point) {\n    var glyph_data = PedalMarking.GLYPHS[name];\n    var glyph = new Vex.Flow.Glyph(glyph_data.code, point);\n    glyph.render(context, x + glyph_data.x_shift, y + glyph_data.y_shift);\n  }\n\n  return PedalMarking;\n}());\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n// Author: Cyril Silverman\n//\n// ## Description\n//\n// This file implement `TextBrackets` which extend between two notes.\n// The octave transposition markings (8va, 8vb, 15va, 15vb) can be created\n// using this class.\n//\nVex.Flow.TextBracket = (function() {\n  function TextBracket(bracket_data) {\n    if (arguments.length > 0) this.init(bracket_data);\n  }\n\n  // To enable logging for this class. Set `Vex.Flow.TextBracket.DEBUG` to `true`.\n  function L() { if (TextBracket.DEBUG) Vex.L(\"Vex.Flow.TextBracket\", arguments); }\n\n  TextBracket.Positions = {\n    TOP: 1,\n    BOTTOM: -1\n  };\n\n  // ## Prototype Methods\n  TextBracket.prototype =  {\n    init: function(bracket_data) {\n      this.start = bracket_data.start;\n      this.stop = bracket_data.stop;\n\n      this.text = bracket_data.text || \"\";\n      this.superscript = bracket_data.superscript || \"\";\n\n      this.position = bracket_data.position || TextBracket.Positions.TOP;\n      this.line = 1;\n\n      this.font = {\n        family: \"Serif\",\n        size: 15,\n        weight: \"italic\"\n      };\n\n      this.render_options = {\n        dashed: true,\n        dash: [5],\n        color: \"black\",\n        line_width: 1,\n        show_bracket: true,\n        bracket_height: 8,\n\n        // In the BOTTOM position, the bracket line can extend\n        // under the superscript.\n        underline_superscript: true\n      };\n    },\n\n    // Apply the text backet styling to the provided `context`\n    applyStyle: function(context) {\n      // Apply style for the octave bracket\n      context.setFont(this.font.family, this.font.size, this.font.weight);\n      context.setStrokeStyle(this.render_options.color);\n      context.setFillStyle(this.render_options.color);\n      context.setLineWidth(this.render_options.line_width);\n\n      return this;\n    },\n\n    // Set whether the bracket line should be `dashed`. You can also\n    // optionally set the `dash` pattern by passing in an array of numbers\n    setDashed: function(dashed, dash) {\n      this.render_options.dashed = dashed;\n      if (dash) this.render_options.dash = dash;\n      return this;\n    },\n\n    // Set the font for the text\n    setFont: function(font) { this.font = font; return this; },\n    // Set the rendering `context` for the octave bracket\n    setContext: function(context) { this.context = context; return this; },\n    // Set the staff line to render the bracket on\n    setLine: function(line) { this.line = line; return this; },\n\n    // Draw the octave bracket on the rendering context\n    draw: function() {\n      var ctx = this.context;\n\n      var y = 0;\n      switch(this.position) {\n        case TextBracket.Positions.TOP:\n          y =  this.start.getStave().getYForTopText(this.line);\n          break;\n        case TextBracket.Positions.BOTTOM:\n          y =  this.start.getStave().getYForBottomText(this.line);\n          break;\n      }\n\n      // Get the preliminary start and stop coordintates for the bracket\n      var start = { x: this.start.getAbsoluteX(), y: y};\n      var stop = { x: this.stop.getAbsoluteX(), y: y };\n\n      L(\"Rendering TextBracket: start:\", start, \"stop:\", stop, \"y:\", y);\n\n      var bracket_height = this.render_options.bracket_height * this.position;\n\n      ctx.save();\n      this.applyStyle(ctx);\n\n      // Draw text\n      ctx.fillText(this.text, start.x, start.y);\n\n      // Get the width and height for the octave number\n      var main_width = ctx.measureText(this.text).width;\n      var main_height = ctx.measureText(\"M\").width;\n\n      // Calculate the y position for the super script\n      var super_y = start.y - (main_height/2.5);\n\n      // Draw the superscript\n      ctx.setFont(this.font.family, this.font.size / 1.4, this.font.weight);\n      ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n\n\n      // Determine width and height of the superscript\n      var superscript_width = ctx.measureText(this.superscript).width;\n      var super_height = ctx.measureText(\"M\").width;\n\n      // Setup initial coordinates for the bracket line\n      var start_x = start.x;\n      var line_y = super_y;\n      var end_x = stop.x + this.stop.getGlyph().head_width;\n\n      // Adjust x and y coordinates based on position\n      if (this.position === TextBracket.Positions.TOP) {\n        start_x += main_width + superscript_width + 5;\n        line_y -= super_height/2.7;\n      } else if (this.position === TextBracket.Positions.BOTTOM) {\n        line_y += super_height/2.7;\n        start_x += main_width + 2;\n\n        if (!this.render_options.underline_superscript) {\n          start_x += superscript_width;\n        }\n      }\n\n      if (this.render_options.dashed) {\n        // Main line\n        Vex.Flow.Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y,\n          this.render_options.dash);\n        // Ending Bracket\n        if (this.render_options.show_bracket) {\n          Vex.Flow.Renderer.drawDashedLine(ctx, end_x, line_y + (1 * this.position),\n            end_x, line_y + bracket_height, this.render_options.dash);\n        }\n      } else {\n        ctx.beginPath();\n        ctx.moveTo(start_x, line_y);\n        // Main line\n        ctx.lineTo(end_x, line_y);\n        if (this.render_options.show_bracket) {\n          // Ending bracket\n          ctx.lineTo(end_x, line_y + bracket_height);\n        }\n        ctx.stroke();\n        ctx.closePath();\n      }\n\n      ctx.restore();\n    }\n  };\n\n  return TextBracket;\n})();\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements the `TextDynamics` which renders traditional\n// text dynamics markings, **ie: p, f, sfz, rfz, ppp**\n//\n// You can render any dynamics string that contains a combination of\n// the following letters:  P, M, F, Z, R, S\nVex.Flow.TextDynamics = (function(){\n  function TextDynamics(text_struct) {\n    if (arguments.length > 0) this.init(text_struct);\n  }\n\n  // To enable logging for this class. Set `Vex.Flow.TextDynamics.DEBUG` to `true`.\n  function L() { if (TextDynamics.DEBUG) Vex.L(\"Vex.Flow.TextDynamics\", arguments); }\n\n  // The glyph data for each dynamics letter\n  TextDynamics.GLYPHS = {\n    \"f\": {\n      code: \"vba\",\n      width: 12\n    },\n    \"p\": {\n      code: \"vbf\",\n      width: 14\n    },\n    \"m\": {\n      code: \"v62\",\n      width: 17\n    },\n    \"s\": {\n      code: \"v4a\",\n      width: 10\n    },\n    \"z\": {\n      code: \"v80\",\n      width: 12\n    },\n    \"r\": {\n      code: \"vb1\",\n      width: 12\n    }\n  };\n\n  // ## Prototype Methods\n  //\n  // A `TextDynamics` object inherits from `Note` so that it can be formatted\n  // within a `Voice`.\n  Vex.Inherit(TextDynamics, Vex.Flow.Note, {\n    // Create the dynamics marking. `text_struct` is an object\n    // that contains a `duration` property and a `sequence` of\n    // letters that represents the letters to render\n    init: function(text_struct) {\n      TextDynamics.superclass.init.call(this, text_struct);\n\n      this.sequence = text_struct.text.toLowerCase();\n      this.line = text_struct.line || 0;\n      this.glyphs = [];\n\n      Vex.Merge(this.render_options, {\n        glyph_font_size: 40\n      });\n\n      L(\"New Dynamics Text: \", this.sequence);\n    },\n\n    // Set the Stave line on which the note should be placed\n    setLine: function(line) { this.line = line;  return this; },\n\n    // Preformat the dynamics text\n    preFormat: function() {\n      var total_width = 0;\n      // Iterate through each letter\n      this.sequence.split('').forEach(function(letter) {\n        // Get the glyph data for the letter\n        var glyph_data = TextDynamics.GLYPHS[letter];\n        if (!glyph_data) throw new Vex.RERR(\"Invalid dynamics character: \" + letter);\n\n        var size =  this.render_options.glyph_font_size;\n        var glyph = new Vex.Flow.Glyph(glyph_data.code, size);\n\n        // Add the glyph\n        this.glyphs.push(glyph);\n\n        total_width += glyph_data.width;\n      }, this);\n\n      // Store the width of the text\n      this.setWidth(total_width);\n      this.preFormatted = true;\n      return this;\n    },\n\n    // Draw the dynamics text on the rendering context\n    draw: function() {\n      var x = this.getAbsoluteX();\n      var y = this.stave.getYForLine(this.line + (-3));\n\n      L(\"Rendering Dynamics: \", this.sequence);\n\n      var letter_x = x;\n      this.glyphs.forEach(function(glyph, index) {\n        var current_letter = this.sequence[index];\n        glyph.render(this.context, letter_x, y);\n        letter_x += TextDynamics.GLYPHS[current_letter].width;\n      }, this);\n    }\n  });\n\n  return TextDynamics;\n})();\nVex.Flow.GraceNote = (function() {\n  var GraceNote = function(note_struct) {\n    if (arguments.length > 0) this.init(note_struct);\n  };\n\n  Vex.Inherit(GraceNote, Vex.Flow.StaveNote, {\n    init: function(note_struct) {\n      GraceNote.superclass.init.call(this, note_struct);\n\n      this.render_options.glyph_font_scale = 22;\n      this.render_options.stem_height = 20;\n      this.render_options.stroke_px = 2;\n      this.glyph.head_width = 6;\n\n      this.slash = note_struct.slash;\n      this.slur = true;\n\n      this.buildNoteHeads();\n\n      this.width = 3;\n    },\n\n    getStemExtension: function(){\n      var glyph = this.getGlyph();\n\n      if (this.stem_extension_override != null) {\n        return this.stem_extension_override;\n      }\n\n      if (glyph) {\n        return this.getStemDirection() === 1 ? glyph.gracenote_stem_up_extension :\n          glyph.gracenote_stem_down_extension;\n      }\n\n      return 0;\n    },\n\n    getCategory: function() { return 'gracenotes'; },\n\n    draw: function(){\n      GraceNote.superclass.draw.call(this);\n      var ctx = this.context;\n      var stem_direction = this.getStemDirection();\n\n      if (this.slash) {\n        ctx.beginPath();\n\n        var x = this.getAbsoluteX();\n        var y = this.getYs()[0] - (this.stem.getHeight() / 2.8);\n        if (stem_direction === 1) {\n          x += 1;\n          ctx.lineTo(x, y);\n          ctx.lineTo(x + 13, y - 9);\n        } else if (stem_direction === -1) {\n          x -= 4;\n          y += 1;\n          ctx.lineTo(x, y);\n          ctx.lineTo(x + 13, y + 9);\n        }\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n    }\n  });\n\n  return GraceNote;\n}());\n\n// [VexFlow](http://vexflow.com) - Copyright (c) Mohit Muthanna 2010.\n//\n// ## Description\n//\n// This file implements `GraceNoteGroup` which is used to format and\n// render grace notes.\n\nVex.Flow.GraceNoteGroup = (function(){\n  function GraceNoteGroup(grace_notes, config) {\n    if (arguments.length > 0) this.init(grace_notes, config);\n  }\n\n  GraceNoteGroup.CATEGORY = \"gracenotegroups\";\n\n  // To enable logging for this class. Set `Vex.Flow.GraceNoteGroup.DEBUG` to `true`.\n  function L() { if (GraceNoteGroup.DEBUG) Vex.L(\"Vex.Flow.GraceNoteGroup\", arguments); }\n\n  // Arrange groups inside a `ModifierContext`\n  GraceNoteGroup.format = function(gracenote_groups, state) {\n    var gracenote_spacing = 4;\n\n    if (!gracenote_groups || gracenote_groups.length === 0) return false;\n\n    var group_list = [];\n    var hasStave = false;\n    var prev_note = null;\n    var shiftL = 0;\n\n    var i, gracenote_group, props_tmp;\n    for (i = 0; i < gracenote_groups.length; ++i) {\n      gracenote_group = gracenote_groups[i];\n      var note = gracenote_group.getNote();\n      var stave = note.getStave();\n      if (note != prev_note) {\n         // Iterate through all notes to get the displaced pixels\n         for (var n = 0; n < note.keys.length; ++n) {\n            props_tmp = note.getKeyProps()[n];\n            shiftL = (props_tmp.displaced ? note.getExtraLeftPx() : shiftL);\n          }\n          prev_note = note;\n      }\n      if (stave != null) {\n        hasStave = true;\n        group_list.push({shift: shiftL, gracenote_group: gracenote_group});\n      } else {\n        group_list.push({shift: shiftL, gracenote_group: gracenote_group });\n      }\n    }\n\n    // If first note left shift in case it is displaced\n    var group_shift = group_list[0].shift;\n    for (i = 0; i < group_list.length; ++i) {\n      gracenote_group = group_list[i].gracenote_group;\n      gracenote_group.preFormat();\n      group_shift = gracenote_group.getWidth() + gracenote_spacing;\n    }\n\n    state.left_shift += group_shift;\n    return true;\n  };\n\n  // ## Prototype Methods\n  //\n  // `GraceNoteGroup` inherits from `Modifier` and is placed inside a\n  // `ModifierContext`.\n  Vex.Inherit(GraceNoteGroup, Vex.Flow.Modifier, {\n    init: function(grace_notes, show_slur) {\n      var superclass = GraceNoteGroup.superclass;\n      superclass.init.call(this);\n\n      this.note = null;\n      this.index = null;\n      this.position = Vex.Flow.Modifier.Position.LEFT;\n      this.grace_notes = grace_notes;\n      this.width = 0;\n\n      this.preFormatted = false;\n\n      this.show_slur = show_slur;\n      this.slur = null;\n\n      this.formatter = new Vex.Flow.Formatter();\n      this.voice = new Vex.Flow.Voice({\n        num_beats: 4,\n        beat_value: 4,\n        resolution: Vex.Flow.RESOLUTION\n      }).setStrict(false);\n\n      this.voice.addTickables(this.grace_notes);\n\n      return this;\n    },\n\n    preFormat: function(){\n      if (this.preFormatted) return;\n\n      this.formatter.joinVoices([this.voice]).format([this.voice], 0);\n      this.setWidth(this.formatter.getMinTotalWidth());\n\n      this.preFormatted = true;\n    },\n\n    beamNotes: function(){\n      if (this.grace_notes.length > 1) {\n        var beam = new Vex.Flow.Beam(this.grace_notes);\n\n        beam.render_options.beam_width = 3;\n        beam.render_options.partial_beam_length = 4;\n\n        this.beam = beam;\n      }\n\n      return this;\n    },\n\n    setNote: function(note) {\n      this.note = note;\n    },\n    setWidth: function(width){\n      this.width = width;\n    },\n    getWidth: function(){\n      return this.width;\n    },\n    setXShift: function(x_shift) {\n        this.x_shift = x_shift;\n    },\n    draw: function() {\n      if (!this.context)  {\n        throw new Vex.RuntimeError(\"NoContext\",\n          \"Can't draw Grace note without a context.\");\n      }\n\n      var note = this.getNote();\n\n      L(\"Drawing grace note group for:\", note);\n\n      if (!(note && (this.index !== null))) {\n        throw new Vex.RuntimeError(\"NoAttachedNote\",\n          \"Can't draw grace note without a parent note and parent note index.\");\n      }\n\n      function alignGraceNotesWithNote(grace_notes, note) {\n        // Shift over the tick contexts of each note\n        // So that th aligned with the note\n        var tickContext = note.getTickContext();\n        var extraPx = tickContext.getExtraPx();\n        var x = tickContext.getX() - extraPx.left - extraPx.extraLeft;\n        grace_notes.forEach(function(graceNote) {\n            var tick_context = graceNote.getTickContext();\n            var x_offset = tick_context.getX();\n            graceNote.setStave(note.stave);\n            tick_context.setX(x + x_offset);\n        });\n      }\n\n      alignGraceNotesWithNote(this.grace_notes, note);\n\n      // Draw notes\n      this.grace_notes.forEach(function(graceNote) {\n        graceNote.setContext(this.context).draw();\n      }, this);\n\n      // Draw beam\n      if (this.beam) {\n        this.beam.setContext(this.context).draw();\n      }\n\n      if (this.show_slur) {\n        // Create and draw slur\n        this.slur = new Vex.Flow.StaveTie({\n          last_note: this.grace_notes[0],\n          first_note: note,\n          first_indices: [0],\n          last_indices: [0]\n        });\n\n        this.slur.render_options.cp2 = 12;\n        this.slur.setContext(this.context).draw();\n      }\n    }\n  });\n\nreturn GraceNoteGroup;\n}());\n},{}],8:[function(require,module,exports){\nvar Artist, Vex, _,\n  __slice = [].slice,\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nVex = require('vexflow');\n\n_ = require('underscore');\n\nArtist = (function() {\n  var L, formatAndRender, getFingering, getScoreArticulationParts, getStrokeParts, makeBend, makeDuration, parseBool;\n\n  Artist.DEBUG = false;\n\n  L = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (Artist.DEBUG) {\n      return typeof console !== \"undefined\" && console !== null ? console.log.apply(console, [\"(Vex.Flow.Artist)\"].concat(__slice.call(args))) : void 0;\n    }\n  };\n\n  Artist.NOLOGO = false;\n\n  function Artist(x, y, width, options) {\n    this.x = x;\n    this.y = y;\n    this.width = width;\n    this.options = {\n      font_face: \"Arial\",\n      font_size: 10,\n      font_style: null,\n      bottom_spacing: 20 + (Artist.NOLOGO ? 0 : 10),\n      tab_stave_lower_spacing: 10,\n      note_stave_lower_spacing: 0,\n      scale: 1.0\n    };\n    if (options != null) {\n      _.extend(this.options, options);\n    }\n    this.reset();\n  }\n\n  Artist.prototype.reset = function() {\n    this.tuning = new Vex.Flow.Tuning();\n    this.key_manager = new Vex.Flow.KeyManager(\"C\");\n    this.music_api = new Vex.Flow.Music();\n    this.customizations = {\n      \"font-size\": this.options.font_size,\n      \"font-face\": this.options.font_face,\n      \"font-style\": this.options.font_style,\n      \"annotation-position\": \"bottom\",\n      \"scale\": this.options.scale,\n      \"width\": this.width,\n      \"stave-distance\": 0,\n      \"space\": 0,\n      \"player\": \"false\",\n      \"tempo\": 120,\n      \"instrument\": \"acoustic_grand_piano\",\n      \"accidentals\": \"standard\",\n      \"tab-stems\": \"false\",\n      \"tab-stem-direction\": \"up\",\n      \"beam-rests\": \"true\",\n      \"beam-stemlets\": \"true\",\n      \"beam-middle-only\": \"false\",\n      \"connector-space\": 0\n    };\n    this.staves = [];\n    this.tab_articulations = [];\n    this.stave_articulations = [];\n    this.player_voices = [];\n    this.last_y = this.y;\n    this.current_duration = \"q\";\n    this.current_clef = \"treble\";\n    this.current_bends = {};\n    this.current_octave_shift = 0;\n    this.bend_start_index = null;\n    this.bend_start_strings = null;\n    this.rendered = false;\n    return this.renderer_context = null;\n  };\n\n  Artist.prototype.attachPlayer = function(player) {\n    return this.player = player;\n  };\n\n  Artist.prototype.setOptions = function(options) {\n    var k, v, valid_options;\n    L(\"setOptions: \", options);\n    valid_options = _.keys(this.customizations);\n    for (k in options) {\n      v = options[k];\n      if (__indexOf.call(valid_options, k) >= 0) {\n        this.customizations[k] = v;\n      } else {\n        throw new Vex.RERR(\"ArtistError\", \"Invalid option '\" + k + \"'\");\n      }\n    }\n    this.last_y += parseInt(this.customizations.space, 10);\n    if (this.customizations.player === \"true\") {\n      return this.last_y += 15;\n    }\n  };\n\n  Artist.prototype.getPlayerData = function() {\n    return {\n      voices: this.player_voices,\n      context: this.renderer_context,\n      scale: this.customizations.scale\n    };\n  };\n\n  parseBool = function(str) {\n    return str === \"true\";\n  };\n\n  formatAndRender = function(ctx, tab, score, text_notes, customizations, options) {\n    var align_rests, beam_config, beams, format_stave, format_voices, formatter, i, multi_voice, notes, score_stave, score_voices, stem_direction, tab_stave, tab_voices, text_stave, text_voices, voice, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;\n    if (tab != null) {\n      tab_stave = tab.stave;\n    }\n    if (score != null) {\n      score_stave = score.stave;\n    }\n    tab_voices = [];\n    score_voices = [];\n    text_voices = [];\n    beams = [];\n    format_stave = null;\n    text_stave = null;\n    beam_config = {\n      beam_rests: parseBool(customizations[\"beam-rests\"]),\n      show_stemlets: parseBool(customizations[\"beam-stemlets\"]),\n      beam_middle_only: parseBool(customizations[\"beam-middle-only\"]),\n      groups: options.beam_groups\n    };\n    if (tab != null) {\n      multi_voice = tab.voices.length > 1 ? true : false;\n      _ref = tab.voices;\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        notes = _ref[i];\n        if (_.isEmpty(notes)) {\n          continue;\n        }\n        _.each(notes, function(note) {\n          return note.setStave(tab_stave);\n        });\n        voice = new Vex.Flow.Voice(Vex.Flow.TIME4_4).setMode(Vex.Flow.Voice.Mode.SOFT);\n        voice.addTickables(notes);\n        tab_voices.push(voice);\n        if (customizations[\"tab-stems\"] === \"true\") {\n          if (multi_voice) {\n            beam_config.stem_direction = i === 0 ? 1 : -1;\n          } else {\n            beam_config.stem_direction = customizations[\"tab-stem-direction\"] === \"down\" ? -1 : 1;\n          }\n          beam_config.beam_rests = false;\n          beams = beams.concat(Vex.Flow.Beam.generateBeams(voice.getTickables(), beam_config));\n        }\n      }\n      format_stave = tab_stave;\n      text_stave = tab_stave;\n    }\n    beam_config.beam_rests = parseBool(customizations[\"beam-rests\"]);\n    if (score != null) {\n      multi_voice = score.voices.length > 1 ? true : false;\n      _ref1 = score.voices;\n      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n        notes = _ref1[i];\n        if (_.isEmpty(notes)) {\n          continue;\n        }\n        stem_direction = i === 0 ? 1 : -1;\n        _.each(notes, function(note) {\n          return note.setStave(score_stave);\n        });\n        voice = new Vex.Flow.Voice(Vex.Flow.TIME4_4).setMode(Vex.Flow.Voice.Mode.SOFT);\n        voice.addTickables(notes);\n        score_voices.push(voice);\n        if (multi_voice) {\n          beam_config.stem_direction = stem_direction;\n          beams = beams.concat(Vex.Flow.Beam.generateBeams(notes, beam_config));\n        } else {\n          beam_config.stem_direction = null;\n          beams = beams.concat(Vex.Flow.Beam.generateBeams(notes, beam_config));\n        }\n      }\n      format_stave = score_stave;\n      text_stave = score_stave;\n    }\n    for (_k = 0, _len2 = text_notes.length; _k < _len2; _k++) {\n      notes = text_notes[_k];\n      if (_.isEmpty(notes)) {\n        continue;\n      }\n      _.each(notes, function(voice) {\n        return voice.setStave(text_stave);\n      });\n      voice = new Vex.Flow.Voice(Vex.Flow.TIME4_4).setMode(Vex.Flow.Voice.Mode.SOFT);\n      voice.addTickables(notes);\n      text_voices.push(voice);\n    }\n    if (format_stave != null) {\n      format_voices = [];\n      formatter = new Vex.Flow.Formatter();\n      align_rests = false;\n      if (tab != null) {\n        if (!_.isEmpty(tab_voices)) {\n          formatter.joinVoices(tab_voices);\n        }\n        format_voices = tab_voices;\n      }\n      if (score != null) {\n        if (!_.isEmpty(score_voices)) {\n          formatter.joinVoices(score_voices);\n        }\n        format_voices = format_voices.concat(score_voices);\n        if (score_voices.length > 1) {\n          align_rests = true;\n        }\n      }\n      if (!_.isEmpty(text_notes) && !_.isEmpty(text_voices)) {\n        formatter.joinVoices(text_voices);\n        format_voices = format_voices.concat(text_voices);\n      }\n      if (!_.isEmpty(format_voices)) {\n        formatter.formatToStave(format_voices, format_stave, {\n          align_rests: align_rests\n        });\n      }\n      if (tab != null) {\n        _.each(tab_voices, function(voice) {\n          return voice.draw(ctx, tab_stave);\n        });\n      }\n      if (score != null) {\n        _.each(score_voices, function(voice) {\n          return voice.draw(ctx, score_stave);\n        });\n      }\n      _.each(beams, function(beam) {\n        return beam.setContext(ctx).draw();\n      });\n      if (!_.isEmpty(text_notes)) {\n        _.each(text_voices, function(voice) {\n          return voice.draw(ctx, text_stave);\n        });\n      }\n      if ((tab != null) && (score != null)) {\n        (new Vex.Flow.StaveConnector(score.stave, tab.stave)).setContext(ctx).draw();\n      }\n      if (score != null) {\n        return score_voices;\n      } else {\n        return tab_voices;\n      }\n    }\n  };\n\n  Artist.prototype.render = function(renderer) {\n    var LOGO, articulation, ctx, setBar, stave, voices, width, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;\n    L(\"Render: \", this.options);\n    this.closeBends();\n    renderer.resize(this.customizations.width * this.customizations.scale, (this.last_y + this.options.bottom_spacing) * this.customizations.scale);\n    ctx = renderer.getContext();\n    ctx.scale(this.customizations.scale, this.customizations.scale);\n    ctx.clear();\n    ctx.setFont(this.options.font_face, this.options.font_size, \"\");\n    this.renderer_context = ctx;\n    setBar = function(stave, notes) {\n      var last_note;\n      last_note = _.last(notes);\n      if (last_note instanceof Vex.Flow.BarNote) {\n        notes.pop();\n        return stave.setEndBarType(last_note.getType());\n      }\n    };\n    _ref = this.staves;\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      stave = _ref[_i];\n      L(\"Rendering staves.\");\n      if (stave.tab != null) {\n        setBar(stave.tab, stave.tab_notes);\n      }\n      if (stave.note != null) {\n        setBar(stave.note, stave.note_notes);\n      }\n      if (stave.tab != null) {\n        stave.tab.setContext(ctx).draw();\n      }\n      if (stave.note != null) {\n        stave.note.setContext(ctx).draw();\n      }\n      stave.tab_voices.push(stave.tab_notes);\n      stave.note_voices.push(stave.note_notes);\n      voices = formatAndRender(ctx, stave.tab != null ? {\n        stave: stave.tab,\n        voices: stave.tab_voices\n      } : null, stave.note != null ? {\n        stave: stave.note,\n        voices: stave.note_voices\n      } : null, stave.text_voices, this.customizations, {\n        beam_groups: stave.beam_groups\n      });\n      this.player_voices.push(voices);\n    }\n    L(\"Rendering tab articulations.\");\n    _ref1 = this.tab_articulations;\n    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n      articulation = _ref1[_j];\n      articulation.setContext(ctx).draw();\n    }\n    L(\"Rendering note articulations.\");\n    _ref2 = this.stave_articulations;\n    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n      articulation = _ref2[_k];\n      articulation.setContext(ctx).draw();\n    }\n    if (this.player != null) {\n      if (this.customizations.player === \"true\") {\n        this.player.setTempo(parseInt(this.customizations.tempo, 10));\n        this.player.setInstrument(this.customizations.instrument);\n        this.player.render();\n      } else {\n        this.player.removeControls();\n      }\n    }\n    this.rendered = true;\n    if (!Artist.NOLOGO) {\n      LOGO = \"\"; //sets logo text at bottom of staff - default vexflow.com\n      width = ctx.measureText(LOGO).width;\n      ctx.save();\n      ctx.setFont(\"Times\", 10, \"italic\");\n      ctx.fillText(LOGO, (this.customizations.width - width) / 2, this.last_y + 25);\n      return ctx.restore();\n    }\n  };\n\n  Artist.prototype.isRendered = function() {\n    return this.rendered;\n  };\n\n  Artist.prototype.draw = function(renderer) {\n    return this.render(renderer);\n  };\n\n  Artist.prototype.getNoteForFret = function(fret, string) {\n    var accidental, new_note, new_octave, new_root, old_root, selected_note, spec, spec_props;\n    spec = this.tuning.getNoteForFret(fret, string);\n    spec_props = Vex.Flow.keyProperties(spec);\n    selected_note = this.key_manager.selectNote(spec_props.key);\n    accidental = null;\n    switch (this.customizations.accidentals) {\n      case \"standard\":\n        if (selected_note.change) {\n          accidental = selected_note.accidental != null ? selected_note.accidental : \"n\";\n        }\n        break;\n      case \"cautionary\":\n        if (selected_note.change) {\n          accidental = selected_note.accidental != null ? selected_note.accidental : \"n\";\n        } else {\n          accidental = selected_note.accidental != null ? selected_note.accidental + \"_c\" : void 0;\n        }\n        break;\n      default:\n        throw new Vex.RERR(\"ArtistError\", \"Invalid value for option 'accidentals': \" + this.customizations.accidentals);\n    }\n    new_note = selected_note.note;\n    new_octave = spec_props.octave;\n    old_root = this.music_api.getNoteParts(spec_props.key).root;\n    new_root = this.music_api.getNoteParts(selected_note.note).root;\n    if (new_root === \"b\" && old_root === \"c\") {\n      new_octave--;\n    } else if (new_root === \"c\" && old_root === \"b\") {\n      new_octave++;\n    }\n    return [new_note, new_octave, accidental];\n  };\n\n  Artist.prototype.getNoteForABC = function(abc, string) {\n    var accidental, key, octave;\n    key = abc.key;\n    octave = string;\n    accidental = abc.accidental;\n    if (abc.accidental_type != null) {\n      accidental += \"_\" + abc.accidental_type;\n    }\n    return [key, octave, accidental];\n  };\n\n  Artist.prototype.addStaveNote = function(note_params) {\n    var acc, index, new_accidental, params, parts, stave_note, stave_notes, _i, _len, _ref;\n    params = {\n      is_rest: false,\n      play_note: null\n    };\n    _.extend(params, note_params);\n    stave_notes = _.last(this.staves).note_notes;\n    stave_note = new Vex.Flow.StaveNote({\n      keys: params.spec,\n      duration: this.current_duration + (params.is_rest ? \"r\" : \"\"),\n      clef: params.is_rest ? \"treble\" : this.current_clef,\n      auto_stem: params.is_rest ? false : true\n    });\n    _ref = params.accidentals;\n    for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\n      acc = _ref[index];\n      if (acc != null) {\n        parts = acc.split(\"_\");\n        new_accidental = new Vex.Flow.Accidental(parts[0]);\n        if (parts.length > 1 && parts[1] === \"c\") {\n          new_accidental.setAsCautionary();\n        }\n        stave_note.addAccidental(index, new_accidental);\n      }\n    }\n    if (this.current_duration[this.current_duration.length - 1] === \"d\") {\n      stave_note.addDotToAll();\n    }\n    if (params.play_note != null) {\n      stave_note.setPlayNote(params.play_note);\n    }\n    return stave_notes.push(stave_note);\n  };\n\n  Artist.prototype.addTabNote = function(spec, play_note) {\n    var new_tab_note, tab_notes;\n    if (play_note == null) {\n      play_note = null;\n    }\n    tab_notes = _.last(this.staves).tab_notes;\n    new_tab_note = new Vex.Flow.TabNote({\n      positions: spec,\n      duration: this.current_duration\n    }, this.customizations[\"tab-stems\"] === \"true\");\n    if (play_note != null) {\n      new_tab_note.setPlayNote(play_note);\n    }\n    tab_notes.push(new_tab_note);\n    if (this.current_duration[this.current_duration.length - 1] === \"d\") {\n      return new_tab_note.addDot();\n    }\n  };\n\n  makeDuration = function(time, dot) {\n    return time + (dot ? \"d\" : \"\");\n  };\n\n  Artist.prototype.setDuration = function(time, dot) {\n    var t;\n    if (dot == null) {\n      dot = false;\n    }\n    t = time.split(/\\s+/);\n    L(\"setDuration: \", t[0], dot);\n    return this.current_duration = makeDuration(t[0], dot);\n  };\n\n  Artist.prototype.addBar = function(type) {\n    var TYPE, bar_note, stave;\n    L(\"addBar: \", type);\n    this.closeBends();\n    this.key_manager.reset();\n    stave = _.last(this.staves);\n    TYPE = Vex.Flow.Barline.type;\n    type = (function() {\n      switch (type) {\n        case \"single\":\n          return TYPE.SINGLE;\n        case \"double\":\n          return TYPE.DOUBLE;\n        case \"end\":\n          return TYPE.END;\n        case \"repeat-begin\":\n          return TYPE.REPEAT_BEGIN;\n        case \"repeat-end\":\n          return TYPE.REPEAT_END;\n        case \"repeat-both\":\n          return TYPE.REPEAT_BOTH;\n        default:\n          return TYPE.SINGLE;\n      }\n    })();\n    bar_note = new Vex.Flow.BarNote().setType(type);\n    stave.tab_notes.push(bar_note);\n    if (stave.note != null) {\n      return stave.note_notes.push(bar_note);\n    }\n  };\n\n  makeBend = function(from_fret, to_fret) {\n    var direction, text;\n    direction = Vex.Flow.Bend.UP;\n    text = \"\";\n    if (parseInt(from_fret, 10) > parseInt(to_fret, 10)) {\n      direction = Vex.Flow.Bend.DOWN;\n    } else {\n      text = (function() {\n        switch (Math.abs(to_fret - from_fret)) {\n          case 1:\n            return \"1/2\";\n          case 2:\n            return \"Full\";\n          case 3:\n            return \"1 1/2\";\n          default:\n            return \"Bend to \" + to_fret;\n        }\n      })();\n    }\n    return {\n      type: direction,\n      text: text\n    };\n  };\n\n  Artist.prototype.openBends = function(first_note, last_note, first_indices, last_indices) {\n    var first_frets, from_fret, i, index, last_frets, last_index, start_indices, start_note, tab_notes, to_fret, _base, _i, _len, _results;\n    L(\"openBends\", first_note, last_note, first_indices, last_indices);\n    tab_notes = _.last(this.staves).tab_notes;\n    start_note = first_note;\n    start_indices = first_indices;\n    if (_.isEmpty(this.current_bends)) {\n      this.bend_start_index = tab_notes.length - 2;\n      this.bend_start_strings = first_indices;\n    } else {\n      start_note = tab_notes[this.bend_start_index];\n      start_indices = this.bend_start_strings;\n    }\n    first_frets = start_note.getPositions();\n    last_frets = last_note.getPositions();\n    _results = [];\n    for (i = _i = 0, _len = start_indices.length; _i < _len; i = ++_i) {\n      index = start_indices[i];\n      last_index = last_indices[i];\n      from_fret = first_note.getPositions()[first_indices[i]];\n      to_fret = last_frets[last_index];\n      if ((_base = this.current_bends)[index] == null) {\n        _base[index] = [];\n      }\n      _results.push(this.current_bends[index].push(makeBend(from_fret.fret, to_fret.fret)));\n    }\n    return _results;\n  };\n\n  Artist.prototype.closeBends = function(offset) {\n    var bend, k, phrase, tab_note, tab_notes, v, _i, _j, _len, _len1, _ref, _ref1;\n    if (offset == null) {\n      offset = 1;\n    }\n    if (this.bend_start_index == null) {\n      return;\n    }\n    L(\"closeBends(\" + offset + \")\");\n    tab_notes = _.last(this.staves).tab_notes;\n    _ref = this.current_bends;\n    for (k in _ref) {\n      v = _ref[k];\n      phrase = [];\n      for (_i = 0, _len = v.length; _i < _len; _i++) {\n        bend = v[_i];\n        phrase.push(bend);\n      }\n      tab_notes[this.bend_start_index].addModifier(new Vex.Flow.Bend(null, null, phrase), k);\n    }\n    _ref1 = tab_notes.slice(this.bend_start_index + 1, +((tab_notes.length - 2) + offset) + 1 || 9e9);\n    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n      tab_note = _ref1[_j];\n      tab_note.setGhost(true);\n    }\n    this.current_bends = {};\n    return this.bend_start_index = null;\n  };\n\n  Artist.prototype.makeTuplets = function(tuplets, notes) {\n    var modifier, stave_notes, tab_modifier, tab_notes;\n    L(\"makeTuplets\", tuplets, notes);\n    if (notes == null) {\n      notes = tuplets;\n    }\n    if (!_.last(this.staves).note) {\n      return;\n    }\n    stave_notes = _.last(this.staves).note_notes;\n    tab_notes = _.last(this.staves).tab_notes;\n    if (stave_notes.length < notes) {\n      throw new Vex.RERR(\"ArtistError\", \"Not enough notes for tuplet\");\n    }\n    modifier = new Vex.Flow.Tuplet(stave_notes.slice(stave_notes.length - notes), {\n      num_notes: tuplets\n    });\n    this.stave_articulations.push(modifier);\n    tab_modifier = new Vex.Flow.Tuplet(tab_notes.slice(tab_notes.length - notes), {\n      num_notes: tuplets\n    });\n    if (this.customizations[\"tab-stems\"] === \"true\") {\n      return this.tab_articulations.push(tab_modifier);\n    }\n  };\n\n  getFingering = function(text) {\n    return text.match(/^\\.fingering\\/([^.]+)\\./);\n  };\n\n  Artist.prototype.makeFingering = function(text) {\n    var POS, badFingering, finger, fingering, fingers, modifier, note_number, number, p, parts, pieces, position, _i, _len;\n    parts = getFingering(text);\n    POS = Vex.Flow.Modifier.Position;\n    fingers = [];\n    fingering = [];\n    if (parts != null) {\n      fingers = (function() {\n        var _i, _len, _ref, _results;\n        _ref = parts[1].split(/-/);\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          p = _ref[_i];\n          _results.push(p.trim());\n        }\n        return _results;\n      })();\n    } else {\n      return null;\n    }\n    badFingering = function() {\n      return new Vex.RERR(\"ArtistError\", \"Bad fingering: \" + parts[1]);\n    };\n    for (_i = 0, _len = fingers.length; _i < _len; _i++) {\n      finger = fingers[_i];\n      pieces = finger.match(/(\\d+):([ablr]):([fs]):([^-.]+)/);\n      if (pieces == null) {\n        throw badFingering();\n      }\n      note_number = parseInt(pieces[1], 10) - 1;\n      position = POS.RIGHT;\n      switch (pieces[2]) {\n        case \"l\":\n          position = POS.LEFT;\n          break;\n        case \"r\":\n          position = POS.RIGHT;\n          break;\n        case \"a\":\n          position = POS.ABOVE;\n          break;\n        case \"b\":\n          position = POS.BELOW;\n      }\n      modifier = null;\n      number = pieces[4];\n      switch (pieces[3]) {\n        case \"s\":\n          modifier = new Vex.Flow.StringNumber(number).setPosition(position);\n          break;\n        case \"f\":\n          modifier = new Vex.Flow.FretHandFinger(number).setPosition(position);\n      }\n      fingering.push({\n        num: note_number,\n        modifier: modifier\n      });\n    }\n    return fingering;\n  };\n\n  getStrokeParts = function(text) {\n    return text.match(/^\\.stroke\\/([^.]+)\\./);\n  };\n\n  Artist.prototype.makeStroke = function(text) {\n    var TYPE, parts, type;\n    parts = getStrokeParts(text);\n    TYPE = Vex.Flow.Stroke.Type;\n    type = null;\n    if (parts != null) {\n      switch (parts[1]) {\n        case \"bu\":\n          type = TYPE.BRUSH_UP;\n          break;\n        case \"bd\":\n          type = TYPE.BRUSH_DOWN;\n          break;\n        case \"ru\":\n          type = TYPE.ROLL_UP;\n          break;\n        case \"rd\":\n          type = TYPE.ROLL_DOWN;\n          break;\n        case \"qu\":\n          type = TYPE.RASQUEDO_UP;\n          break;\n        case \"qd\":\n          type = TYPE.RASQUEDO_DOWN;\n          break;\n        default:\n          throw new Vex.RERR(\"ArtistError\", \"Invalid stroke type: \" + parts[1]);\n      }\n      return new Vex.Flow.Stroke(type);\n    } else {\n      return null;\n    }\n  };\n\n  getScoreArticulationParts = function(text) {\n    return text.match(/^\\.(a[^\\/]*)\\/(t|b)[^.]*\\./);\n  };\n\n  Artist.prototype.makeScoreArticulation = function(text) {\n    var POSTYPE, parts, pos, position, type;\n    parts = getScoreArticulationParts(text);\n    if (parts != null) {\n      type = parts[1];\n      position = parts[2];\n      POSTYPE = Vex.Flow.Modifier.Position;\n      pos = position === \"t\" ? POSTYPE.ABOVE : POSTYPE.BELOW;\n      return new Vex.Flow.Articulation(type).setPosition(pos);\n    } else {\n      return null;\n    }\n  };\n\n  Artist.prototype.makeAnnotation = function(text) {\n    var VJUST, aposition, default_vjust, font_face, font_size, font_style, just, makeIt, parts;\n    font_face = this.customizations[\"font-face\"];\n    font_size = this.customizations[\"font-size\"];\n    font_style = this.customizations[\"font-style\"];\n    aposition = this.customizations[\"annotation-position\"];\n    VJUST = Vex.Flow.Annotation.VerticalJustify;\n    default_vjust = aposition === \"top\" ? VJUST.TOP : VJUST.BOTTOM;\n    makeIt = function(text, just) {\n      if (just == null) {\n        just = default_vjust;\n      }\n      return new Vex.Flow.Annotation(text).setFont(font_face, font_size, font_style).setVerticalJustification(just);\n    };\n    parts = text.match(/^\\.([^-]*)-([^-]*)-([^.]*)\\.(.*)/);\n    if (parts != null) {\n      font_face = parts[1];\n      font_size = parts[2];\n      font_style = parts[3];\n      text = parts[4];\n      if (text) {\n        return makeIt(text);\n      } else {\n        return null;\n      }\n    }\n    parts = text.match(/^\\.([^.]*)\\.(.*)/);\n    if (parts != null) {\n      just = default_vjust;\n      text = parts[2];\n      switch (parts[1]) {\n        case \"big\":\n          font_style = \"bold\";\n          font_size = \"14\";\n          break;\n        case \"italic\":\n        case \"italics\":\n          font_face = \"Times\";\n          font_style = \"italic\";\n          break;\n        case \"medium\":\n          font_size = \"12\";\n          break;\n        case \"top\":\n          just = VJUST.TOP;\n          this.customizations[\"annotation-position\"] = \"top\";\n          break;\n        case \"bottom\":\n          just = VJUST.BOTTOM;\n          this.customizations[\"annotation-position\"] = \"bottom\";\n      }\n      if (text) {\n        return makeIt(text, just);\n      } else {\n        return null;\n      }\n    }\n    return makeIt(text);\n  };\n\n  Artist.prototype.addAnnotations = function(annotations) {\n    var annotation, e, fingering, fingerings, i, note, score_articulation, stave, stave_notes, stroke, tab_note, tab_notes, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n    stave = _.last(this.staves);\n    stave_notes = stave.note_notes;\n    tab_notes = stave.tab_notes;\n    if (annotations.length > tab_notes.length) {\n      throw new Vex.RERR(\"ArtistError\", \"More annotations than note elements\");\n    }\n    if (stave.tab) {\n      _ref = tab_notes.slice(tab_notes.length - annotations.length);\n      for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\n        tab_note = _ref[i];\n        if (getScoreArticulationParts(annotations[i])) {\n          score_articulation = this.makeScoreArticulation(annotations[i]);\n          tab_note.addModifier(score_articulation, 0);\n        } else if (getStrokeParts(annotations[i])) {\n          stroke = this.makeStroke(annotations[i]);\n          tab_note.addModifier(stroke, 0);\n        } else {\n          annotation = this.makeAnnotation(annotations[i]);\n          if (annotation) {\n            tab_note.addModifier(this.makeAnnotation(annotations[i]), 0);\n          }\n        }\n      }\n    } else {\n      _ref1 = stave_notes.slice(stave_notes.length - annotations.length);\n      for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n        note = _ref1[i];\n        if (!getScoreArticulationParts(annotations[i])) {\n          annotation = this.makeAnnotation(annotations[i]);\n          if (annotation) {\n            note.addAnnotation(0, this.makeAnnotation(annotations[i]));\n          }\n        }\n      }\n    }\n    if (stave.note) {\n      _ref2 = stave_notes.slice(stave_notes.length - annotations.length);\n      _results = [];\n      for (i = _k = 0, _len2 = _ref2.length; _k < _len2; i = ++_k) {\n        note = _ref2[i];\n        score_articulation = this.makeScoreArticulation(annotations[i]);\n        if (score_articulation != null) {\n          note.addArticulation(0, score_articulation);\n        }\n        stroke = this.makeStroke(annotations[i]);\n        if (stroke != null) {\n          note.addStroke(0, stroke);\n        }\n        fingerings = this.makeFingering(annotations[i]);\n        if (fingerings != null) {\n          try {\n            _results.push((function() {\n              var _l, _len3, _results1;\n              _results1 = [];\n              for (_l = 0, _len3 = fingerings.length; _l < _len3; _l++) {\n                fingering = fingerings[_l];\n                _results1.push(note.addModifier(fingering.num, fingering.modifier));\n              }\n              return _results1;\n            })());\n          } catch (_error) {\n            e = _error;\n            throw new Vex.RERR(\"ArtistError\", \"Bad note number in fingering: \" + annotations[i]);\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    }\n  };\n\n  Artist.prototype.addTabArticulation = function(type, first_note, last_note, first_indices, last_indices) {\n    var articulation;\n    L(\"addTabArticulations: \", type, first_note, last_note, first_indices, last_indices);\n    if (type === \"t\") {\n      last_note.addModifier(new Vex.Flow.Annotation(\"T\").setVerticalJustification(Vex.Flow.Annotation.VerticalJustify.BOTTOM));\n    }\n    if (_.isEmpty(first_indices) && _.isEmpty(last_indices)) {\n      return;\n    }\n    articulation = null;\n    if (type === \"s\") {\n      articulation = new Vex.Flow.TabSlide({\n        first_note: first_note,\n        last_note: last_note,\n        first_indices: first_indices,\n        last_indices: last_indices\n      });\n    }\n    if (type === \"h\" || type === \"p\") {\n      articulation = new Vex.Flow.TabTie({\n        first_note: first_note,\n        last_note: last_note,\n        first_indices: first_indices,\n        last_indices: last_indices\n      }, type.toUpperCase());\n    }\n    if (type === \"T\" || type === \"t\") {\n      articulation = new Vex.Flow.TabTie({\n        first_note: first_note,\n        last_note: last_note,\n        first_indices: first_indices,\n        last_indices: last_indices\n      }, \" \");\n    }\n    if (type === \"b\") {\n      this.openBends(first_note, last_note, first_indices, last_indices);\n    }\n    if (articulation != null) {\n      return this.tab_articulations.push(articulation);\n    }\n  };\n\n  Artist.prototype.addStaveArticulation = function(type, first_note, last_note, first_indices, last_indices) {\n    var articulation;\n    L(\"addStaveArticulations: \", type, first_note, last_note, first_indices, last_indices);\n    articulation = null;\n    if (type === \"b\" || type === \"s\" || type === \"h\" || type === \"p\" || type === \"t\" || type === \"T\") {\n      articulation = new Vex.Flow.StaveTie({\n        first_note: first_note,\n        last_note: last_note,\n        first_indices: first_indices,\n        last_indices: last_indices\n      });\n    }\n    if (articulation != null) {\n      return this.stave_articulations.push(articulation);\n    }\n  };\n\n  Artist.prototype.getPreviousNoteIndex = function() {\n    var index, note, tab_notes;\n    tab_notes = _.last(this.staves).tab_notes;\n    index = 2;\n    while (index <= tab_notes.length) {\n      note = tab_notes[tab_notes.length - index];\n      if (note instanceof Vex.Flow.TabNote) {\n        return tab_notes.length - index;\n      }\n      index++;\n    }\n    return -1;\n  };\n\n  Artist.prototype.addDecorator = function(decorator) {\n    var modifier, score_modifier, score_notes, stave, tab_notes, _ref;\n    L(\"addDecorator: \", decorator);\n    if (decorator == null) {\n      return;\n    }\n    stave = _.last(this.staves);\n    tab_notes = stave.tab_notes;\n    score_notes = stave.note_notes;\n    modifier = null;\n    score_modifier = null;\n    if (decorator === \"v\") {\n      modifier = new Vex.Flow.Vibrato();\n    }\n    if (decorator === \"V\") {\n      modifier = new Vex.Flow.Vibrato().setHarsh(true);\n    }\n    if (decorator === \"u\") {\n      modifier = new Vex.Flow.Articulation(\"a|\").setPosition(Vex.Flow.Modifier.Position.BOTTOM);\n      score_modifier = new Vex.Flow.Articulation(\"a|\").setPosition(Vex.Flow.Modifier.Position.BOTTOM);\n    }\n    if (decorator === \"d\") {\n      modifier = new Vex.Flow.Articulation(\"am\").setPosition(Vex.Flow.Modifier.Position.BOTTOM);\n      score_modifier = new Vex.Flow.Articulation(\"am\").setPosition(Vex.Flow.Modifier.Position.BOTTOM);\n    }\n    if (modifier != null) {\n      _.last(tab_notes).addModifier(modifier, 0);\n    }\n    if (score_modifier != null) {\n      return (_ref = _.last(score_notes)) != null ? _ref.addArticulation(0, score_modifier) : void 0;\n    }\n  };\n\n  Artist.prototype.addArticulations = function(articulations) {\n    var art, current_indices, current_tab_note, has_bends, i, indices, n, pos, prev_index, prev_indices, prev_tab_note, stave, stave_notes, tab_notes, this_strings, valid_articulation, valid_strings, _i, _len, _ref;\n    L(\"addArticulations: \", articulations);\n    stave = _.last(this.staves);\n    tab_notes = stave.tab_notes;\n    stave_notes = stave.note_notes;\n    if (_.isEmpty(tab_notes) || _.isEmpty(articulations)) {\n      this.closeBends(0);\n      return;\n    }\n    current_tab_note = _.last(tab_notes);\n    has_bends = false;\n    _ref = [\"b\", \"s\", \"h\", \"p\", \"t\", \"T\", \"v\", \"V\"];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      valid_articulation = _ref[_i];\n      indices = (function() {\n        var _j, _len1, _results;\n        _results = [];\n        for (i = _j = 0, _len1 = articulations.length; _j < _len1; i = ++_j) {\n          art = articulations[i];\n          if ((art != null) && art === valid_articulation) {\n            _results.push(i);\n          }\n        }\n        return _results;\n      })();\n      if (_.isEmpty(indices)) {\n        continue;\n      }\n      if (valid_articulation === \"b\") {\n        has_bends = true;\n      }\n      prev_index = this.getPreviousNoteIndex();\n      if (prev_index === -1) {\n        prev_tab_note = null;\n        prev_indices = null;\n      } else {\n        prev_tab_note = tab_notes[prev_index];\n        this_strings = (function() {\n          var _j, _len1, _ref1, _results;\n          _ref1 = current_tab_note.getPositions();\n          _results = [];\n          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n            n = _ref1[i];\n            if (__indexOf.call(indices, i) >= 0) {\n              _results.push(n.str);\n            }\n          }\n          return _results;\n        })();\n        valid_strings = (function() {\n          var _j, _len1, _ref1, _ref2, _results;\n          _ref1 = prev_tab_note.getPositions();\n          _results = [];\n          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n            pos = _ref1[i];\n            if (_ref2 = pos.str, __indexOf.call(this_strings, _ref2) >= 0) {\n              _results.push(pos.str);\n            }\n          }\n          return _results;\n        })();\n        prev_indices = (function() {\n          var _j, _len1, _ref1, _ref2, _results;\n          _ref1 = prev_tab_note.getPositions();\n          _results = [];\n          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n            n = _ref1[i];\n            if (_ref2 = n.str, __indexOf.call(valid_strings, _ref2) >= 0) {\n              _results.push(i);\n            }\n          }\n          return _results;\n        })();\n        current_indices = (function() {\n          var _j, _len1, _ref1, _ref2, _results;\n          _ref1 = current_tab_note.getPositions();\n          _results = [];\n          for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\n            n = _ref1[i];\n            if (_ref2 = n.str, __indexOf.call(valid_strings, _ref2) >= 0) {\n              _results.push(i);\n            }\n          }\n          return _results;\n        })();\n      }\n      if (stave.tab != null) {\n        this.addTabArticulation(valid_articulation, prev_tab_note, current_tab_note, prev_indices, current_indices);\n      }\n      if (stave.note != null) {\n        this.addStaveArticulation(valid_articulation, stave_notes[prev_index], _.last(stave_notes), prev_indices, current_indices);\n      }\n    }\n    if (!has_bends) {\n      return this.closeBends(0);\n    }\n  };\n\n  Artist.prototype.addRest = function(params) {\n    var position, tab_note, tab_notes;\n    L(\"addRest: \", params);\n    this.closeBends();\n    if (params[\"position\"] === 0) {\n      this.addStaveNote({\n        spec: [\"r/4\"],\n        accidentals: [],\n        is_rest: true\n      });\n    } else {\n      position = this.tuning.getNoteForFret((parseInt(params[\"position\"], 10) + 5) * 2, 6);\n      this.addStaveNote({\n        spec: [position],\n        accidentals: [],\n        is_rest: true\n      });\n    }\n    tab_notes = _.last(this.staves).tab_notes;\n    if (this.customizations[\"tab-stems\"] === \"true\") {\n      tab_note = new Vex.Flow.StaveNote({\n        keys: [position || \"r/4\"],\n        duration: this.current_duration + \"r\",\n        clef: \"treble\",\n        auto_stem: false\n      });\n      if (this.current_duration[this.current_duration.length - 1] === \"d\") {\n        tab_note.addDot(0);\n      }\n      return tab_notes.push(tab_note);\n    } else {\n      return tab_notes.push(new Vex.Flow.GhostNote(this.current_duration));\n    }\n  };\n\n  Artist.prototype.addChord = function(chord, chord_articulation, chord_decorator) {\n    var acc, accidental, accidentals, art, articulations, current_duration, current_position, current_string, decorators, durations, i, new_note, new_octave, note, num, num_notes, octave, play_note, play_notes, play_octave, saved_duration, spec, specs, stave, tab_specs, _i, _j, _k, _len, _len1, _ref, _ref1, _ref2;\n    if (_.isEmpty(chord)) {\n      return;\n    }\n    L(\"addChord: \", chord);\n    stave = _.last(this.staves);\n    specs = [];\n    play_notes = [];\n    accidentals = [];\n    articulations = [];\n    decorators = [];\n    tab_specs = [];\n    durations = [];\n    num_notes = 0;\n    current_string = _.first(chord).string;\n    current_position = 0;\n    for (_i = 0, _len = chord.length; _i < _len; _i++) {\n      note = chord[_i];\n      num_notes++;\n      if ((note.abc != null) || note.string !== current_string) {\n        current_position = 0;\n        current_string = note.string;\n      }\n      if (specs[current_position] == null) {\n        specs[current_position] = [];\n        play_notes[current_position] = [];\n        accidentals[current_position] = [];\n        tab_specs[current_position] = [];\n        articulations[current_position] = [];\n        decorators[current_position] = [];\n      }\n      _ref = [null, null, null], new_note = _ref[0], new_octave = _ref[1], accidental = _ref[2];\n      play_note = null;\n      if (note.abc != null) {\n        octave = note.octave != null ? note.octave : note.string;\n        _ref1 = this.getNoteForABC(note.abc, octave), new_note = _ref1[0], new_octave = _ref1[1], accidental = _ref1[2];\n        if (accidental != null) {\n          acc = accidental.split(\"_\")[0];\n        } else {\n          acc = \"\";\n        }\n        play_note = \"\" + new_note + acc;\n        if (note.fret == null) {\n          note.fret = 'X';\n        }\n      } else if (note.fret != null) {\n        _ref2 = this.getNoteForFret(note.fret, note.string), new_note = _ref2[0], new_octave = _ref2[1], accidental = _ref2[2];\n        play_note = this.tuning.getNoteForFret(note.fret, note.string).split(\"/\")[0];\n      } else {\n        throw new Vex.RERR(\"ArtistError\", \"No note specified\");\n      }\n      play_octave = parseInt(new_octave, 10) + this.current_octave_shift;\n      current_duration = note.time != null ? {\n        time: note.time,\n        dot: note.dot\n      } : null;\n      specs[current_position].push(\"\" + new_note + \"/\" + new_octave);\n      play_notes[current_position].push(\"\" + play_note + \"/\" + play_octave);\n      accidentals[current_position].push(accidental);\n      tab_specs[current_position].push({\n        fret: note.fret,\n        str: note.string\n      });\n      if (note.articulation != null) {\n        articulations[current_position].push(note.articulation);\n      }\n      durations[current_position] = current_duration;\n      if (note.decorator != null) {\n        decorators[current_position] = note.decorator;\n      }\n      current_position++;\n    }\n    for (i = _j = 0, _len1 = specs.length; _j < _len1; i = ++_j) {\n      spec = specs[i];\n      saved_duration = this.current_duration;\n      if (durations[i] != null) {\n        this.setDuration(durations[i].time, durations[i].dot);\n      }\n      this.addTabNote(tab_specs[i], play_notes[i]);\n      if (stave.note != null) {\n        this.addStaveNote({\n          spec: spec,\n          accidentals: accidentals[i],\n          play_note: play_notes[i]\n        });\n      }\n      this.addArticulations(articulations[i]);\n      if (decorators[i] != null) {\n        this.addDecorator(decorators[i]);\n      }\n    }\n    if (chord_articulation != null) {\n      art = [];\n      for (num = _k = 1; 1 <= num_notes ? _k <= num_notes : _k >= num_notes; num = 1 <= num_notes ? ++_k : --_k) {\n        art.push(chord_articulation);\n      }\n      this.addArticulations(art);\n    }\n    if (chord_decorator != null) {\n      return this.addDecorator(chord_decorator);\n    }\n  };\n\n  Artist.prototype.addNote = function(note) {\n    return this.addChord([note]);\n  };\n\n  Artist.prototype.addTextVoice = function() {\n    return _.last(this.staves).text_voices.push([]);\n  };\n\n  Artist.prototype.setTextFont = function(font) {\n    var parts;\n    if (font != null) {\n      parts = font.match(/([^-]*)-([^-]*)-([^.]*)/);\n      if (parts != null) {\n        this.customizations[\"font-face\"] = parts[1];\n        this.customizations[\"font-size\"] = parseInt(parts[2], 10);\n        return this.customizations[\"font-style\"] = parts[3];\n      }\n    }\n  };\n\n  Artist.prototype.addTextNote = function(text, position, justification, smooth, ignore_ticks) {\n    var duration, font_face, font_size, font_style, just, note, struct, voices;\n    if (position == null) {\n      position = 0;\n    }\n    if (justification == null) {\n      justification = \"center\";\n    }\n    if (smooth == null) {\n      smooth = true;\n    }\n    if (ignore_ticks == null) {\n      ignore_ticks = false;\n    }\n    voices = _.last(this.staves).text_voices;\n    if (_.isEmpty(voices)) {\n      throw new Vex.RERR(\"ArtistError\", \"Can't add text note without text voice\");\n    }\n    font_face = this.customizations[\"font-face\"];\n    font_size = this.customizations[\"font-size\"];\n    font_style = this.customizations[\"font-style\"];\n    just = (function() {\n      switch (justification) {\n        case \"center\":\n          return Vex.Flow.TextNote.Justification.CENTER;\n        case \"left\":\n          return Vex.Flow.TextNote.Justification.LEFT;\n        case \"right\":\n          return Vex.Flow.TextNote.Justification.RIGHT;\n        default:\n          return Vex.Flow.TextNote.Justification.CENTER;\n      }\n    })();\n    duration = ignore_ticks ? \"b\" : this.current_duration;\n    struct = {\n      text: text,\n      duration: duration,\n      smooth: smooth,\n      ignore_ticks: ignore_ticks,\n      font: {\n        family: font_face,\n        size: font_size,\n        weight: font_style\n      }\n    };\n    if (text[0] === \"#\") {\n      struct.glyph = text.slice(1);\n    }\n    note = new Vex.Flow.TextNote(struct).setLine(position).setJustification(just);\n    return _.last(voices).push(note);\n  };\n\n  Artist.prototype.addVoice = function(options) {\n    var stave;\n    this.closeBends();\n    stave = _.last(this.staves);\n    if (stave == null) {\n      return this.addStave(options);\n    }\n    if (!_.isEmpty(stave.tab_notes)) {\n      stave.tab_voices.push(stave.tab_notes);\n      stave.tab_notes = [];\n    }\n    if (!_.isEmpty(stave.note_notes)) {\n      stave.note_voices.push(stave.note_notes);\n      return stave.note_notes = [];\n    }\n  };\n\n  Artist.prototype.addStave = function(element, options) {\n    var beam_groups, note_stave, opts, start_x, tab_stave, tabstave_start_x;\n    opts = {\n      tuning: \"standard\",\n      clef: \"treble\",\n      key: \"C\",\n      notation: element === \"tabstave\" ? \"false\" : \"true\",\n      tablature: element === \"stave\" ? \"false\" : \"true\",\n      strings: 6\n    };\n    _.extend(opts, options);\n    L(\"addStave: \", element, opts);\n    tab_stave = null;\n    note_stave = null;\n    start_x = this.x + this.customizations[\"connector-space\"];\n    tabstave_start_x = 40;\n    if (opts.notation === \"true\") {\n      note_stave = new Vex.Flow.Stave(start_x, this.last_y, this.customizations.width - 20);\n      if (opts.clef !== \"none\") {\n        note_stave.addClef(opts.clef);\n      }\n      note_stave.addKeySignature(opts.key);\n      if (opts.time != null) {\n        note_stave.addTimeSignature(opts.time);\n      }\n      this.last_y += note_stave.getHeight() + this.options.note_stave_lower_spacing + parseInt(this.customizations[\"stave-distance\"], 10);\n      tabstave_start_x = note_stave.getNoteStartX();\n      this.current_clef = opts.clef === \"none\" ? \"treble\" : opts.clef;\n    }\n    if (opts.tablature === \"true\") {\n      tab_stave = new Vex.Flow.TabStave(start_x, this.last_y, this.customizations.width - 20).setNumLines(opts.strings);\n      if (opts.clef !== \"none\") {\n        tab_stave.addTabGlyph();\n      }\n      tab_stave.setNoteStartX(tabstave_start_x);\n      this.last_y += tab_stave.getHeight() + this.options.tab_stave_lower_spacing;\n    }\n    this.closeBends();\n    beam_groups = Vex.Flow.Beam.getDefaultBeamGroups(opts.time);\n    this.staves.push({\n      tab: tab_stave,\n      note: note_stave,\n      tab_voices: [],\n      note_voices: [],\n      tab_notes: [],\n      note_notes: [],\n      text_voices: [],\n      beam_groups: beam_groups\n    });\n    this.tuning.setTuning(opts.tuning);\n    this.key_manager.setKey(opts.key);\n  };\n\n  Artist.prototype.runCommand = function(line, _l, _c) {\n    var words;\n    if (_l == null) {\n      _l = 0;\n    }\n    if (_c == null) {\n      _c = 0;\n    }\n    L(\"runCommand: \", line);\n    words = line.split(/\\s+/);\n    switch (words[0]) {\n      case \"octave-shift\":\n        this.current_octave_shift = parseInt(words[1], 10);\n        return L(\"Octave shift: \", this.current_octave_shift);\n      default:\n        throw new Vex.RERR(\"ArtistError\", \"Invalid command '\" + words[0] + \"' at line \" + _l + \" column \" + _c);\n    }\n  };\n\n  return Artist;\n\n})();\n\nmodule.exports = Artist;\n\n\n\n},{\"underscore\":6,\"vexflow\":7}],9:[function(require,module,exports){\n/**\n * VexFlow TabDiv\n * Copyright Mohit Muthanna 2010 <mohit@muthanna.com>\n */\n\n$ = require('jquery')\nVex = require('vexflow')\nArtist = require('./artist.coffee')\nVexTab = require('./vextab.coffee')\n\nVex.Flow.TabDiv = function(sel, options) {\n  if (arguments.length > 0) this.init(sel, options);\n}\n\nVex.Flow.TabDiv.SEL = \".vex-tabdiv\";\nVex.Flow.TabDiv.ERROR_NOCANVAS =\n  \"<b>This browser does not support HTML5 Canvas</b><br/>\" +\n  \"Please use a modern browser such as <a href='http://google.com/chrome'>\" +\n  \"Google Chrome</a> or <a href='http://firefox.com'>Firefox</a>.\";\n\nVex.Flow.TabDiv.prototype.init = function(sel, options) {\n  this.sel = sel;\n\n  // Grab code and clear tabdiv\n  this.code = $(sel).text();\n  $(sel).empty();\n  if ($(sel).css(\"position\") == \"static\") {\n    $(sel).css(\"position\", \"relative\");\n  }\n\n  // Get tabdiv properties\n  this.width = parseInt($(sel).attr(\"width\")) || 400;\n  this.height = parseInt($(sel).attr(\"height\")) || 200;\n  this.scale = parseFloat($(sel).attr(\"scale\")) || 1.0;\n\n  // If the Raphael.js sources are included, then use Raphael, else\n  // resort to HTML5 Canvas.\n  if (typeof (Raphael) == \"undefined\") {\n    this.canvas = $('<canvas></canvas>').addClass(\"vex-canvas\");\n    $(sel).append(this.canvas);\n    this.renderer = new Vex.Flow.Renderer(this.canvas[0],\n        Vex.Flow.Renderer.Backends.CANVAS);\n  } else {\n    this.canvas = $('<div></div>').addClass(\"vex-canvas\");\n    $(sel).append(this.canvas);\n    this.renderer = new Vex.Flow.Renderer(this.canvas[0],\n        Vex.Flow.Renderer.Backends.RAPHAEL);\n  }\n\n  this.ctx_sel = $(sel).find(\".vex-canvas\");\n  this.renderer.resize(this.width, this.height);\n  this.ctx = this.renderer.getContext();\n  this.ctx.setBackgroundFillStyle(this.ctx_sel.css(\"background-color\"));\n  this.ctx.scale(this.scale, this.scale);\n\n  // Grab editor properties\n  this.editor = $(sel).attr(\"editor\") || \"\";\n  this.show_errors = $(sel).attr(\"show-errors\") || \"\";\n  this.editor_width= $(sel).attr(\"editor_width\") || this.width;\n  this.editor_height= $(sel).attr(\"editor_height\") || 200;\n\n  var that = this;\n  if (this.editor == \"true\") {\n    this.text_area = $('<textarea></textarea>').addClass(\"editor\").\n      val(this.code);\n    this.editor_error = $('<div></div>').addClass(\"editor-error\");\n    $(sel).append($('<p/>')).append(this.editor_error);\n    $(sel).append($('<p/>')).append(this.text_area);\n    this.text_area.width(this.editor_width);\n    this.text_area.height(this.editor_height);\n    this.text_area.keyup(function() {\n        if (that.timeoutID) window.clearTimeout(that.timeoutID);\n        that.timeoutID =\n          window.setTimeout(function() {\n            // Draw only if code changed\n            if (that.code != that.text_area.val()) {\n              that.code = that.text_area.val();\n              that.redraw()\n            }\n          }, 250);\n    });\n  } if (this.show_errors == \"true\") {\n    this.editor_error = $('<div></div>').addClass(\"editor-error\");\n    $(sel).append($('<p/>')).append(this.editor_error);\n  }\n\n  // Initialize parser.\n  this.artist = new Artist(10, 0, this.width, {scale: this.scale});\n  this.parser = new VexTab(this.artist);\n\n  if (Vex.Flow.Player) {\n    opts = {};\n    if (options) opts.soundfont_url = options.soundfont_url;\n    this.player = new Vex.Flow.Player(this.artist, opts);\n  }\n\n  this.redraw();\n}\n\nVex.Flow.TabDiv.prototype.redraw = function() {\n  var that = this;\n  Vex.BM(\"Total render time: \", function() {\n      that.parse(); that.draw();});\n\n  return this;\n}\n\nVex.Flow.TabDiv.prototype.drawInternal = function() {\n  if (!this.parser.isValid()) return this;\n  return this.artist.draw(this.renderer);\n}\n\nVex.Flow.TabDiv.prototype.parseInternal = function() {\n  try {\n    this.artist.reset();\n    this.parser.reset();\n    this.parser.parse(this.code);\n    this.editor_error.empty();\n  } catch (e) {\n    if (this.editor_error) {\n      this.editor_error.empty();\n      this.editor_error.append(\n          $('<div></div>').addClass(\"text\").html(\n            \"Sucky VexTab: \" + e.message));\n    }\n  }\n  return this;\n}\n\nVex.Flow.TabDiv.prototype.parse = function() {\n  var that = this;\n  Vex.BM(\"Parse time: \", function() { that.parseInternal(); });\n  return this;\n}\n\nVex.Flow.TabDiv.prototype.draw = function() {\n  var that = this;\n  Vex.BM(\"Draw time: \", function() { that.drawInternal(); });\n  return this;\n}\n\n// Automatic initialization.\nVex.Flow.TabDiv.start = function() {\n  $(Vex.Flow.TabDiv.SEL).each(function(index) {\n      new Vex.Flow.TabDiv(this);\n  });\n}\n\n$(function() {if (Vex.Flow.TabDiv.SEL) { Vex.Flow.TabDiv.start() }});\n\nmodule.exports = {\n  Div: Vex.Flow.TabDiv,\n  VexTab: VexTab,\n  Artist: Artist,\n  Flow: Vex.Flow\n}\n\n},{\"./artist.coffee\":8,\"./vextab.coffee\":10,\"jquery\":5,\"vexflow\":7}],10:[function(require,module,exports){\nvar Vex, VexTab, parser, _,\n  __slice = [].slice,\n  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };\n\nVex = require('vexflow');\n\n_ = require('underscore');\n\nparser = require('../build/vextab-jison.js');\n\nVexTab = (function() {\n  var L, newError;\n\n  VexTab.DEBUG = false;\n\n  L = function() {\n    var args;\n    args = 1 <= arguments.length ? __slice.call(arguments, 0) : [];\n    if (VexTab.DEBUG) {\n      return typeof console !== \"undefined\" && console !== null ? console.log.apply(console, [\"(Vex.Flow.VexTab)\"].concat(__slice.call(args))) : void 0;\n    }\n  };\n\n  newError = function(object, msg) {\n    return new Vex.RERR(\"ParseError\", \"\" + msg + \" in line \" + object._l + \" column \" + object._c);\n  };\n\n  function VexTab(artist) {\n    this.artist = artist;\n    this.reset();\n  }\n\n  VexTab.prototype.reset = function() {\n    this.valid = false;\n    return this.elements = false;\n  };\n\n  VexTab.prototype.isValid = function() {\n    return this.valid;\n  };\n\n  VexTab.prototype.getArtist = function() {\n    return this.artist;\n  };\n\n  VexTab.prototype.parseStaveOptions = function(options) {\n    var clefs, e, error, notation_option, num_strings, option, params, voices, _i, _len, _ref, _ref1, _ref2;\n    params = {};\n    if (options == null) {\n      return params;\n    }\n    notation_option = null;\n    for (_i = 0, _len = options.length; _i < _len; _i++) {\n      option = options[_i];\n      error = function(msg) {\n        return newError(option, msg);\n      };\n      params[option.key] = option.value;\n      switch (option.key) {\n        case \"notation\":\n        case \"tablature\":\n          notation_option = option;\n          if ((_ref = option.value) !== \"true\" && _ref !== \"false\") {\n            throw error(\"'\" + option.key + \"' must be 'true' or 'false'\");\n          }\n          break;\n        case \"key\":\n          if (!_.has(Vex.Flow.keySignature.keySpecs, option.value)) {\n            throw error(\"Invalid key signature '\" + option.value + \"'\");\n          }\n          break;\n        case \"clef\":\n          clefs = [\"treble\", \"bass\", \"tenor\", \"alto\", \"percussion\", \"none\"];\n          if (_ref1 = option.value, __indexOf.call(clefs, _ref1) < 0) {\n            throw error(\"'clef' must be one of \" + (clefs.join(', ')));\n          }\n          break;\n        case \"voice\":\n          voices = [\"top\", \"bottom\", \"new\"];\n          if (_ref2 = option.value, __indexOf.call(voices, _ref2) < 0) {\n            throw error(\"'voice' must be one of \" + (voices.join(', ')));\n          }\n          break;\n        case \"time\":\n          try {\n            new Vex.Flow.TimeSignature(option.value);\n          } catch (_error) {\n            e = _error;\n            throw error(\"Invalid time signature: '\" + option.value + \"'\");\n          }\n          break;\n        case \"tuning\":\n          try {\n            new Vex.Flow.Tuning(option.value);\n          } catch (_error) {\n            e = _error;\n            throw error(\"Invalid tuning: '\" + option.value + \"'\");\n          }\n          break;\n        case \"strings\":\n          num_strings = parseInt(option.value);\n          if (num_strings < 4 || num_strings > 8) {\n            throw error(\"Invalid number of strings: \" + num_strings);\n          }\n          break;\n        default:\n          throw error(\"Invalid option '\" + option.key + \"'\");\n      }\n    }\n    if (params.notation === \"false\" && params.tablature === \"false\") {\n      throw newError(notation_option, \"Both 'notation' and 'tablature' can't be invisible\");\n    }\n    return params;\n  };\n\n  VexTab.prototype.parseCommand = function(element) {\n    if (element.command === \"bar\") {\n      this.artist.addBar(element.type);\n    }\n    if (element.command === \"tuplet\") {\n      this.artist.makeTuplets(element.params.tuplet, element.params.notes);\n    }\n    if (element.command === \"annotations\") {\n      this.artist.addAnnotations(element.params);\n    }\n    if (element.command === \"rest\") {\n      this.artist.addRest(element.params);\n    }\n    if (element.command === \"command\") {\n      return this.artist.runCommand(element.params, element._l, element._c);\n    }\n  };\n\n  VexTab.prototype.parseChord = function(element) {\n    L(\"parseChord:\", element);\n    return this.artist.addChord(_.map(element.chord, function(note) {\n      return _.pick(note, 'time', 'dot', 'fret', 'abc', 'octave', 'string', 'articulation', 'decorator');\n    }), element.articulation, element.decorator);\n  };\n\n  VexTab.prototype.parseFret = function(note) {\n    return this.artist.addNote(_.pick(note, 'time', 'dot', 'fret', 'string', 'articulation', 'decorator'));\n  };\n\n  VexTab.prototype.parseABC = function(note) {\n    return this.artist.addNote(_.pick(note, 'time', 'dot', 'fret', 'abc', 'octave', 'string', 'articulation', 'decorator'));\n  };\n\n  VexTab.prototype.parseStaveElements = function(notes) {\n    var element, _i, _len, _results;\n    L(\"parseStaveElements:\", notes);\n    _results = [];\n    for (_i = 0, _len = notes.length; _i < _len; _i++) {\n      element = notes[_i];\n      if (element.time) {\n        this.artist.setDuration(element.time, element.dot);\n      }\n      if (element.command) {\n        this.parseCommand(element);\n      }\n      if (element.chord) {\n        this.parseChord(element);\n      }\n      if (element.abc) {\n        _results.push(this.parseABC(element));\n      } else if (element.fret) {\n        _results.push(this.parseFret(element));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  VexTab.prototype.parseStaveText = function(text_line) {\n    var bartext, command, createNote, font, justification, position, smooth, str, text, _i, _len, _results;\n    if (!_.isEmpty(text_line)) {\n      this.artist.addTextVoice();\n    }\n    position = 0;\n    justification = \"center\";\n    smooth = true;\n    font = null;\n    bartext = (function(_this) {\n      return function() {\n        return _this.artist.addTextNote(\"\", 0, justification, false, true);\n      };\n    })(this);\n    createNote = (function(_this) {\n      return function(text) {\n        var e, ignore_ticks;\n        ignore_ticks = false;\n        if (text[0] === \"|\") {\n          ignore_ticks = true;\n          text = text.slice(1);\n        }\n        try {\n          return _this.artist.addTextNote(text, position, justification, smooth, ignore_ticks);\n        } catch (_error) {\n          e = _error;\n          throw newError(str, \"Bad text or duration. Did you forget a comma?\" + e);\n        }\n      };\n    })(this);\n    _results = [];\n    for (_i = 0, _len = text_line.length; _i < _len; _i++) {\n      str = text_line[_i];\n      text = str.text.trim();\n      if (text.match(/\\.font=.*/)) {\n        font = text.slice(6);\n        _results.push(this.artist.setTextFont(font));\n      } else if (text[0] === \":\") {\n        _results.push(this.artist.setDuration(text));\n      } else if (text[0] === \".\") {\n        command = text.slice(1);\n        switch (command) {\n          case \"center\":\n          case \"left\":\n          case \"right\":\n            _results.push(justification = command);\n            break;\n          case \"strict\":\n            _results.push(smooth = false);\n            break;\n          case \"smooth\":\n            _results.push(smooth = true);\n            break;\n          case \"bar\":\n          case \"|\":\n            _results.push(bartext());\n            break;\n          default:\n            _results.push(position = parseInt(text.slice(1), 10));\n        }\n      } else if (text === \"|\") {\n        _results.push(bartext());\n      } else if (text.slice(0, 2) === \"++\") {\n        _results.push(this.artist.addTextVoice());\n      } else {\n        _results.push(createNote(text));\n      }\n    }\n    return _results;\n  };\n\n  VexTab.prototype.generate = function() {\n    var e, option, options, stave, _i, _j, _len, _len1, _ref, _ref1, _results;\n    _ref = this.elements;\n    _results = [];\n    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n      stave = _ref[_i];\n      switch (stave.element) {\n        case \"stave\":\n        case \"tabstave\":\n          this.artist.addStave(stave.element, this.parseStaveOptions(stave.options));\n          if (stave.notes != null) {\n            this.parseStaveElements(stave.notes);\n          }\n          if (stave.text != null) {\n            _results.push(this.parseStaveText(stave.text));\n          } else {\n            _results.push(void 0);\n          }\n          break;\n        case \"voice\":\n          this.artist.addVoice(this.parseStaveOptions(stave.options));\n          if (stave.notes != null) {\n            this.parseStaveElements(stave.notes);\n          }\n          if (stave.text != null) {\n            _results.push(this.parseStaveText(stave.text));\n          } else {\n            _results.push(void 0);\n          }\n          break;\n        case \"options\":\n          options = {};\n          _ref1 = stave.params;\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            option = _ref1[_j];\n            options[option.key] = option.value;\n          }\n          try {\n            _results.push(this.artist.setOptions(options));\n          } catch (_error) {\n            e = _error;\n            throw newError(stave, e.message);\n          }\n          break;\n        default:\n          throw newError(stave, \"Invalid keyword '\" + stave.element + \"'\");\n      }\n    }\n    return _results;\n  };\n\n  VexTab.prototype.parse = function(code) {\n    var line, stripped_code;\n    parser.parseError = function(message, hash) {\n      L(\"VexTab parse error: \", message, hash);\n      message = \"Unexpected text '\" + hash.text + \"' at line \" + hash.loc.first_line + \" column \" + hash.loc.first_column + \".\";\n      throw new Vex.RERR(\"ParseError\", message);\n    };\n    if (code == null) {\n      throw new Vex.RERR(\"ParseError\", \"No code\");\n    }\n    L(\"Parsing:\\n\" + code);\n    stripped_code = (function() {\n      var _i, _len, _ref, _results;\n      _ref = code.split(/\\r\\n|\\r|\\n/);\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        line = _ref[_i];\n        _results.push(line.trim());\n      }\n      return _results;\n    })();\n    this.elements = parser.parse(stripped_code.join(\"\\n\"));\n    if (this.elements) {\n      this.generate();\n      this.valid = true;\n    }\n    return this.elements;\n  };\n\n  return VexTab;\n\n})();\n\nmodule.exports = VexTab;\n\n\n\n},{\"../build/vextab-jison.js\":1,\"underscore\":6,\"vexflow\":7}]},{},[9])(9)\n});","//top level object for earscape app\nvar ESC = {};","/*\n* Utility array functions\n*/\nESC.array = {};\n/*\n* Shuffle function taken from:\n* http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n*/\nESC.array.shuffle = function(array) {\n    var cloneArray = array.slice(0);\n    var currentIndex = cloneArray.length;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n        // Pick a remaining element...\n        var randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        var temporaryValue = cloneArray[currentIndex];\n        cloneArray[currentIndex] = cloneArray[randomIndex];\n        cloneArray[randomIndex] = temporaryValue;\n    }\n\n  return cloneArray;\n}\n\nESC.array.randItem = function(array){\n\treturn array[Math.floor(Math.random() * array.length)];\n}\n/*\n* Returns array of numbers from start to end exclusive (one less than the end number)\n*/\nESC.array.range = function(start, end){\n    var a = [];\n    for (var i = start; i < end; i++) {\n        a.push(i);\n    };\n    return a;\n}","ESC.models = {};\n\n/*\n* Model for pitch information\n* noteNum is integer 0-11 with C being 0\n* octave is integer 1-8\n*/\nESC.models.Pitch = function(noteNum, octave){\n\tthis.noteNum = noteNum;\n\tthis.octave = octave;\n}\n\nESC.models.Pitch.pitchNames = ['C', 'C#', 'D', 'Eb', 'E', 'F', 'F#', 'G', 'Ab', 'A', 'Bb', 'B'];\n\nESC.models.Pitch.prototype.toNotation = function(){\n\treturn ESC.models.Pitch.pitchNames[this.noteNum].replace('b', '@') + '/' + this.octave;\n}\nESC.models.Pitch.prototype.toString = function(){\n\treturn ESC.models.Pitch.pitchNames[this.noteNum] + this.octave;\n}\nESC.models.Pitch.prototype.toHTML = function(){\n\treturn ESC.models.Pitch.pitchNames[this.noteNum].replace('#', '&#9839;').replace('b', '&#9837;');\n}\n/*\n* gets total value of Pitch by combining noteNum and octave\n* used to get inversion\n*/\nESC.models.Pitch.prototype.totalValue = function(){\n\treturn this.octave * 12 + this.noteNum;\n}\nESC.models.Pitch.prototype.transpose = function(halfSteps){\n\tvar newValue = this.totalValue() + halfSteps;\n\tthis.noteNum = newValue % 12;\n\tthis.octave = Math.floor(newValue / 12);\n}\nESC.models.Pitch.pitchFromTotalValue = function(totalValue){\n\tvar pitch = new ESC.models.Pitch(0, 0);\n\tpitch.transpose(totalValue);\n\treturn pitch;\n}\nESC.models.Pitch.prototype.copy = function(){\n\treturn new ESC.models.Pitch(this.noteNum, this.octave);\n}\n\n/*\n* Model for rhythm information\n* duration is the number of 64th note triplets in note (i.e quarter is 24) - lowest number is 1\n* duration can also be string value (i.e. quarter) - taken from name keys in durationInfo\n*/\nESC.models.Rhythm = function(duration){\n\tif(typeof duration === 'string' && isNaN(parseInt(duration))){\n\t\tduration = this.nameToDuration(duration);\t\n\t}\n\telse{\n\t\tduration = parseInt(duration);\n\t}\n\tthis.duration = duration;\n}\nESC.models.Rhythm.durationMap = { '6' : {name : 'sixteenth', notation : ':16'}, \n\t\t\t\t\t\t\t\t\t\t\t'12' : {name : 'eighth', notation: ':16'}, \n\t\t\t\t\t\t\t\t\t\t\t'18' : {name : 'dottedEighth', notation : ':8d'}, \n\t\t\t\t\t\t\t\t\t\t\t'24': {name: 'quarter', notation: ':q'}, \n\t\t\t\t\t\t\t\t\t\t\t'36' : {name: 'dottedQuarter', notation: ':qd'}, \n\t\t\t\t\t\t\t\t\t\t\t'48' : {name: 'half', notation : ':h'},\n\t\t\t\t\t\t\t\t\t\t\t'72' : {name: 'dottedHalf', notation : ':hd'},\n\t\t\t\t\t\t\t\t\t\t\t'96' : {name : 'whole', notation : ':w'}\n\t\t\t\t\t\t\t\t\t\t};\nESC.models.Rhythm.prototype.nameToDuration = function(name){\n\tfor(var key in ESC.models.Rhythm.durationMap){\n\t\tif(ESC.models.Rhythm.durationMap[key].name === name){\n\t\t\treturn parseInt(key);\n\t\t}\n\t}\n}\nESC.models.Rhythm.prototype.toString = function() {\n\treturn ESC.models.Rhythm.durationMap[this.duration].name;\n}\nESC.models.Rhythm.prototype.toNotation = function(){\n\treturn ESC.models.Rhythm.durationMap[this.duration].notation;\t\n}\n\n/*\n* Model for melody, which is a container for pitch and rhythm information\n* pitches is array of Pitches\n* rhythms is array of Rhythms\n*/\nESC.models.Melody = function(){\n\tthis.pitches = [];\n\tthis.rhythms = [];\n\tthis.tempo = 120;\n\tthis.timeSignature = {top: 4, bottom: 4};\n}\nESC.models.Melody.transformationTypes = ['original', 'inversion', 'retrograde', 'retrograde_inversion'];\n/*\n* Returns string formatted for vextab to turn into notation\n*/\nESC.models.Melody.prototype.toNotation = function(){\n\tvar notation = 'tabstave notation=true tablature=false\\nnotes';\n\tvar len = this.pitches.length;\n\tfor (var i = 0; i < len; i++) {\n\t\tnotation = notation + ' ' + this.rhythms[i].toNotation() + ' ' + this.pitches[i].toNotation();\n\t};\n\treturn notation;\n}\n/*\n* Returns Band.js player instance - call .play function to play melody\n* options is {} with possible values of tempo : int\n*/\nESC.models.Melody.prototype.getPlayer = function(conductor){\n\tconductor.setTimeSignature(this.timeSignature.top, this.timeSignature.bottom);\n\tvar piano = conductor.createInstrument();\n\tvar len = this.pitches.length;\n\tfor (var i = 0; i < len; i++) {\n\t\tpiano.note(this.rhythms[i].toString(), this.pitches[i].toString());\n\t};\n\treturn conductor.finish();\n}\nESC.models.Melody.prototype.getTitle = function(){\n\tvar title = '';\n\tthis.pitches.forEach(function(pitch) {\n\t\ttitle = title + pitch.toHTML() + '-';\n\t});\n\treturn title.slice(0, - 1);\n}\n\nESC.models.Melody.prototype.copy = function(){\n\tvar copy = new ESC.models.Melody();\n\tcopy.tempo = this.tempo;\n\tcopy.timeSignature.top = this.timeSignature.top;\n\tcopy.timeSignature.bottom = this.timeSignature.bottom; \n\tvar len = this.pitches.length;\n\tfor (var i = 0; i < len; i++) {\n\t\tcopy.pitches.push(this.pitches[i].copy());\n\t\tcopy.rhythms.push(new ESC.models.Rhythm(this.rhythms[i].duration));\n\t};\n\treturn copy;\n}\nESC.models.Melody.prototype.retrograde = function(){\n\tvar retrograde = this.copy();\n\tretrograde.pitches.reverse();\n\tretrograde.rhythms.reverse();\n\treturn retrograde;\n}\n/*\n* Inversion does not handle octave changes correctly (for now)\n*/\nESC.models.Melody.prototype.inversion = function(){\n\tvar inverse = this.copy();\n\n\tvar diffArray = [inverse.pitches[0].totalValue()];\n\tfor (var i = 1; i < inverse.pitches.length; i++) {\n\t\tvar currentTotalValue = inverse.pitches[i].totalValue();\n\t\tdiffArray.push(currentTotalValue);\n\t\tvar diff =  currentTotalValue - diffArray[i-1];\n\t\t\n\t\tinverse.pitches[i] = ESC.models.Pitch.pitchFromTotalValue(inverse.pitches[i-1].totalValue() - diff);\n\t};\n\treturn inverse;\n}\nESC.models.Melody.prototype.retrogradeInversion = function(){\n\treturn this.retrograde().inversion();\n}\n\n/*\n* Melody Factory\n* Class to conveniently build various kinds of melodies\n*/\nESC.models.MelodyFactory = function(){};\n\nESC.models.MelodyFactory.getToneRow = function(){\n\tvar melody = new ESC.models.Melody();\n\tvar pitches = ESC.array.shuffle(ESC.array.range(0,12));\n\tfor(var i=0;i<12;i++){\n\t\tmelody.pitches.push(new ESC.models.Pitch(pitches[i], 4));\n\t\tmelody.rhythms.push(ESC.models.MelodyFactory.randRhythm());\n\t}\n\treturn melody;\n}\n/*\n* Return ESC.models.Rhythm object of random duration\n*/\nESC.models.MelodyFactory.randRhythm = function(){\n\treturn new ESC.models.Rhythm(ESC.array.randItem(Object.keys(ESC.models.Rhythm.durationMap)));\n}\n/*\n* Takes a melody and return a new melody with pitches replaced with new random ones\n* @param melody - instance of ESC.models.Melody\n*/\nESC.models.MelodyFactory.replacePitches = function(melody){\n\tvar newMelody = melody.copy();\n\tnewMelody.pitches = [];\n\tvar len = melody.pitches.length;\n\tvar pitches = ESC.array.shuffle(ESC.array.range(0,12));\n\tfor (var i = 0; i < len; i++) {\n\t\tnewMelody.pitches.push(new ESC.models.Pitch(pitches[i], 4));\n\t};\n\treturn newMelody;\n}\n\n/*\n* Takes a melody and return a new melody with rhythms replaced with new random ones\n* @param melody - instance of ESC.models.Melody\n*/\nESC.models.MelodyFactory.replaceRhythms = function(melody){\n\tvar newMelody = melody.copy();\n\tnewMelody.rhythms = [];\n\tvar len = melody.rhythms.length;\n\tfor (var i = 0; i < len; i++) {\n\t\tnewMelody.rhythms.push(ESC.models.MelodyFactory.randRhythm());\n\t};\n\treturn newMelody;\n}","ESC.controllers = {};\n\n/*\n* PlayItem - container for playlist items\n* @param melody is instance of ESC.models.Melody\n* baseMelody is original melody before any transformations\n* currentMelody is the current melody after any transformations (inversion, retrograde, etc)\n*/\nESC.controllers.PlayItem = function(melody){\n\tthis.baseMelody = melody;\n\tthis.currentMelody = melody;\n\tthis.isStarred = false;\n\tthis.melodyState = 'original';\n}\n/* \n* options is {} with possible values of tempo : int\n*/\nESC.controllers.PlayItem.prototype.play = function(conductor){\n\treturn this.currentMelody.getPlayer(conductor);\n}\nESC.controllers.PlayItem.prototype.getNotation = function(){\n\treturn this.currentMelody.toNotation();\n}\nESC.controllers.PlayItem.prototype.getTitle = function(){\n\treturn this.currentMelody.getTitle();\n}\n\nESC.controllers.PlayItem.prototype.setTransformation = function(type){\n\tif(type === 'retrograde'){\n\t\tthis.currentMelody = this.baseMelody.retrograde();\n\t\tthis.melodyState = type;\n\t}\n\telse if(type === 'inversion'){\n\t\tthis.currentMelody = this.baseMelody.inversion();\n\t\tthis.melodyState = type;\n\t}\n\telse if(type === 'retrograde_inversion'){\n\t\tthis.currentMelody = this.baseMelody.retrogradeInversion();\n\t\tthis.melodyState = type;\t\n\t}\n\t//type is original\n\telse{\n\t\tthis.currentMelody = this.baseMelody;\n\t\tthis.melodyState = 'original';\n\t}\n}\nESC.controllers.PlayItem.prototype.toHTML = function(){\n\treturn this.getTitle() + '<span class=\"star\"><svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 50 50\"><path d=\"M11,47.8c-0.3,0-0.5-0.1-0.8-0.3c-0.5-0.4-0.6-0.9-0.5-1.4l5-15.5L1.6,21c-0.5-0.4-0.6-0.9-0.5-1.4c0.1-0.5,0.6-0.9,1.3-0.9h16.4l4.9-15.6c0.1-0.5,0.6-0.9,1.3-0.9s1,0.4,1.3,0.9l5,15.6h16.4c0.5,0,1,0.3,1.3,0.8c0.3,0.5,0,1.2-0.5,1.4l-13.1,9.5l5,15.5c0.1,0.5,0,1.2-0.5,1.4c-0.5,0.3-1,0.4-1.5,0L24.9,38l-13.1,9.5C11.5,47.7,11.2,47.8,11,47.8L11,47.8z M24.9,35.1c0.3,0,0.5,0.1,0.8,0.3l10.7,7.9l-4.1-12.6c-0.1-0.5,0-1.2,0.5-1.4l10.7-7.9H30.2c-0.5,0-1-0.4-1.3-0.9l-4-12.6l-4.1,12.6c-0.1,0.5-0.6,0.9-1.3,0.9H6.2l10.7,7.9c0.5,0.4,0.6,0.9,0.5,1.4l-4,12.6l10.7-7.9C24.4,35.2,24.7,35.1,24.9,35.1L24.9,35.1z\"/><path class=\"star_center\" d=\"M24.9,35.1c0.3,0,0.5,0.1,0.8,0.3l10.7,7.9l-4.1-12.6c-0.1-0.5,0-1.2,0.5-1.4l10.7-7.9H30.2c-0.5,0-1-0.4-1.3-0.9l-4-12.6l-4.1,12.6c-0.1,0.5-0.6,0.9-1.3,0.9H6.2l10.7,7.9c0.5,0.4,0.6,0.9,0.5,1.4l-4,12.6l10.7-7.9C24.4,35.2,24.7,35.1,24.9,35.1L24.9,35.1z\"/></svg></span>';\n}\n\n/*\n* Jukebox - master controller for app\n* keeps track of a list of PlayItems\n*/\nESC.controllers.Jukebox = function(){\n\tthis.playItems = [];\n\tthis.currentPlayItemIndex = -1;\n\tthis.currentPlayItem = null;\n\tthis.conductor = new BandJS();\n\tthis.setTempo(120);\n\t\n}\nESC.controllers.Jukebox.prototype.addPlayItem = function(playItem){\n\tthis.playItems.push(playItem);\n\tvar play_items_list = document.getElementById('play_items_list');\n\tplay_items_list.innerHTML = play_items_list.innerHTML + \"<li>\" + playItem.toHTML() +  \"</li>\";\n\tthis.setCurrentPlayItem(this.playItems.length - 1);\n\t//scroll to added item\n\tvar playlist = $('.playlist');\n\tplaylist.scrollTop(playlist[0].scrollHeight);\n}\n\nESC.controllers.Jukebox.prototype.setCurrentPlayItem = function(index){\n\tthis.currentPlayItemIndex = index;\n\tthis.currentPlayItem = this.playItems[index];\n\t\n\t//sets selected state in play_items_list\n\tvar allPlaylistItems = $('#play_items_list li');\n\tallPlaylistItems.removeClass('selected');\n\tallPlaylistItems.eq(index).addClass('selected');\n\n\tthis.displayMelodyState(this.currentPlayItem.melodyState);\n\n\t//displays sheet music\n\tthis.displayCurrentPlayItem();\n}\nESC.controllers.Jukebox.prototype.displayCurrentPlayItem = function(){\n\t//displays notation - adapted from: https://groups.google.com/forum/?fromgroups#!topic/vexflow/sgj9bjcSx9Y\n\tvar artist = new VexTabDiv.Artist(10, 10, 600, {scale: 0.8});\n\tvar vextab = new VexTabDiv.VexTab(artist);\n\t//1 is enum for CANVAS - using VexTabDiv.Flow.Renderer.Backends.CANVAS doesn't work for some reason\n\t//'sheet_music_canvas' is name of id of canvas element\n\tvar renderer = new VexTabDiv.Flow.Renderer('sheet_music_canvas', 1);\n\ttry {\n          vextab.reset();\n          artist.reset();\n          vextab.parse(this.currentPlayItem.getNotation());\n          artist.render(renderer);\n        } catch (e) {\n          console.log(e);\n        }\n}\nESC.controllers.Jukebox.prototype.play = function(){\n\tthis.conductor.setTempo(this.tempo); //changing tempo while song is playing causes weird distortion\n\t//clear instruments since this.currentPlayItem.play(this.conductor) will load instruments into the conductor\n\t//this has the same effect as clearing the last played melody from conductor's memory\n\t//doesn't prevent playing multiple melodies at the same time\n\tthis.conductor.instruments = [];\n\tthis.player = this.currentPlayItem.play(this.conductor);\n\tthis.player.play();\n}\nESC.controllers.Jukebox.prototype.newPlayItem = function(){\n\tthis.addPlayItem(new ESC.controllers.PlayItem(ESC.models.MelodyFactory.getToneRow()));\n}\nESC.controllers.Jukebox.prototype.melodyWithNew = function(attr){\n\tvar newMelody;\n\tif(attr === 'notes'){\n\t\tnewMelody = ESC.models.MelodyFactory.replacePitches(this.currentPlayItem.currentMelody);\n\t}\n\t// replace rhythm\n\telse{\n\t\tnewMelody = ESC.models.MelodyFactory.replaceRhythms(this.currentPlayItem.currentMelody);\n\t}\n\tthis.addPlayItem(new ESC.controllers.PlayItem(newMelody));\n}\nESC.controllers.Jukebox.prototype.transformMelody = function(type){\n\tthis.currentPlayItem.setTransformation(type);\n\tthis.displayMelodyState(this.currentPlayItem.melodyState);\n\tthis.displayCurrentPlayItem();\n}\nESC.controllers.Jukebox.prototype.setTempo = function(tempo){\n\ttempo = parseInt(tempo);\n\tif(!(isNaN(tempo) || tempo > 300 || tempo < 40)){\n\t\tthis.tempo = tempo;\n\t}\n\t$('#tempo_input, #tempo_slider').val(this.tempo);\n}\nESC.controllers.Jukebox.prototype.displayMelodyState = function(melodyState){\n\t$('.transformations li').removeClass('selected');\n\t$('#button_transform_' + melodyState).addClass('selected');\n}\n","ESC.jukebox = new ESC.controllers.Jukebox();\nESC.jukebox.newPlayItem();\ndocument.getElementById('play_button').onclick = function(){ESC.jukebox.play();};\ndocument.getElementById('new_button').onclick = function(){ESC.jukebox.newPlayItem();};\n\ndocument.getElementById('button_replace_notes').onclick = function(){ESC.jukebox.melodyWithNew('notes')};\ndocument.getElementById('button_replace_rhythm').onclick = function(){ESC.jukebox.melodyWithNew('rhythm')};\n\n(function(){\n\tfor (var i = 0; i < ESC.models.Melody.transformationTypes.length; i++) {\n\t\tvar type = ESC.models.Melody.transformationTypes[i];\n\t\t(function(type){document.getElementById('button_transform_' + type).onclick = function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tESC.jukebox.transformMelody(type);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t})(type);\n\t};\n})();\n\n\n$('#tempo_input, #tempo_slider').on('change', function(event) {\n\tESC.jukebox.setTempo(this.value);\n});\n\n$('#play_items_list').on('click', 'li', function(){\n\tvar index = $('#play_items_list li').index($(this));\n\tESC.jukebox.setCurrentPlayItem(index);\n});\n$('#play_items_list').on('click', '.star', function(e){\n\te.stopPropagation(); //so that play item is not selected\n\t$(this).toggleClass('starred');\n});\n\n\n"],"sourceRoot":"/source/"}